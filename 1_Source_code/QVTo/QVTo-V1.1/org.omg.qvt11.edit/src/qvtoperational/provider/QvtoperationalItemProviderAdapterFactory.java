/**
 */
package qvtoperational.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import qvtoperational.util.QvtoperationalAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class QvtoperationalItemProviderAdapterFactory extends QvtoperationalAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public QvtoperationalItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.Constructor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstructorItemProvider constructorItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.Constructor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstructorAdapter() {
		if (constructorItemProvider == null) {
			constructorItemProvider = new ConstructorItemProvider(this);
		}

		return constructorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ConstructorBody} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstructorBodyItemProvider constructorBodyItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ConstructorBody}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstructorBodyAdapter() {
		if (constructorBodyItemProvider == null) {
			constructorBodyItemProvider = new ConstructorBodyItemProvider(this);
		}

		return constructorBodyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ContextualProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextualPropertyItemProvider contextualPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ContextualProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextualPropertyAdapter() {
		if (contextualPropertyItemProvider == null) {
			contextualPropertyItemProvider = new ContextualPropertyItemProvider(this);
		}

		return contextualPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.EntryOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntryOperationItemProvider entryOperationItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.EntryOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntryOperationAdapter() {
		if (entryOperationItemProvider == null) {
			entryOperationItemProvider = new EntryOperationItemProvider(this);
		}

		return entryOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.Helper} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HelperItemProvider helperItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.Helper}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHelperAdapter() {
		if (helperItemProvider == null) {
			helperItemProvider = new HelperItemProvider(this);
		}

		return helperItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ImperativeCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImperativeCallExpItemProvider imperativeCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ImperativeCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImperativeCallExpAdapter() {
		if (imperativeCallExpItemProvider == null) {
			imperativeCallExpItemProvider = new ImperativeCallExpItemProvider(this);
		}

		return imperativeCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ImperativeOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImperativeOperationItemProvider imperativeOperationItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ImperativeOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImperativeOperationAdapter() {
		if (imperativeOperationItemProvider == null) {
			imperativeOperationItemProvider = new ImperativeOperationItemProvider(this);
		}

		return imperativeOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.Library} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LibraryItemProvider libraryItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.Library}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLibraryAdapter() {
		if (libraryItemProvider == null) {
			libraryItemProvider = new LibraryItemProvider(this);
		}

		return libraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingBody} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingBodyItemProvider mappingBodyItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingBody}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingBodyAdapter() {
		if (mappingBodyItemProvider == null) {
			mappingBodyItemProvider = new MappingBodyItemProvider(this);
		}

		return mappingBodyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingCallExpItemProvider mappingCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingCallExpAdapter() {
		if (mappingCallExpItemProvider == null) {
			mappingCallExpItemProvider = new MappingCallExpItemProvider(this);
		}

		return mappingCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingOperationItemProvider mappingOperationItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingOperationAdapter() {
		if (mappingOperationItemProvider == null) {
			mappingOperationItemProvider = new MappingOperationItemProvider(this);
		}

		return mappingOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingParameterItemProvider mappingParameterItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingParameterAdapter() {
		if (mappingParameterItemProvider == null) {
			mappingParameterItemProvider = new MappingParameterItemProvider(this);
		}

		return mappingParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ModelParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelParameterItemProvider modelParameterItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ModelParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelParameterAdapter() {
		if (modelParameterItemProvider == null) {
			modelParameterItemProvider = new ModelParameterItemProvider(this);
		}

		return modelParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTypeItemProvider modelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelTypeAdapter() {
		if (modelTypeItemProvider == null) {
			modelTypeItemProvider = new ModelTypeItemProvider(this);
		}

		return modelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.Module} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleItemProvider moduleItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.Module}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleAdapter() {
		if (moduleItemProvider == null) {
			moduleItemProvider = new ModuleItemProvider(this);
		}

		return moduleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ModuleImport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleImportItemProvider moduleImportItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ModuleImport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleImportAdapter() {
		if (moduleImportItemProvider == null) {
			moduleImportItemProvider = new ModuleImportItemProvider(this);
		}

		return moduleImportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ObjectExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectExpItemProvider objectExpItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ObjectExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectExpAdapter() {
		if (objectExpItemProvider == null) {
			objectExpItemProvider = new ObjectExpItemProvider(this);
		}

		return objectExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.OperationBody} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationBodyItemProvider operationBodyItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.OperationBody}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationBodyAdapter() {
		if (operationBodyItemProvider == null) {
			operationBodyItemProvider = new OperationBodyItemProvider(this);
		}

		return operationBodyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.OperationalTransformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationalTransformationItemProvider operationalTransformationItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.OperationalTransformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationalTransformationAdapter() {
		if (operationalTransformationItemProvider == null) {
			operationalTransformationItemProvider = new OperationalTransformationItemProvider(this);
		}

		return operationalTransformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ResolveExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResolveExpItemProvider resolveExpItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ResolveExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResolveExpAdapter() {
		if (resolveExpItemProvider == null) {
			resolveExpItemProvider = new ResolveExpItemProvider(this);
		}

		return resolveExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ResolveInExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResolveInExpItemProvider resolveInExpItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ResolveInExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResolveInExpAdapter() {
		if (resolveInExpItemProvider == null) {
			resolveInExpItemProvider = new ResolveInExpItemProvider(this);
		}

		return resolveInExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.VarParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VarParameterItemProvider varParameterItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.VarParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVarParameterAdapter() {
		if (varParameterItemProvider == null) {
			varParameterItemProvider = new VarParameterItemProvider(this);
		}

		return varParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TopLevelGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TopLevelGOItemProvider topLevelGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TopLevelGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTopLevelGOAdapter() {
		if (topLevelGOItemProvider == null) {
			topLevelGOItemProvider = new TopLevelGOItemProvider(this);
		}

		return topLevelGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.UnitRefGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitRefGOItemProvider unitRefGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.UnitRefGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitRefGOAdapter() {
		if (unitRefGOItemProvider == null) {
			unitRefGOItemProvider = new UnitRefGOItemProvider(this);
		}

		return unitRefGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TagGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TagGOItemProvider tagGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TagGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTagGOAdapter() {
		if (tagGOItemProvider == null) {
			tagGOItemProvider = new TagGOItemProvider(this);
		}

		return tagGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MetaModelGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaModelGOItemProvider metaModelGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MetaModelGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaModelGOAdapter() {
		if (metaModelGOItemProvider == null) {
			metaModelGOItemProvider = new MetaModelGOItemProvider(this);
		}

		return metaModelGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.AccessDecl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessDeclItemProvider accessDeclItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.AccessDecl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessDeclAdapter() {
		if (accessDeclItemProvider == null) {
			accessDeclItemProvider = new AccessDeclItemProvider(this);
		}

		return accessDeclItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TypeDef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeDefItemProvider typeDefItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TypeDef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeDefAdapter() {
		if (typeDefItemProvider == null) {
			typeDefItemProvider = new TypeDefItemProvider(this);
		}

		return typeDefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TransformationHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformationHeaderItemProvider transformationHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TransformationHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformationHeaderAdapter() {
		if (transformationHeaderItemProvider == null) {
			transformationHeaderItemProvider = new TransformationHeaderItemProvider(this);
		}

		return transformationHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.SimpleSignature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleSignatureItemProvider simpleSignatureItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.SimpleSignature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleSignatureAdapter() {
		if (simpleSignatureItemProvider == null) {
			simpleSignatureItemProvider = new SimpleSignatureItemProvider(this);
		}

		return simpleSignatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TransformationUsageRefine} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformationUsageRefineItemProvider transformationUsageRefineItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TransformationUsageRefine}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformationUsageRefineAdapter() {
		if (transformationUsageRefineItemProvider == null) {
			transformationUsageRefineItemProvider = new TransformationUsageRefineItemProvider(this);
		}

		return transformationUsageRefineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ModuleRefGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleRefGOItemProvider moduleRefGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ModuleRefGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleRefGOAdapter() {
		if (moduleRefGOItemProvider == null) {
			moduleRefGOItemProvider = new ModuleRefGOItemProvider(this);
		}

		return moduleRefGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ModuleUsageGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleUsageGOItemProvider moduleUsageGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ModuleUsageGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleUsageGOAdapter() {
		if (moduleUsageGOItemProvider == null) {
			moduleUsageGOItemProvider = new ModuleUsageGOItemProvider(this);
		}

		return moduleUsageGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.LibraryHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LibraryHeaderItemProvider libraryHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.LibraryHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLibraryHeaderAdapter() {
		if (libraryHeaderItemProvider == null) {
			libraryHeaderItemProvider = new LibraryHeaderItemProvider(this);
		}

		return libraryHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.AccessUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessUsageItemProvider accessUsageItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.AccessUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessUsageAdapter() {
		if (accessUsageItemProvider == null) {
			accessUsageItemProvider = new AccessUsageItemProvider(this);
		}

		return accessUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ExtendsUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtendsUsageItemProvider extendsUsageItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ExtendsUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtendsUsageAdapter() {
		if (extendsUsageItemProvider == null) {
			extendsUsageItemProvider = new ExtendsUsageItemProvider(this);
		}

		return extendsUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ScopedIdentifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScopedIdentifierItemProvider scopedIdentifierItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ScopedIdentifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScopedIdentifierAdapter() {
		if (scopedIdentifierItemProvider == null) {
			scopedIdentifierItemProvider = new ScopedIdentifierItemProvider(this);
		}

		return scopedIdentifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ParamList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamListItemProvider paramListItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ParamList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParamListAdapter() {
		if (paramListItemProvider == null) {
			paramListItemProvider = new ParamListItemProvider(this);
		}

		return paramListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ClassifierGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierGOItemProvider classifierGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ClassifierGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierGOAdapter() {
		if (classifierGOItemProvider == null) {
			classifierGOItemProvider = new ClassifierGOItemProvider(this);
		}

		return classifierGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.Declarator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaratorItemProvider declaratorItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.Declarator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaratorAdapter() {
		if (declaratorItemProvider == null) {
			declaratorItemProvider = new DeclaratorItemProvider(this);
		}

		return declaratorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TypeSpec} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeSpecItemProvider typeSpecItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TypeSpec}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeSpecAdapter() {
		if (typeSpecItemProvider == null) {
			typeSpecItemProvider = new TypeSpecItemProvider(this);
		}

		return typeSpecItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.TypeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeReferenceItemProvider typeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.TypeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeReferenceAdapter() {
		if (typeReferenceItemProvider == null) {
			typeReferenceItemProvider = new TypeReferenceItemProvider(this);
		}

		return typeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ComplexType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComplexTypeItemProvider complexTypeItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ComplexType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComplexTypeAdapter() {
		if (complexTypeItemProvider == null) {
			complexTypeItemProvider = new ComplexTypeItemProvider(this);
		}

		return complexTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.DeclaratorList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeclaratorListItemProvider declaratorListItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.DeclaratorList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeclaratorListAdapter() {
		if (declaratorListItemProvider == null) {
			declaratorListItemProvider = new DeclaratorListItemProvider(this);
		}

		return declaratorListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.InitPart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitPartItemProvider initPartItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.InitPart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitPartAdapter() {
		if (initPartItemProvider == null) {
			initPartItemProvider = new InitPartItemProvider(this);
		}

		return initPartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ExpressionSemiList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionSemiListItemProvider expressionSemiListItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ExpressionSemiList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionSemiListAdapter() {
		if (expressionSemiListItemProvider == null) {
			expressionSemiListItemProvider = new ExpressionSemiListItemProvider(this);
		}

		return expressionSemiListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ExpressionList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionListItemProvider expressionListItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ExpressionList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionListAdapter() {
		if (expressionListItemProvider == null) {
			expressionListItemProvider = new ExpressionListItemProvider(this);
		}

		return expressionListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ExpressionBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionBlockItemProvider expressionBlockItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ExpressionBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionBlockAdapter() {
		if (expressionBlockItemProvider == null) {
			expressionBlockItemProvider = new ExpressionBlockItemProvider(this);
		}

		return expressionBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.PackageRefGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageRefGOItemProvider packageRefGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.PackageRefGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageRefGOAdapter() {
		if (packageRefGOItemProvider == null) {
			packageRefGOItemProvider = new PackageRefGOItemProvider(this);
		}

		return packageRefGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MetaModelHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaModelHeaderItemProvider metaModelHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MetaModelHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaModelHeaderAdapter() {
		if (metaModelHeaderItemProvider == null) {
			metaModelHeaderItemProvider = new MetaModelHeaderItemProvider(this);
		}

		return metaModelHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MetaModelElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaModelElementItemProvider metaModelElementItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MetaModelElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaModelElementAdapter() {
		if (metaModelElementItemProvider == null) {
			metaModelElementItemProvider = new MetaModelElementItemProvider(this);
		}

		return metaModelElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.EnumerationGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationGOItemProvider enumerationGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.EnumerationGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationGOAdapter() {
		if (enumerationGOItemProvider == null) {
			enumerationGOItemProvider = new EnumerationGOItemProvider(this);
		}

		return enumerationGOItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ClassifierHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierHeaderItemProvider classifierHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ClassifierHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierHeaderAdapter() {
		if (classifierHeaderItemProvider == null) {
			classifierHeaderItemProvider = new ClassifierHeaderItemProvider(this);
		}

		return classifierHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ClassifierFeatureList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierFeatureListItemProvider classifierFeatureListItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ClassifierFeatureList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierFeatureListAdapter() {
		if (classifierFeatureListItemProvider == null) {
			classifierFeatureListItemProvider = new ClassifierFeatureListItemProvider(this);
		}

		return classifierFeatureListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ClassifierInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierInfoItemProvider classifierInfoItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ClassifierInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierInfoAdapter() {
		if (classifierInfoItemProvider == null) {
			classifierInfoItemProvider = new ClassifierInfoItemProvider(this);
		}

		return classifierInfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ClassifierExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierExtensionItemProvider classifierExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ClassifierExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierExtensionAdapter() {
		if (classifierExtensionItemProvider == null) {
			classifierExtensionItemProvider = new ClassifierExtensionItemProvider(this);
		}

		return classifierExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ScopedIdentifierList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScopedIdentifierListItemProvider scopedIdentifierListItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ScopedIdentifierList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScopedIdentifierListAdapter() {
		if (scopedIdentifierListItemProvider == null) {
			scopedIdentifierListItemProvider = new ScopedIdentifierListItemProvider(this);
		}

		return scopedIdentifierListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ClassifierFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierFeatureItemProvider classifierFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ClassifierFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierFeatureAdapter() {
		if (classifierFeatureItemProvider == null) {
			classifierFeatureItemProvider = new ClassifierFeatureItemProvider(this);
		}

		return classifierFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.Multiplicity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiplicityItemProvider multiplicityItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.Multiplicity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiplicityAdapter() {
		if (multiplicityItemProvider == null) {
			multiplicityItemProvider = new MultiplicityItemProvider(this);
		}

		return multiplicityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.OppositeProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OppositePropertyItemProvider oppositePropertyItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.OppositeProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOppositePropertyAdapter() {
		if (oppositePropertyItemProvider == null) {
			oppositePropertyItemProvider = new OppositePropertyItemProvider(this);
		}

		return oppositePropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.StereotypeQualifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StereotypeQualifierItemProvider stereotypeQualifierItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.StereotypeQualifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStereotypeQualifierAdapter() {
		if (stereotypeQualifierItemProvider == null) {
			stereotypeQualifierItemProvider = new StereotypeQualifierItemProvider(this);
		}

		return stereotypeQualifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.FeatureQualifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureQualifierItemProvider featureQualifierItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.FeatureQualifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureQualifierAdapter() {
		if (featureQualifierItemProvider == null) {
			featureQualifierItemProvider = new FeatureQualifierItemProvider(this);
		}

		return featureQualifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.CompleteSignature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompleteSignatureItemProvider completeSignatureItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.CompleteSignature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompleteSignatureAdapter() {
		if (completeSignatureItemProvider == null) {
			completeSignatureItemProvider = new CompleteSignatureItemProvider(this);
		}

		return completeSignatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.EnumerationHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationHeaderItemProvider enumerationHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.EnumerationHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationHeaderAdapter() {
		if (enumerationHeaderItemProvider == null) {
			enumerationHeaderItemProvider = new EnumerationHeaderItemProvider(this);
		}

		return enumerationHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.HelperInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HelperInfoItemProvider helperInfoItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.HelperInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHelperInfoAdapter() {
		if (helperInfoItemProvider == null) {
			helperInfoItemProvider = new HelperInfoItemProvider(this);
		}

		return helperInfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.HelperHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HelperHeaderItemProvider helperHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.HelperHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHelperHeaderAdapter() {
		if (helperHeaderItemProvider == null) {
			helperHeaderItemProvider = new HelperHeaderItemProvider(this);
		}

		return helperHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ConstructorHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstructorHeaderItemProvider constructorHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ConstructorHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstructorHeaderAdapter() {
		if (constructorHeaderItemProvider == null) {
			constructorHeaderItemProvider = new ConstructorHeaderItemProvider(this);
		}

		return constructorHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.EntryHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntryHeaderItemProvider entryHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.EntryHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntryHeaderAdapter() {
		if (entryHeaderItemProvider == null) {
			entryHeaderItemProvider = new EntryHeaderItemProvider(this);
		}

		return entryHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingHeaderItemProvider mappingHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingHeaderAdapter() {
		if (mappingHeaderItemProvider == null) {
			mappingHeaderItemProvider = new MappingHeaderItemProvider(this);
		}

		return mappingHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingFullHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingFullHeaderItemProvider mappingFullHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingFullHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingFullHeaderAdapter() {
		if (mappingFullHeaderItemProvider == null) {
			mappingFullHeaderItemProvider = new MappingFullHeaderItemProvider(this);
		}

		return mappingFullHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingExtra} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingExtraItemProvider mappingExtraItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingExtra}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingExtraAdapter() {
		if (mappingExtraItemProvider == null) {
			mappingExtraItemProvider = new MappingExtraItemProvider(this);
		}

		return mappingExtraItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingExtensionItemProvider mappingExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingExtensionAdapter() {
		if (mappingExtensionItemProvider == null) {
			mappingExtensionItemProvider = new MappingExtensionItemProvider(this);
		}

		return mappingExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.MappingRefinement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingRefinementItemProvider mappingRefinementItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.MappingRefinement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingRefinementAdapter() {
		if (mappingRefinementItemProvider == null) {
			mappingRefinementItemProvider = new MappingRefinementItemProvider(this);
		}

		return mappingRefinementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.PopulationSection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PopulationSectionItemProvider populationSectionItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.PopulationSection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPopulationSectionAdapter() {
		if (populationSectionItemProvider == null) {
			populationSectionItemProvider = new PopulationSectionItemProvider(this);
		}

		return populationSectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link qvtoperational.ExpressionGO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionGOItemProvider expressionGOItemProvider;

	/**
	 * This creates an adapter for a {@link qvtoperational.ExpressionGO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionGOAdapter() {
		if (expressionGOItemProvider == null) {
			expressionGOItemProvider = new ExpressionGOItemProvider(this);
		}

		return expressionGOItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (constructorItemProvider != null) constructorItemProvider.dispose();
		if (constructorBodyItemProvider != null) constructorBodyItemProvider.dispose();
		if (contextualPropertyItemProvider != null) contextualPropertyItemProvider.dispose();
		if (entryOperationItemProvider != null) entryOperationItemProvider.dispose();
		if (helperItemProvider != null) helperItemProvider.dispose();
		if (imperativeCallExpItemProvider != null) imperativeCallExpItemProvider.dispose();
		if (imperativeOperationItemProvider != null) imperativeOperationItemProvider.dispose();
		if (libraryItemProvider != null) libraryItemProvider.dispose();
		if (mappingBodyItemProvider != null) mappingBodyItemProvider.dispose();
		if (mappingCallExpItemProvider != null) mappingCallExpItemProvider.dispose();
		if (mappingOperationItemProvider != null) mappingOperationItemProvider.dispose();
		if (mappingParameterItemProvider != null) mappingParameterItemProvider.dispose();
		if (modelParameterItemProvider != null) modelParameterItemProvider.dispose();
		if (modelTypeItemProvider != null) modelTypeItemProvider.dispose();
		if (moduleItemProvider != null) moduleItemProvider.dispose();
		if (moduleImportItemProvider != null) moduleImportItemProvider.dispose();
		if (objectExpItemProvider != null) objectExpItemProvider.dispose();
		if (operationBodyItemProvider != null) operationBodyItemProvider.dispose();
		if (operationalTransformationItemProvider != null) operationalTransformationItemProvider.dispose();
		if (resolveExpItemProvider != null) resolveExpItemProvider.dispose();
		if (resolveInExpItemProvider != null) resolveInExpItemProvider.dispose();
		if (varParameterItemProvider != null) varParameterItemProvider.dispose();
		if (topLevelGOItemProvider != null) topLevelGOItemProvider.dispose();
		if (unitRefGOItemProvider != null) unitRefGOItemProvider.dispose();
		if (tagGOItemProvider != null) tagGOItemProvider.dispose();
		if (metaModelGOItemProvider != null) metaModelGOItemProvider.dispose();
		if (accessDeclItemProvider != null) accessDeclItemProvider.dispose();
		if (typeDefItemProvider != null) typeDefItemProvider.dispose();
		if (transformationHeaderItemProvider != null) transformationHeaderItemProvider.dispose();
		if (simpleSignatureItemProvider != null) simpleSignatureItemProvider.dispose();
		if (transformationUsageRefineItemProvider != null) transformationUsageRefineItemProvider.dispose();
		if (moduleRefGOItemProvider != null) moduleRefGOItemProvider.dispose();
		if (moduleUsageGOItemProvider != null) moduleUsageGOItemProvider.dispose();
		if (libraryHeaderItemProvider != null) libraryHeaderItemProvider.dispose();
		if (accessUsageItemProvider != null) accessUsageItemProvider.dispose();
		if (extendsUsageItemProvider != null) extendsUsageItemProvider.dispose();
		if (scopedIdentifierItemProvider != null) scopedIdentifierItemProvider.dispose();
		if (paramListItemProvider != null) paramListItemProvider.dispose();
		if (classifierGOItemProvider != null) classifierGOItemProvider.dispose();
		if (declaratorItemProvider != null) declaratorItemProvider.dispose();
		if (typeSpecItemProvider != null) typeSpecItemProvider.dispose();
		if (typeReferenceItemProvider != null) typeReferenceItemProvider.dispose();
		if (complexTypeItemProvider != null) complexTypeItemProvider.dispose();
		if (declaratorListItemProvider != null) declaratorListItemProvider.dispose();
		if (initPartItemProvider != null) initPartItemProvider.dispose();
		if (expressionSemiListItemProvider != null) expressionSemiListItemProvider.dispose();
		if (expressionListItemProvider != null) expressionListItemProvider.dispose();
		if (expressionBlockItemProvider != null) expressionBlockItemProvider.dispose();
		if (packageRefGOItemProvider != null) packageRefGOItemProvider.dispose();
		if (metaModelHeaderItemProvider != null) metaModelHeaderItemProvider.dispose();
		if (metaModelElementItemProvider != null) metaModelElementItemProvider.dispose();
		if (enumerationGOItemProvider != null) enumerationGOItemProvider.dispose();
		if (classifierHeaderItemProvider != null) classifierHeaderItemProvider.dispose();
		if (classifierFeatureListItemProvider != null) classifierFeatureListItemProvider.dispose();
		if (classifierInfoItemProvider != null) classifierInfoItemProvider.dispose();
		if (classifierExtensionItemProvider != null) classifierExtensionItemProvider.dispose();
		if (scopedIdentifierListItemProvider != null) scopedIdentifierListItemProvider.dispose();
		if (classifierFeatureItemProvider != null) classifierFeatureItemProvider.dispose();
		if (multiplicityItemProvider != null) multiplicityItemProvider.dispose();
		if (oppositePropertyItemProvider != null) oppositePropertyItemProvider.dispose();
		if (stereotypeQualifierItemProvider != null) stereotypeQualifierItemProvider.dispose();
		if (featureQualifierItemProvider != null) featureQualifierItemProvider.dispose();
		if (completeSignatureItemProvider != null) completeSignatureItemProvider.dispose();
		if (enumerationHeaderItemProvider != null) enumerationHeaderItemProvider.dispose();
		if (helperInfoItemProvider != null) helperInfoItemProvider.dispose();
		if (helperHeaderItemProvider != null) helperHeaderItemProvider.dispose();
		if (constructorHeaderItemProvider != null) constructorHeaderItemProvider.dispose();
		if (entryHeaderItemProvider != null) entryHeaderItemProvider.dispose();
		if (mappingHeaderItemProvider != null) mappingHeaderItemProvider.dispose();
		if (mappingFullHeaderItemProvider != null) mappingFullHeaderItemProvider.dispose();
		if (mappingExtraItemProvider != null) mappingExtraItemProvider.dispose();
		if (mappingExtensionItemProvider != null) mappingExtensionItemProvider.dispose();
		if (mappingRefinementItemProvider != null) mappingRefinementItemProvider.dispose();
		if (populationSectionItemProvider != null) populationSectionItemProvider.dispose();
		if (expressionGOItemProvider != null) expressionGOItemProvider.dispose();
	}

}
