/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.xcore.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter
import org.xtext.example.xcore.services.XcoreGrammarAccess
import xcore.XAnnotation
import xcore.XPackage

class XcoreFormatter extends XbaseFormatter {
	
	@Inject extension XcoreGrammarAccess

	def dispatch void format(XPackage xPackage, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (xAnnotation : xPackage.annotations) {
			xAnnotation.format
		}
		for (xImportDirective : xPackage.importDirectives) {
			xImportDirective.format
		}
		for (xAnnotationDirective : xPackage.annotationDirectives) {
			xAnnotationDirective.format
		}
		for (xClassifier : xPackage.classifiers) {
			xClassifier.format
		}
	}

	def dispatch void format(XAnnotation xAnnotation, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (_xAnnotation : xAnnotation.annotations) {
			_xAnnotation.format
		}
		for (xStringToStringMapEntry : xAnnotation.details) {
			xStringToStringMapEntry.format
		}
	}
	
	// TODO: implement for XImportDirective, XAnnotationDirective, XTypeParameter, XClass, XDataType, XEnum, XGenericType, XAttribute, XOperation, XReference, XParameter, XEnumLiteral, XBlockExpression
}
