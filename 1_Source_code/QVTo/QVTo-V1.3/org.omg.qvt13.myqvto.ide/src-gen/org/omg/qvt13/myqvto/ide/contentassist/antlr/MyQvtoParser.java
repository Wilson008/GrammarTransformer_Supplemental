/*
 * generated by Xtext 2.25.0
 */
package org.omg.qvt13.myqvto.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.omg.qvt13.myqvto.ide.contentassist.antlr.internal.InternalMyQvtoParser;
import org.omg.qvt13.myqvto.services.MyQvtoGrammarAccess;

public class MyQvtoParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyQvtoGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyQvtoGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModuleAccess().getAlternatives(), "rule__Module__Alternatives");
			builder.put(grammarAccess.getImperativeOperationAccess().getAlternatives(), "rule__ImperativeOperation__Alternatives");
			builder.put(grammarAccess.getModuleImportAccess().getAlternatives(), "rule__ModuleImport__Alternatives");
			builder.put(grammarAccess.getModuleImportAccess().getAlternatives_0_3(), "rule__ModuleImport__Alternatives_0_3");
			builder.put(grammarAccess.getEntryOperationAccess().getAlternatives_1(), "rule__EntryOperation__Alternatives_1");
			builder.put(grammarAccess.getConstructorAccess().getAlternatives_1(), "rule__Constructor__Alternatives_1");
			builder.put(grammarAccess.getHelperAccess().getAlternatives_1(), "rule__Helper__Alternatives_1");
			builder.put(grammarAccess.getLibraryAccess().getAlternatives_1(), "rule__Library__Alternatives_1");
			builder.put(grammarAccess.getMappingOperationAccess().getAlternatives_1(), "rule__MappingOperation__Alternatives_1");
			builder.put(grammarAccess.getOperationalTransformationAccess().getAlternatives_1(), "rule__OperationalTransformation__Alternatives_1");
			builder.put(grammarAccess.getMetaModelGOAccess().getAlternatives_1(), "rule__MetaModelGO__Alternatives_1");
			builder.put(grammarAccess.getClassifierGOAccess().getAlternatives_1(), "rule__ClassifierGO__Alternatives_1");
			builder.put(grammarAccess.getPopulationSectionAccess().getAlternatives(), "rule__PopulationSection__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getDeclaratorAccess().getAlternatives(), "rule__Declarator__Alternatives");
			builder.put(grammarAccess.getInitPartAccess().getInit_opAlternatives_0_0(), "rule__InitPart__Init_opAlternatives_0_0");
			builder.put(grammarAccess.getTypeReferenceAccess().getAlternatives(), "rule__TypeReference__Alternatives");
			builder.put(grammarAccess.getComplexTypeAccess().getAlternatives(), "rule__ComplexType__Alternatives");
			builder.put(grammarAccess.getPackageRefGOAccess().getAlternatives_1(), "rule__PackageRefGO__Alternatives_1");
			builder.put(grammarAccess.getModuleUsageGOAccess().getAlternatives(), "rule__ModuleUsageGO__Alternatives");
			builder.put(grammarAccess.getMappingExtraAccess().getAlternatives(), "rule__MappingExtra__Alternatives");
			builder.put(grammarAccess.getTransformationUsageRefineAccess().getAlternatives(), "rule__TransformationUsageRefine__Alternatives");
			builder.put(grammarAccess.getMetaModelHeaderAccess().getAlternatives_0(), "rule__MetaModelHeader__Alternatives_0");
			builder.put(grammarAccess.getMetaModelElementAccess().getAlternatives(), "rule__MetaModelElement__Alternatives");
			builder.put(grammarAccess.getEnumerationGOAccess().getAlternatives_2(), "rule__EnumerationGO__Alternatives_2");
			builder.put(grammarAccess.getClassifierInfoAccess().getAlternatives(), "rule__ClassifierInfo__Alternatives");
			builder.put(grammarAccess.getClassifierFeatureAccess().getAlternatives(), "rule__ClassifierFeature__Alternatives");
			builder.put(grammarAccess.getClassifierFeatureAccess().getAlternatives_0_2(), "rule__ClassifierFeature__Alternatives_0_2");
			builder.put(grammarAccess.getDirectionKindAccess().getAlternatives(), "rule__DirectionKind__Alternatives");
			builder.put(grammarAccess.getComplexTypeKeyAccess().getAlternatives(), "rule__ComplexTypeKey__Alternatives");
			builder.put(grammarAccess.getCollectionKeyAccess().getAlternatives(), "rule__CollectionKey__Alternatives");
			builder.put(grammarAccess.getGeneralQualifierAccess().getAlternatives(), "rule__GeneralQualifier__Alternatives");
			builder.put(grammarAccess.getPropertyKeyAccess().getAlternatives(), "rule__PropertyKey__Alternatives");
			builder.put(grammarAccess.getHelperKindAccess().getAlternatives(), "rule__HelperKind__Alternatives");
			builder.put(grammarAccess.getModuleKindAccess().getAlternatives(), "rule__ModuleKind__Alternatives");
			builder.put(grammarAccess.getMappingExtensionKeyAccess().getAlternatives(), "rule__MappingExtensionKey__Alternatives");
			builder.put(grammarAccess.getFeatureKeyAccess().getAlternatives(), "rule__FeatureKey__Alternatives");
			builder.put(grammarAccess.getTopLevelGOAccess().getGroup(), "rule__TopLevelGO__Group__0");
			builder.put(grammarAccess.getModuleImportAccess().getGroup_0(), "rule__ModuleImport__Group_0__0");
			builder.put(grammarAccess.getModuleImportAccess().getGroup_0_3_0(), "rule__ModuleImport__Group_0_3_0__0");
			builder.put(grammarAccess.getModuleImportAccess().getGroup_0_3_0_1(), "rule__ModuleImport__Group_0_3_0_1__0");
			builder.put(grammarAccess.getModuleImportAccess().getGroup_1(), "rule__ModuleImport__Group_1__0");
			builder.put(grammarAccess.getEntryOperationAccess().getGroup(), "rule__EntryOperation__Group__0");
			builder.put(grammarAccess.getEntryOperationAccess().getGroup_1_1(), "rule__EntryOperation__Group_1_1__0");
			builder.put(grammarAccess.getExpressionGOAccess().getGroup(), "rule__ExpressionGO__Group__0");
			builder.put(grammarAccess.getModelTypeAccess().getGroup(), "rule__ModelType__Group__0");
			builder.put(grammarAccess.getModelTypeAccess().getGroup_5(), "rule__ModelType__Group_5__0");
			builder.put(grammarAccess.getModelTypeAccess().getGroup_6(), "rule__ModelType__Group_6__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
			builder.put(grammarAccess.getConstructorAccess().getGroup_1_1(), "rule__Constructor__Group_1_1__0");
			builder.put(grammarAccess.getContextualPropertyAccess().getGroup(), "rule__ContextualProperty__Group__0");
			builder.put(grammarAccess.getHelperAccess().getGroup(), "rule__Helper__Group__0");
			builder.put(grammarAccess.getHelperAccess().getGroup_1_1(), "rule__Helper__Group_1_1__0");
			builder.put(grammarAccess.getHelperAccess().getGroup_1_2(), "rule__Helper__Group_1_2__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup(), "rule__Library__Group__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_1_1(), "rule__Library__Group_1_1__0");
			builder.put(grammarAccess.getMappingOperationAccess().getGroup(), "rule__MappingOperation__Group__0");
			builder.put(grammarAccess.getMappingOperationAccess().getGroup_1_1(), "rule__MappingOperation__Group_1_1__0");
			builder.put(grammarAccess.getOperationalTransformationAccess().getGroup(), "rule__OperationalTransformation__Group__0");
			builder.put(grammarAccess.getOperationalTransformationAccess().getGroup_1_1(), "rule__OperationalTransformation__Group_1_1__0");
			builder.put(grammarAccess.getTagGOAccess().getGroup(), "rule__TagGO__Group__0");
			builder.put(grammarAccess.getTagGOAccess().getGroup_3(), "rule__TagGO__Group_3__0");
			builder.put(grammarAccess.getMetaModelGOAccess().getGroup(), "rule__MetaModelGO__Group__0");
			builder.put(grammarAccess.getMetaModelGOAccess().getGroup_1_1(), "rule__MetaModelGO__Group_1_1__0");
			builder.put(grammarAccess.getAccessDeclAccess().getGroup(), "rule__AccessDecl__Group__0");
			builder.put(grammarAccess.getTypeDefAccess().getGroup(), "rule__TypeDef__Group__0");
			builder.put(grammarAccess.getClassifierGOAccess().getGroup(), "rule__ClassifierGO__Group__0");
			builder.put(grammarAccess.getClassifierGOAccess().getGroup_1_1(), "rule__ClassifierGO__Group_1_1__0");
			builder.put(grammarAccess.getVarParameterAccess().getGroup(), "rule__VarParameter__Group__0");
			builder.put(grammarAccess.getEntryHeaderAccess().getGroup(), "rule__EntryHeader__Group__0");
			builder.put(grammarAccess.getExpressionBlockAccess().getGroup(), "rule__ExpressionBlock__Group__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup(), "rule__MappingBody__Group__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup_1(), "rule__MappingBody__Group_1__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup_1_2(), "rule__MappingBody__Group_1_2__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup_1_2_1(), "rule__MappingBody__Group_1_2_1__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup_3(), "rule__MappingBody__Group_3__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup_3_2(), "rule__MappingBody__Group_3_2__0");
			builder.put(grammarAccess.getMappingBodyAccess().getGroup_3_2_1(), "rule__MappingBody__Group_3_2_1__0");
			builder.put(grammarAccess.getPopulationSectionAccess().getGroup_0(), "rule__PopulationSection__Group_0__0");
			builder.put(grammarAccess.getPopulationSectionAccess().getGroup_1(), "rule__PopulationSection__Group_1__0");
			builder.put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
			builder.put(grammarAccess.getExpressionSemiListAccess().getGroup(), "rule__ExpressionSemiList__Group__0");
			builder.put(grammarAccess.getExpressionSemiListAccess().getGroup_2(), "rule__ExpressionSemiList__Group_2__0");
			builder.put(grammarAccess.getDeclaratorAccess().getGroup_0(), "rule__Declarator__Group_0__0");
			builder.put(grammarAccess.getDeclaratorAccess().getGroup_1(), "rule__Declarator__Group_1__0");
			builder.put(grammarAccess.getTypeSpecAccess().getGroup(), "rule__TypeSpec__Group__0");
			builder.put(grammarAccess.getTypeSpecAccess().getGroup_1(), "rule__TypeSpec__Group_1__0");
			builder.put(grammarAccess.getInitPartAccess().getGroup(), "rule__InitPart__Group__0");
			builder.put(grammarAccess.getScopedIdentifierAccess().getGroup(), "rule__ScopedIdentifier__Group__0");
			builder.put(grammarAccess.getScopedIdentifierAccess().getGroup_2(), "rule__ScopedIdentifier__Group_2__0");
			builder.put(grammarAccess.getTypeReferenceAccess().getGroup_0(), "rule__TypeReference__Group_0__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup_0(), "rule__ComplexType__Group_0__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup_1(), "rule__ComplexType__Group_1__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup_2(), "rule__ComplexType__Group_2__0");
			builder.put(grammarAccess.getComplexTypeAccess().getGroup_3(), "rule__ComplexType__Group_3__0");
			builder.put(grammarAccess.getDeclaratorListAccess().getGroup(), "rule__DeclaratorList__Group__0");
			builder.put(grammarAccess.getDeclaratorListAccess().getGroup_2(), "rule__DeclaratorList__Group_2__0");
			builder.put(grammarAccess.getSimpleSignatureAccess().getGroup(), "rule__SimpleSignature__Group__0");
			builder.put(grammarAccess.getParamListAccess().getGroup(), "rule__ParamList__Group__0");
			builder.put(grammarAccess.getParamListAccess().getGroup_2(), "rule__ParamList__Group_2__0");
			builder.put(grammarAccess.getPackageRefGOAccess().getGroup(), "rule__PackageRefGO__Group__0");
			builder.put(grammarAccess.getPackageRefGOAccess().getGroup_1_0(), "rule__PackageRefGO__Group_1_0__0");
			builder.put(grammarAccess.getPackageRefGOAccess().getGroup_1_0_1(), "rule__PackageRefGO__Group_1_0_1__0");
			builder.put(grammarAccess.getConstructorHeaderAccess().getGroup(), "rule__ConstructorHeader__Group__0");
			builder.put(grammarAccess.getHelperHeaderAccess().getGroup(), "rule__HelperHeader__Group__0");
			builder.put(grammarAccess.getHelperInfoAccess().getGroup(), "rule__HelperInfo__Group__0");
			builder.put(grammarAccess.getCompleteSignatureAccess().getGroup(), "rule__CompleteSignature__Group__0");
			builder.put(grammarAccess.getCompleteSignatureAccess().getGroup_1(), "rule__CompleteSignature__Group_1__0");
			builder.put(grammarAccess.getLibraryHeaderAccess().getGroup(), "rule__LibraryHeader__Group__0");
			builder.put(grammarAccess.getModuleUsageGOAccess().getGroup_0(), "rule__ModuleUsageGO__Group_0__0");
			builder.put(grammarAccess.getAccessUsageAccess().getGroup(), "rule__AccessUsage__Group__0");
			builder.put(grammarAccess.getAccessUsageAccess().getGroup_4(), "rule__AccessUsage__Group_4__0");
			builder.put(grammarAccess.getExtendsUsageAccess().getGroup(), "rule__ExtendsUsage__Group__0");
			builder.put(grammarAccess.getExtendsUsageAccess().getGroup_4(), "rule__ExtendsUsage__Group_4__0");
			builder.put(grammarAccess.getModuleRefGOAccess().getGroup(), "rule__ModuleRefGO__Group__0");
			builder.put(grammarAccess.getMappingFullHeaderAccess().getGroup(), "rule__MappingFullHeader__Group__0");
			builder.put(grammarAccess.getMappingFullHeaderAccess().getGroup_1(), "rule__MappingFullHeader__Group_1__0");
			builder.put(grammarAccess.getMappingFullHeaderAccess().getGroup_2(), "rule__MappingFullHeader__Group_2__0");
			builder.put(grammarAccess.getMappingHeaderAccess().getGroup(), "rule__MappingHeader__Group__0");
			builder.put(grammarAccess.getMappingExtraAccess().getGroup_0(), "rule__MappingExtra__Group_0__0");
			builder.put(grammarAccess.getMappingExtensionAccess().getGroup(), "rule__MappingExtension__Group__0");
			builder.put(grammarAccess.getMappingRefinementAccess().getGroup(), "rule__MappingRefinement__Group__0");
			builder.put(grammarAccess.getScopedIdentifierListAccess().getGroup(), "rule__ScopedIdentifierList__Group__0");
			builder.put(grammarAccess.getScopedIdentifierListAccess().getGroup_2(), "rule__ScopedIdentifierList__Group_2__0");
			builder.put(grammarAccess.getTransformationHeaderAccess().getGroup(), "rule__TransformationHeader__Group__0");
			builder.put(grammarAccess.getTransformationUsageRefineAccess().getGroup_0(), "rule__TransformationUsageRefine__Group_0__0");
			builder.put(grammarAccess.getTransformationUsageRefineAccess().getGroup_1(), "rule__TransformationUsageRefine__Group_1__0");
			builder.put(grammarAccess.getMetaModelHeaderAccess().getGroup(), "rule__MetaModelHeader__Group__0");
			builder.put(grammarAccess.getMetaModelElementAccess().getGroup_0(), "rule__MetaModelElement__Group_0__0");
			builder.put(grammarAccess.getEnumerationGOAccess().getGroup(), "rule__EnumerationGO__Group__0");
			builder.put(grammarAccess.getEnumerationGOAccess().getGroup_2_1(), "rule__EnumerationGO__Group_2_1__0");
			builder.put(grammarAccess.getEnumerationGOAccess().getGroup_2_1_2(), "rule__EnumerationGO__Group_2_1_2__0");
			builder.put(grammarAccess.getEnumerationHeaderAccess().getGroup(), "rule__EnumerationHeader__Group__0");
			builder.put(grammarAccess.getClassifierHeaderAccess().getGroup(), "rule__ClassifierHeader__Group__0");
			builder.put(grammarAccess.getClassifierFeatureListAccess().getGroup(), "rule__ClassifierFeatureList__Group__0");
			builder.put(grammarAccess.getClassifierFeatureListAccess().getGroup_2(), "rule__ClassifierFeatureList__Group_2__0");
			builder.put(grammarAccess.getClassifierInfoAccess().getGroup_0(), "rule__ClassifierInfo__Group_0__0");
			builder.put(grammarAccess.getClassifierInfoAccess().getGroup_3(), "rule__ClassifierInfo__Group_3__0");
			builder.put(grammarAccess.getClassifierExtensionAccess().getGroup(), "rule__ClassifierExtension__Group__0");
			builder.put(grammarAccess.getClassifierFeatureAccess().getGroup_0(), "rule__ClassifierFeature__Group_0__0");
			builder.put(grammarAccess.getClassifierFeatureAccess().getGroup_0_2_0(), "rule__ClassifierFeature__Group_0_2_0__0");
			builder.put(grammarAccess.getFeatureQualifierAccess().getGroup(), "rule__FeatureQualifier__Group__0");
			builder.put(grammarAccess.getMultiplicityAccess().getGroup(), "rule__Multiplicity__Group__0");
			builder.put(grammarAccess.getOppositePropertyAccess().getGroup(), "rule__OppositeProperty__Group__0");
			builder.put(grammarAccess.getStereotypeQualifierAccess().getGroup(), "rule__StereotypeQualifier__Group__0");
			builder.put(grammarAccess.getStereotypeQualifierAccess().getGroup_3(), "rule__StereotypeQualifier__Group_3__0");
			builder.put(grammarAccess.getUnitRefGOAccess().getGroup(), "rule__UnitRefGO__Group__0");
			builder.put(grammarAccess.getUnitRefGOAccess().getGroup_2(), "rule__UnitRefGO__Group_2__0");
			builder.put(grammarAccess.getTopLevelGOAccess().getModuleimportAssignment_1(), "rule__TopLevelGO__ModuleimportAssignment_1");
			builder.put(grammarAccess.getTopLevelGOAccess().getUnit_elementAssignment_2(), "rule__TopLevelGO__Unit_elementAssignment_2");
			builder.put(grammarAccess.getModuleImportAccess().getUnitAssignment_0_1(), "rule__ModuleImport__UnitAssignment_0_1");
			builder.put(grammarAccess.getModuleImportAccess().getIdentifierAssignment_0_3_0_0(), "rule__ModuleImport__IdentifierAssignment_0_3_0_0");
			builder.put(grammarAccess.getModuleImportAccess().getIdentifierAssignment_0_3_0_1_1(), "rule__ModuleImport__IdentifierAssignment_0_3_0_1_1");
			builder.put(grammarAccess.getModuleImportAccess().getUnitAssignment_1_1(), "rule__ModuleImport__UnitAssignment_1_1");
			builder.put(grammarAccess.getEntryOperationAccess().getEntry_headerAssignment_0(), "rule__EntryOperation__Entry_headerAssignment_0");
			builder.put(grammarAccess.getEntryOperationAccess().getExpression_blockAssignment_1_1_0(), "rule__EntryOperation__Expression_blockAssignment_1_1_0");
			builder.put(grammarAccess.getExpressionGOAccess().getDummyContentAssignment_1(), "rule__ExpressionGO__DummyContentAssignment_1");
			builder.put(grammarAccess.getModelTypeAccess().getNameAssignment_1(), "rule__ModelType__NameAssignment_1");
			builder.put(grammarAccess.getModelTypeAccess().getCompliance_kindAssignment_2(), "rule__ModelType__Compliance_kindAssignment_2");
			builder.put(grammarAccess.getModelTypeAccess().getPackageref_listAssignment_4(), "rule__ModelType__Packageref_listAssignment_4");
			builder.put(grammarAccess.getModelTypeAccess().getPackageref_listAssignment_5_1(), "rule__ModelType__Packageref_listAssignment_5_1");
			builder.put(grammarAccess.getModelTypeAccess().getModeltype_whereAssignment_6_1(), "rule__ModelType__Modeltype_whereAssignment_6_1");
			builder.put(grammarAccess.getConstructorAccess().getConstructor_headerAssignment_0(), "rule__Constructor__Constructor_headerAssignment_0");
			builder.put(grammarAccess.getConstructorAccess().getExpression_blockAssignment_1_1_0(), "rule__Constructor__Expression_blockAssignment_1_1_0");
			builder.put(grammarAccess.getContextualPropertyAccess().getProperty_keyAssignment_1(), "rule__ContextualProperty__Property_keyAssignment_1");
			builder.put(grammarAccess.getContextualPropertyAccess().getDeclaratorAssignment_2(), "rule__ContextualProperty__DeclaratorAssignment_2");
			builder.put(grammarAccess.getHelperAccess().getHelper_headerAssignment_0(), "rule__Helper__Helper_headerAssignment_0");
			builder.put(grammarAccess.getHelperAccess().getExpressionAssignment_1_1_1(), "rule__Helper__ExpressionAssignment_1_1_1");
			builder.put(grammarAccess.getHelperAccess().getExpression_blockAssignment_1_2_0(), "rule__Helper__Expression_blockAssignment_1_2_0");
			builder.put(grammarAccess.getLibraryAccess().getLibrary_hAssignment_0(), "rule__Library__Library_hAssignment_0");
			builder.put(grammarAccess.getLibraryAccess().getModule_elementAssignment_1_1_1(), "rule__Library__Module_elementAssignment_1_1_1");
			builder.put(grammarAccess.getMappingOperationAccess().getMapping_full_headerAssignment_0(), "rule__MappingOperation__Mapping_full_headerAssignment_0");
			builder.put(grammarAccess.getMappingOperationAccess().getMapping_bodyAssignment_1_1_1(), "rule__MappingOperation__Mapping_bodyAssignment_1_1_1");
			builder.put(grammarAccess.getOperationalTransformationAccess().getTransformation_hAssignment_0(), "rule__OperationalTransformation__Transformation_hAssignment_0");
			builder.put(grammarAccess.getOperationalTransformationAccess().getModule_elementAssignment_1_1_1(), "rule__OperationalTransformation__Module_elementAssignment_1_1_1");
			builder.put(grammarAccess.getTagGOAccess().getTagidAssignment_1(), "rule__TagGO__TagidAssignment_1");
			builder.put(grammarAccess.getTagGOAccess().getScoped_identifierAssignment_2(), "rule__TagGO__Scoped_identifierAssignment_2");
			builder.put(grammarAccess.getTagGOAccess().getTagvalueAssignment_3_1(), "rule__TagGO__TagvalueAssignment_3_1");
			builder.put(grammarAccess.getMetaModelGOAccess().getMetamodel_hAssignment_0(), "rule__MetaModelGO__Metamodel_hAssignment_0");
			builder.put(grammarAccess.getMetaModelGOAccess().getMetamodel_elementAssignment_1_1_1(), "rule__MetaModelGO__Metamodel_elementAssignment_1_1_1");
			builder.put(grammarAccess.getAccessDeclAccess().getAccess_usageAssignment_0(), "rule__AccessDecl__Access_usageAssignment_0");
			builder.put(grammarAccess.getTypeDefAccess().getNameAssignment_1(), "rule__TypeDef__NameAssignment_1");
			builder.put(grammarAccess.getTypeDefAccess().getTypespecAssignment_3(), "rule__TypeDef__TypespecAssignment_3");
			builder.put(grammarAccess.getClassifierGOAccess().getClassifier_hAssignment_0(), "rule__ClassifierGO__Classifier_hAssignment_0");
			builder.put(grammarAccess.getClassifierGOAccess().getClassifier_feature_listAssignment_1_1_1(), "rule__ClassifierGO__Classifier_feature_listAssignment_1_1_1");
			builder.put(grammarAccess.getVarParameterAccess().getKindAssignment_0(), "rule__VarParameter__KindAssignment_0");
			builder.put(grammarAccess.getVarParameterAccess().getDeclaratorAssignment_1(), "rule__VarParameter__DeclaratorAssignment_1");
			builder.put(grammarAccess.getEntryHeaderAccess().getSimple_signatureAssignment_1(), "rule__EntryHeader__Simple_signatureAssignment_1");
			builder.put(grammarAccess.getExpressionBlockAccess().getExpression_listAssignment_2(), "rule__ExpressionBlock__Expression_listAssignment_2");
			builder.put(grammarAccess.getMappingBodyAccess().getInitSectionAssignment_1_2_0(), "rule__MappingBody__InitSectionAssignment_1_2_0");
			builder.put(grammarAccess.getMappingBodyAccess().getInitSectionAssignment_1_2_1_1(), "rule__MappingBody__InitSectionAssignment_1_2_1_1");
			builder.put(grammarAccess.getMappingBodyAccess().getPopulation_sectionAssignment_2(), "rule__MappingBody__Population_sectionAssignment_2");
			builder.put(grammarAccess.getMappingBodyAccess().getEndSectionAssignment_3_2_0(), "rule__MappingBody__EndSectionAssignment_3_2_0");
			builder.put(grammarAccess.getMappingBodyAccess().getEndSectionAssignment_3_2_1_1(), "rule__MappingBody__EndSectionAssignment_3_2_1_1");
			builder.put(grammarAccess.getPopulationSectionAccess().getExpression_listAssignment_0_1(), "rule__PopulationSection__Expression_listAssignment_0_1");
			builder.put(grammarAccess.getPopulationSectionAccess().getExpression_blockAssignment_1_1(), "rule__PopulationSection__Expression_blockAssignment_1_1");
			builder.put(grammarAccess.getExpressionListAccess().getExpression_semi_listAssignment_0(), "rule__ExpressionList__Expression_semi_listAssignment_0");
			builder.put(grammarAccess.getExpressionSemiListAccess().getExpressionAssignment_1(), "rule__ExpressionSemiList__ExpressionAssignment_1");
			builder.put(grammarAccess.getExpressionSemiListAccess().getExpressionAssignment_2_1(), "rule__ExpressionSemiList__ExpressionAssignment_2_1");
			builder.put(grammarAccess.getDeclaratorAccess().getTypespecAssignment_0_0(), "rule__Declarator__TypespecAssignment_0_0");
			builder.put(grammarAccess.getDeclaratorAccess().getInit_partAssignment_0_1(), "rule__Declarator__Init_partAssignment_0_1");
			builder.put(grammarAccess.getDeclaratorAccess().getScoped_identifierAssignment_1_0(), "rule__Declarator__Scoped_identifierAssignment_1_0");
			builder.put(grammarAccess.getDeclaratorAccess().getTypespecAssignment_1_2(), "rule__Declarator__TypespecAssignment_1_2");
			builder.put(grammarAccess.getDeclaratorAccess().getInit_partAssignment_1_3(), "rule__Declarator__Init_partAssignment_1_3");
			builder.put(grammarAccess.getTypeSpecAccess().getType_referenceAssignment_0(), "rule__TypeSpec__Type_referenceAssignment_0");
			builder.put(grammarAccess.getTypeSpecAccess().getExtent_locationAssignment_1_1(), "rule__TypeSpec__Extent_locationAssignment_1_1");
			builder.put(grammarAccess.getInitPartAccess().getInit_opAssignment_0(), "rule__InitPart__Init_opAssignment_0");
			builder.put(grammarAccess.getInitPartAccess().getExpressionAssignment_1(), "rule__InitPart__ExpressionAssignment_1");
			builder.put(grammarAccess.getScopedIdentifierAccess().getIdentifierAssignment_1(), "rule__ScopedIdentifier__IdentifierAssignment_1");
			builder.put(grammarAccess.getScopedIdentifierAccess().getIdentifierAssignment_2_1(), "rule__ScopedIdentifier__IdentifierAssignment_2_1");
			builder.put(grammarAccess.getTypeReferenceAccess().getScoped_identifierAssignment_0_1(), "rule__TypeReference__Scoped_identifierAssignment_0_1");
			builder.put(grammarAccess.getTypeReferenceAccess().getComplex_typeAssignment_1(), "rule__TypeReference__Complex_typeAssignment_1");
			builder.put(grammarAccess.getComplexTypeAccess().getComplex_type_keyAssignment_0_1(), "rule__ComplexType__Complex_type_keyAssignment_0_1");
			builder.put(grammarAccess.getComplexTypeAccess().getCollection_keyAssignment_1_0(), "rule__ComplexType__Collection_keyAssignment_1_0");
			builder.put(grammarAccess.getComplexTypeAccess().getTypespecAssignment_1_2(), "rule__ComplexType__TypespecAssignment_1_2");
			builder.put(grammarAccess.getComplexTypeAccess().getTypespecAssignment_2_2(), "rule__ComplexType__TypespecAssignment_2_2");
			builder.put(grammarAccess.getComplexTypeAccess().getTypespecAssignment_2_4(), "rule__ComplexType__TypespecAssignment_2_4");
			builder.put(grammarAccess.getComplexTypeAccess().getDeclarator_listAssignment_3_2(), "rule__ComplexType__Declarator_listAssignment_3_2");
			builder.put(grammarAccess.getDeclaratorListAccess().getDeclaratorAssignment_1(), "rule__DeclaratorList__DeclaratorAssignment_1");
			builder.put(grammarAccess.getDeclaratorListAccess().getDeclaratorAssignment_2_1(), "rule__DeclaratorList__DeclaratorAssignment_2_1");
			builder.put(grammarAccess.getSimpleSignatureAccess().getParam_listAssignment_2(), "rule__SimpleSignature__Param_listAssignment_2");
			builder.put(grammarAccess.getParamListAccess().getParamAssignment_1(), "rule__ParamList__ParamAssignment_1");
			builder.put(grammarAccess.getParamListAccess().getParamAssignment_2_1(), "rule__ParamList__ParamAssignment_2_1");
			builder.put(grammarAccess.getPackageRefGOAccess().getScoped_identifierAssignment_1_0_0(), "rule__PackageRefGO__Scoped_identifierAssignment_1_0_0");
			builder.put(grammarAccess.getPackageRefGOAccess().getUriAssignment_1_0_1_1(), "rule__PackageRefGO__UriAssignment_1_0_1_1");
			builder.put(grammarAccess.getPackageRefGOAccess().getUriAssignment_1_1(), "rule__PackageRefGO__UriAssignment_1_1");
			builder.put(grammarAccess.getConstructorHeaderAccess().getQualifierAssignment_0(), "rule__ConstructorHeader__QualifierAssignment_0");
			builder.put(grammarAccess.getConstructorHeaderAccess().getScoped_identifierAssignment_2(), "rule__ConstructorHeader__Scoped_identifierAssignment_2");
			builder.put(grammarAccess.getConstructorHeaderAccess().getSimple_signatureAssignment_3(), "rule__ConstructorHeader__Simple_signatureAssignment_3");
			builder.put(grammarAccess.getHelperHeaderAccess().getHelper_infoAssignment_0(), "rule__HelperHeader__Helper_infoAssignment_0");
			builder.put(grammarAccess.getHelperHeaderAccess().getScope_identifierAssignment_1(), "rule__HelperHeader__Scope_identifierAssignment_1");
			builder.put(grammarAccess.getHelperHeaderAccess().getComplete_signatureAssignment_2(), "rule__HelperHeader__Complete_signatureAssignment_2");
			builder.put(grammarAccess.getHelperInfoAccess().getQualifierAssignment_1(), "rule__HelperInfo__QualifierAssignment_1");
			builder.put(grammarAccess.getHelperInfoAccess().getHelper_kindAssignment_2(), "rule__HelperInfo__Helper_kindAssignment_2");
			builder.put(grammarAccess.getCompleteSignatureAccess().getSimple_signatureAssignment_0(), "rule__CompleteSignature__Simple_signatureAssignment_0");
			builder.put(grammarAccess.getCompleteSignatureAccess().getParam_listAssignment_1_1(), "rule__CompleteSignature__Param_listAssignment_1_1");
			builder.put(grammarAccess.getLibraryHeaderAccess().getNameAssignment_2(), "rule__LibraryHeader__NameAssignment_2");
			builder.put(grammarAccess.getLibraryHeaderAccess().getLibrary_signatureAssignment_3(), "rule__LibraryHeader__Library_signatureAssignment_3");
			builder.put(grammarAccess.getLibraryHeaderAccess().getModule_usageAssignment_4(), "rule__LibraryHeader__Module_usageAssignment_4");
			builder.put(grammarAccess.getModuleUsageGOAccess().getAccess_usageAssignment_0_1(), "rule__ModuleUsageGO__Access_usageAssignment_0_1");
			builder.put(grammarAccess.getModuleUsageGOAccess().getExtends_usageAssignment_1(), "rule__ModuleUsageGO__Extends_usageAssignment_1");
			builder.put(grammarAccess.getAccessUsageAccess().getModule_kindAssignment_2(), "rule__AccessUsage__Module_kindAssignment_2");
			builder.put(grammarAccess.getAccessUsageAccess().getModuleref_listAssignment_3(), "rule__AccessUsage__Moduleref_listAssignment_3");
			builder.put(grammarAccess.getAccessUsageAccess().getModuleref_listAssignment_4_1(), "rule__AccessUsage__Moduleref_listAssignment_4_1");
			builder.put(grammarAccess.getExtendsUsageAccess().getModule_kindAssignment_2(), "rule__ExtendsUsage__Module_kindAssignment_2");
			builder.put(grammarAccess.getExtendsUsageAccess().getModuleref_listAssignment_3(), "rule__ExtendsUsage__Moduleref_listAssignment_3");
			builder.put(grammarAccess.getExtendsUsageAccess().getModuleref_listAssignment_4_1(), "rule__ExtendsUsage__Moduleref_listAssignment_4_1");
			builder.put(grammarAccess.getModuleRefGOAccess().getScoped_identifierAssignment_0(), "rule__ModuleRefGO__Scoped_identifierAssignment_0");
			builder.put(grammarAccess.getModuleRefGOAccess().getSimple_signatureAssignment_1(), "rule__ModuleRefGO__Simple_signatureAssignment_1");
			builder.put(grammarAccess.getMappingFullHeaderAccess().getMapping_headerAssignment_0(), "rule__MappingFullHeader__Mapping_headerAssignment_0");
			builder.put(grammarAccess.getMappingFullHeaderAccess().getWhenAssignment_1_1(), "rule__MappingFullHeader__WhenAssignment_1_1");
			builder.put(grammarAccess.getMappingFullHeaderAccess().getWhereAssignment_2_1(), "rule__MappingFullHeader__WhereAssignment_2_1");
			builder.put(grammarAccess.getMappingHeaderAccess().getQualifierAssignment_0(), "rule__MappingHeader__QualifierAssignment_0");
			builder.put(grammarAccess.getMappingHeaderAccess().getParam_directionAssignment_2(), "rule__MappingHeader__Param_directionAssignment_2");
			builder.put(grammarAccess.getMappingHeaderAccess().getScoped_identifierAssignment_3(), "rule__MappingHeader__Scoped_identifierAssignment_3");
			builder.put(grammarAccess.getMappingHeaderAccess().getComplete_signatureAssignment_4(), "rule__MappingHeader__Complete_signatureAssignment_4");
			builder.put(grammarAccess.getMappingHeaderAccess().getMapping_extraAssignment_5(), "rule__MappingHeader__Mapping_extraAssignment_5");
			builder.put(grammarAccess.getMappingExtraAccess().getMapping_extensionAssignment_0_1(), "rule__MappingExtra__Mapping_extensionAssignment_0_1");
			builder.put(grammarAccess.getMappingExtraAccess().getMapping_refinementAssignment_1(), "rule__MappingExtra__Mapping_refinementAssignment_1");
			builder.put(grammarAccess.getMappingExtensionAccess().getMapping_extension_keyAssignment_0(), "rule__MappingExtension__Mapping_extension_keyAssignment_0");
			builder.put(grammarAccess.getMappingExtensionAccess().getScoped_identifier_listAssignment_1(), "rule__MappingExtension__Scoped_identifier_listAssignment_1");
			builder.put(grammarAccess.getMappingRefinementAccess().getScoped_identifierAssignment_1(), "rule__MappingRefinement__Scoped_identifierAssignment_1");
			builder.put(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listAssignment_1(), "rule__ScopedIdentifierList__Scoped_identifier_listAssignment_1");
			builder.put(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listAssignment_2_1(), "rule__ScopedIdentifierList__Scoped_identifier_listAssignment_2_1");
			builder.put(grammarAccess.getTransformationHeaderAccess().getQualifierAssignment_0(), "rule__TransformationHeader__QualifierAssignment_0");
			builder.put(grammarAccess.getTransformationHeaderAccess().getNameAssignment_2(), "rule__TransformationHeader__NameAssignment_2");
			builder.put(grammarAccess.getTransformationHeaderAccess().getTransformation_signatureAssignment_3(), "rule__TransformationHeader__Transformation_signatureAssignment_3");
			builder.put(grammarAccess.getTransformationHeaderAccess().getTransformation_usage_refineAssignment_4(), "rule__TransformationHeader__Transformation_usage_refineAssignment_4");
			builder.put(grammarAccess.getTransformationUsageRefineAccess().getModule_usageAssignment_0_1(), "rule__TransformationUsageRefine__Module_usageAssignment_0_1");
			builder.put(grammarAccess.getTransformationUsageRefineAccess().getTransformation_refineAssignment_1_1(), "rule__TransformationUsageRefine__Transformation_refineAssignment_1_1");
			builder.put(grammarAccess.getMetaModelHeaderAccess().getScoped_identifierAssignment_1(), "rule__MetaModelHeader__Scoped_identifierAssignment_1");
			builder.put(grammarAccess.getMetaModelElementAccess().getClassifierAssignment_0_1(), "rule__MetaModelElement__ClassifierAssignment_0_1");
			builder.put(grammarAccess.getMetaModelElementAccess().getEnumerationAssignment_1(), "rule__MetaModelElement__EnumerationAssignment_1");
			builder.put(grammarAccess.getMetaModelElementAccess().getTagAssignment_2(), "rule__MetaModelElement__TagAssignment_2");
			builder.put(grammarAccess.getEnumerationGOAccess().getEnumeration_hAssignment_1(), "rule__EnumerationGO__Enumeration_hAssignment_1");
			builder.put(grammarAccess.getEnumerationGOAccess().getIdentifierAssignment_2_1_1(), "rule__EnumerationGO__IdentifierAssignment_2_1_1");
			builder.put(grammarAccess.getEnumerationGOAccess().getIdentifierAssignment_2_1_2_1(), "rule__EnumerationGO__IdentifierAssignment_2_1_2_1");
			builder.put(grammarAccess.getEnumerationHeaderAccess().getIdentifierAssignment_1(), "rule__EnumerationHeader__IdentifierAssignment_1");
			builder.put(grammarAccess.getClassifierHeaderAccess().getClassifier_infoAssignment_0(), "rule__ClassifierHeader__Classifier_infoAssignment_0");
			builder.put(grammarAccess.getClassifierHeaderAccess().getScoped_identifierAssignment_1(), "rule__ClassifierHeader__Scoped_identifierAssignment_1");
			builder.put(grammarAccess.getClassifierHeaderAccess().getClassifier_extensionAssignment_2(), "rule__ClassifierHeader__Classifier_extensionAssignment_2");
			builder.put(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureAssignment_1(), "rule__ClassifierFeatureList__Classifier_featureAssignment_1");
			builder.put(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureAssignment_2_1(), "rule__ClassifierFeatureList__Classifier_featureAssignment_2_1");
			builder.put(grammarAccess.getClassifierInfoAccess().getQualifierAssignment_3_1(), "rule__ClassifierInfo__QualifierAssignment_3_1");
			builder.put(grammarAccess.getClassifierExtensionAccess().getScoped_identifier_listAssignment_1(), "rule__ClassifierExtension__Scoped_identifier_listAssignment_1");
			builder.put(grammarAccess.getClassifierFeatureAccess().getFeature_qualifierAssignment_0_0(), "rule__ClassifierFeature__Feature_qualifierAssignment_0_0");
			builder.put(grammarAccess.getClassifierFeatureAccess().getDeclaratorAssignment_0_1(), "rule__ClassifierFeature__DeclaratorAssignment_0_1");
			builder.put(grammarAccess.getClassifierFeatureAccess().getMultiplicityAssignment_0_2_0_0(), "rule__ClassifierFeature__MultiplicityAssignment_0_2_0_0");
			builder.put(grammarAccess.getClassifierFeatureAccess().getOpposite_propertyAssignment_0_2_0_1(), "rule__ClassifierFeature__Opposite_propertyAssignment_0_2_0_1");
			builder.put(grammarAccess.getClassifierFeatureAccess().getComplete_signatureAssignment_0_2_1(), "rule__ClassifierFeature__Complete_signatureAssignment_0_2_1");
			builder.put(grammarAccess.getClassifierFeatureAccess().getTagAssignment_1(), "rule__ClassifierFeature__TagAssignment_1");
			builder.put(grammarAccess.getFeatureQualifierAccess().getStereotype_qualifierAssignment_1(), "rule__FeatureQualifier__Stereotype_qualifierAssignment_1");
			builder.put(grammarAccess.getFeatureQualifierAccess().getFeature_keyAssignment_2(), "rule__FeatureQualifier__Feature_keyAssignment_2");
			builder.put(grammarAccess.getMultiplicityAccess().getMultiplicity_rangeAssignment_1(), "rule__Multiplicity__Multiplicity_rangeAssignment_1");
			builder.put(grammarAccess.getOppositePropertyAccess().getNameAssignment_3(), "rule__OppositeProperty__NameAssignment_3");
			builder.put(grammarAccess.getOppositePropertyAccess().getMultiplicityAssignment_4(), "rule__OppositeProperty__MultiplicityAssignment_4");
			builder.put(grammarAccess.getStereotypeQualifierAccess().getIdentifierAssignment_2(), "rule__StereotypeQualifier__IdentifierAssignment_2");
			builder.put(grammarAccess.getStereotypeQualifierAccess().getIdentifierAssignment_3_1(), "rule__StereotypeQualifier__IdentifierAssignment_3_1");
			builder.put(grammarAccess.getUnitRefGOAccess().getIdentifierAssignment_1(), "rule__UnitRefGO__IdentifierAssignment_1");
			builder.put(grammarAccess.getUnitRefGOAccess().getIdentifierAssignment_2_1(), "rule__UnitRefGO__IdentifierAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyQvtoGrammarAccess grammarAccess;

	@Override
	protected InternalMyQvtoParser createParser() {
		InternalMyQvtoParser result = new InternalMyQvtoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyQvtoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyQvtoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
