/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDot;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydot.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydot.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydot.services.MyDotGrammarAccess;

}

@parser::members {

 	private MyDotGrammarAccess grammarAccess;

    public InternalMyDotParser(TokenStream input, MyDotGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DotAst";
   	}

   	@Override
   	protected MyDotGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDotAst
entryRuleDotAst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDotAstRule()); }
	iv_ruleDotAst=ruleDotAst
	{ $current=$iv_ruleDotAst.current; }
	EOF;

// Rule DotAst
ruleDotAst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDotAstAccess().getDotAstAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDotAstAccess().getGraphsDotGraphParserRuleCall_1_0());
				}
				lv_graphs_1_0=ruleDotGraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDotAstRule());
					}
					add(
						$current,
						"graphs",
						lv_graphs_1_0,
						"org.xtext.example.mydot.MyDot.DotGraph");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	iv_ruleStmt=ruleStmt
	{ $current=$iv_ruleStmt.current; }
	EOF;

// Rule Stmt
ruleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStmtAccess().getEdgeStmtNodeParserRuleCall_0_0());
			}
			this_EdgeStmtNode_0=ruleEdgeStmtNode
			{
				$current = $this_EdgeStmtNode_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getNodeStmtParserRuleCall_0_1());
			}
			this_NodeStmt_1=ruleNodeStmt
			{
				$current = $this_NodeStmt_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getAttrStmtParserRuleCall_0_2());
			}
			this_AttrStmt_2=ruleAttrStmt
			{
				$current = $this_AttrStmt_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getAttributeParserRuleCall_0_3());
			}
			this_Attribute_3=ruleAttribute
			{
				$current = $this_Attribute_3.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getStmtAccess().getSubgraphOrEdgeStmtSubgraphParserRuleCall_0_4());
			}
			this_SubgraphOrEdgeStmtSubgraph_4=ruleSubgraphOrEdgeStmtSubgraph
			{
				$current = $this_SubgraphOrEdgeStmtSubgraph_4.current;
				afterParserOrEnumRuleCall();
			}
		)
		(
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getStmtAccess().getSemicolonKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleEdgeRhs
entryRuleEdgeRhs returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEdgeRhsRule()); }
	iv_ruleEdgeRhs=ruleEdgeRhs
	{ $current=$iv_ruleEdgeRhs.current; }
	EOF;

// Rule EdgeRhs
ruleEdgeRhs returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEdgeRhsAccess().getEdgeRhsNodeParserRuleCall_0());
		}
		this_EdgeRhsNode_0=ruleEdgeRhsNode
		{
			$current = $this_EdgeRhsNode_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEdgeRhsAccess().getEdgeRhsSubgraphParserRuleCall_1());
		}
		this_EdgeRhsSubgraph_1=ruleEdgeRhsSubgraph
		{
			$current = $this_EdgeRhsSubgraph_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDotGraph
entryRuleDotGraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDotGraphRule()); }
	iv_ruleDotGraph=ruleDotGraph
	{ $current=$iv_ruleDotGraph.current; }
	EOF;

// Rule DotGraph
ruleDotGraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDotGraphAccess().getDotGraphAction_0(),
					$current);
			}
		)
		(
			(
				lv_strict_1_0='strict'
				{
					newLeafNode(lv_strict_1_0, grammarAccess.getDotGraphAccess().getStrictStrictKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDotGraphRule());
					}
					setWithLastConsumed($current, "strict", lv_strict_1_0 != null, "strict");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDotGraphAccess().getTypeGraphTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleGraphType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDotGraphRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydot.MyDot.GraphType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getDotGraphAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDotGraphRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDotGraphAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDotGraphAccess().getStmtsStmtParserRuleCall_5_0());
				}
				lv_stmts_5_0=ruleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDotGraphRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_5_0,
						"org.xtext.example.mydot.MyDot.Stmt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDotGraphAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEdgeStmtNode
entryRuleEdgeStmtNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEdgeStmtNodeRule()); }
	iv_ruleEdgeStmtNode=ruleEdgeStmtNode
	{ $current=$iv_ruleEdgeStmtNode.current; }
	EOF;

// Rule EdgeStmtNode
ruleEdgeStmtNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEdgeStmtNodeAccess().getEdgeStmtNodeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeStmtNodeAccess().getNodeNodeIdParserRuleCall_1_0());
				}
				lv_node_1_0=ruleNodeId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeStmtNodeRule());
					}
					set(
						$current,
						"node",
						lv_node_1_0,
						"org.xtext.example.mydot.MyDot.NodeId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeStmtNodeAccess().getEdgeRHSEdgeRhsParserRuleCall_2_0());
				}
				lv_edgeRHS_2_0=ruleEdgeRhs
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeStmtNodeRule());
					}
					add(
						$current,
						"edgeRHS",
						lv_edgeRHS_2_0,
						"org.xtext.example.mydot.MyDot.EdgeRhs");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeStmtNodeAccess().getAttrListsAttrListParserRuleCall_3_0());
				}
				lv_attrLists_3_0=ruleAttrList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeStmtNodeRule());
					}
					add(
						$current,
						"attrLists",
						lv_attrLists_3_0,
						"org.xtext.example.mydot.MyDot.AttrList");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleNodeStmt
entryRuleNodeStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeStmtRule()); }
	iv_ruleNodeStmt=ruleNodeStmt
	{ $current=$iv_ruleNodeStmt.current; }
	EOF;

// Rule NodeStmt
ruleNodeStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNodeStmtAccess().getNodeStmtAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeStmtAccess().getNodeNodeIdParserRuleCall_1_0());
				}
				lv_node_1_0=ruleNodeId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeStmtRule());
					}
					set(
						$current,
						"node",
						lv_node_1_0,
						"org.xtext.example.mydot.MyDot.NodeId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeStmtAccess().getAttrListsAttrListParserRuleCall_2_0());
				}
				lv_attrLists_2_0=ruleAttrList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeStmtRule());
					}
					add(
						$current,
						"attrLists",
						lv_attrLists_2_0,
						"org.xtext.example.mydot.MyDot.AttrList");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAttrStmt
entryRuleAttrStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttrStmtRule()); }
	iv_ruleAttrStmt=ruleAttrStmt
	{ $current=$iv_ruleAttrStmt.current; }
	EOF;

// Rule AttrStmt
ruleAttrStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttrStmtAccess().getAttrStmtAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttrStmtAccess().getTypeAttributeTypeEnumRuleCall_1_0());
				}
				lv_type_1_0=ruleAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttrStmtRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydot.MyDot.AttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttrStmtAccess().getAttrListsAttrListParserRuleCall_2_0());
				}
				lv_attrLists_2_0=ruleAttrList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttrStmtRule());
					}
					add(
						$current,
						"attrLists",
						lv_attrLists_2_0,
						"org.xtext.example.mydot.MyDot.AttrList");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttributeAccess().getAttributeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydot.MyDot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"org.xtext.example.mydot.MyDot.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSubgraphOrEdgeStmtSubgraph
entryRuleSubgraphOrEdgeStmtSubgraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubgraphOrEdgeStmtSubgraphRule()); }
	iv_ruleSubgraphOrEdgeStmtSubgraph=ruleSubgraphOrEdgeStmtSubgraph
	{ $current=$iv_ruleSubgraphOrEdgeStmtSubgraph.current; }
	EOF;

// Rule SubgraphOrEdgeStmtSubgraph
ruleSubgraphOrEdgeStmtSubgraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSubgraphOrEdgeStmtSubgraphAccess().getSubgraphParserRuleCall_0());
		}
		this_Subgraph_0=ruleSubgraph
		{
			$current = $this_Subgraph_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getSubgraphOrEdgeStmtSubgraphAccess().getEdgeStmtSubgraphSubgraphAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSubgraphOrEdgeStmtSubgraphAccess().getEdgeRHSEdgeRhsParserRuleCall_1_1_0());
					}
					lv_edgeRHS_2_0=ruleEdgeRhs
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubgraphOrEdgeStmtSubgraphRule());
						}
						add(
							$current,
							"edgeRHS",
							lv_edgeRHS_2_0,
							"org.xtext.example.mydot.MyDot.EdgeRhs");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			(
				(
					{
						newCompositeNode(grammarAccess.getSubgraphOrEdgeStmtSubgraphAccess().getAttrListsAttrListParserRuleCall_1_2_0());
					}
					lv_attrLists_3_0=ruleAttrList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubgraphOrEdgeStmtSubgraphRule());
						}
						add(
							$current,
							"attrLists",
							lv_attrLists_3_0,
							"org.xtext.example.mydot.MyDot.AttrList");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)
;

// Entry rule entryRuleSubgraph
entryRuleSubgraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubgraphRule()); }
	iv_ruleSubgraph=ruleSubgraph
	{ $current=$iv_ruleSubgraph.current; }
	EOF;

// Rule Subgraph
ruleSubgraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSubgraphAccess().getSubgraphAction_0(),
					$current);
			}
		)
		(
			otherlv_1='subgraph'
			{
				newLeafNode(otherlv_1, grammarAccess.getSubgraphAccess().getSubgraphKeyword_1_0());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getSubgraphAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubgraphRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)?
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSubgraphAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubgraphAccess().getStmtsStmtParserRuleCall_3_0());
				}
				lv_stmts_4_0=ruleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubgraphRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_4_0,
						"org.xtext.example.mydot.MyDot.Stmt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSubgraphAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNodeId
entryRuleNodeId returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeIdRule()); }
	iv_ruleNodeId=ruleNodeId
	{ $current=$iv_ruleNodeId.current; }
	EOF;

// Rule NodeId
ruleNodeId returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNodeIdAccess().getNodeIdAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeIdAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeIdRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeIdAccess().getPortPortParserRuleCall_2_0());
				}
				lv_port_2_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeIdRule());
					}
					set(
						$current,
						"port",
						lv_port_2_0,
						"org.xtext.example.mydot.MyDot.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAttrList
entryRuleAttrList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttrListRule()); }
	iv_ruleAttrList=ruleAttrList
	{ $current=$iv_ruleAttrList.current; }
	EOF;

// Rule AttrList
ruleAttrList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAttrListAccess().getAttrListAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getAttrListAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttrListAccess().getAttributesAttributeParserRuleCall_2_0_0());
					}
					lv_attributes_2_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttrListRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_2_0,
							"org.xtext.example.mydot.MyDot.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getAttrListAccess().getCommaKeyword_2_1_0());
				}
				    |
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getAttrListAccess().getSemicolonKeyword_2_1_1());
				}
			)?
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getAttrListAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPortAccess().getPortAction_0(),
					$current);
			}
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortAccess().getColonKeyword_1());
		}
		(
			(
				((
					RULE_COMPASS_PT
				)
				)=>
				(
					lv_compass_pt_2_0=RULE_COMPASS_PT
					{
						newLeafNode(lv_compass_pt_2_0, grammarAccess.getPortAccess().getCompass_ptCOMPASS_PTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed(
							$current,
							"compass_pt",
							lv_compass_pt_2_0,
							"org.xtext.example.mydot.MyDot.COMPASS_PT");
					}
				)
			)
			    |
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPortRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					(
						lv_name_4_0=RULE_ID
						{
							newLeafNode(lv_name_4_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPortRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_4_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getPortAccess().getColonKeyword_2_2_1());
				}
				(
					(
						lv_compass_pt_6_0=RULE_COMPASS_PT
						{
							newLeafNode(lv_compass_pt_6_0, grammarAccess.getPortAccess().getCompass_ptCOMPASS_PTTerminalRuleCall_2_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPortRule());
							}
							setWithLastConsumed(
								$current,
								"compass_pt",
								lv_compass_pt_6_0,
								"org.xtext.example.mydot.MyDot.COMPASS_PT");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleEdgeRhsNode
entryRuleEdgeRhsNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEdgeRhsNodeRule()); }
	iv_ruleEdgeRhsNode=ruleEdgeRhsNode
	{ $current=$iv_ruleEdgeRhsNode.current; }
	EOF;

// Rule EdgeRhsNode
ruleEdgeRhsNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEdgeRhsNodeAccess().getEdgeRhsNodeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeRhsNodeAccess().getOpEdgeOpEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleEdgeOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeRhsNodeRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"org.xtext.example.mydot.MyDot.EdgeOp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeRhsNodeAccess().getNodeNodeIdParserRuleCall_2_0());
				}
				lv_node_2_0=ruleNodeId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeRhsNodeRule());
					}
					set(
						$current,
						"node",
						lv_node_2_0,
						"org.xtext.example.mydot.MyDot.NodeId");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEdgeRhsSubgraph
entryRuleEdgeRhsSubgraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEdgeRhsSubgraphRule()); }
	iv_ruleEdgeRhsSubgraph=ruleEdgeRhsSubgraph
	{ $current=$iv_ruleEdgeRhsSubgraph.current; }
	EOF;

// Rule EdgeRhsSubgraph
ruleEdgeRhsSubgraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEdgeRhsSubgraphAccess().getEdgeRhsSubgraphAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeRhsSubgraphAccess().getOpEdgeOpEnumRuleCall_1_0());
				}
				lv_op_1_0=ruleEdgeOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeRhsSubgraphRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"org.xtext.example.mydot.MyDot.EdgeOp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEdgeRhsSubgraphAccess().getSubgraphSubgraphParserRuleCall_2_0());
				}
				lv_subgraph_2_0=ruleSubgraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEdgeRhsSubgraphRule());
					}
					set(
						$current,
						"subgraph",
						lv_subgraph_2_0,
						"org.xtext.example.mydot.MyDot.Subgraph");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Rule GraphType
ruleGraphType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='graph'
			{
				$current = grammarAccess.getGraphTypeAccess().getGraphEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGraphTypeAccess().getGraphEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='digraph'
			{
				$current = grammarAccess.getGraphTypeAccess().getDigraphEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGraphTypeAccess().getDigraphEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule EdgeOp
ruleEdgeOp returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='->'
			{
				$current = grammarAccess.getEdgeOpAccess().getDirectedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEdgeOpAccess().getDirectedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='--'
			{
				$current = grammarAccess.getEdgeOpAccess().getUndirectedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEdgeOpAccess().getUndirectedEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule AttributeType
ruleAttributeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='graph'
			{
				$current = grammarAccess.getAttributeTypeAccess().getGraphEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAttributeTypeAccess().getGraphEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='node'
			{
				$current = grammarAccess.getAttributeTypeAccess().getNodeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAttributeTypeAccess().getNodeEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='edge'
			{
				$current = grammarAccess.getAttributeTypeAccess().getEdgeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAttributeTypeAccess().getEdgeEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_COMPASS_PT : ('n'|'ne'|'e'|'se'|'s'|'sw'|'w'|'nw'|'c'|'_');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
