/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyQvto;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.omg.qvt10.myqvto.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.omg.qvt10.myqvto.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.omg.qvt10.myqvto.services.MyQvtoGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private MyQvtoGrammarAccess grammarAccess;

    public InternalMyQvtoParser(TokenStream input, MyQvtoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "TopLevelGO";
   	}

   	@Override
   	protected MyQvtoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTopLevelGO
entryRuleTopLevelGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopLevelGORule()); }
	iv_ruleTopLevelGO=ruleTopLevelGO
	{ $current=$iv_ruleTopLevelGO.current; }
	EOF;

// Rule TopLevelGO
ruleTopLevelGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getTopLevelGOAccess().getTopLevelGOAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTopLevelGOAccess().getModuleimportModuleImportParserRuleCall_1_0());
				}
				lv_moduleimport_1_0=ruleModuleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopLevelGORule());
					}
					add(
						$current,
						"moduleimport",
						lv_moduleimport_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ModuleImport");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTopLevelGOAccess().getUnit_elementModuleParserRuleCall_2_0());
				}
				lv_unit_element_2_0=ruleModule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopLevelGORule());
					}
					add(
						$current,
						"unit_element",
						lv_unit_element_2_0,
						"org.omg.qvt10.myqvto.MyQvto.Module");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getHelperParserRuleCall_0());
		}
		this_Helper_0=ruleHelper
		{
			$current = $this_Helper_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getOperationalTransformationParserRuleCall_1());
		}
		this_OperationalTransformation_1=ruleOperationalTransformation
		{
			$current = $this_OperationalTransformation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getMappingOperationParserRuleCall_2());
		}
		this_MappingOperation_2=ruleMappingOperation
		{
			$current = $this_MappingOperation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getConstructorParserRuleCall_3());
		}
		this_Constructor_3=ruleConstructor
		{
			$current = $this_Constructor_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getContextualPropertyParserRuleCall_4());
		}
		this_ContextualProperty_4=ruleContextualProperty
		{
			$current = $this_ContextualProperty_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getEntryOperationParserRuleCall_5());
		}
		this_EntryOperation_5=ruleEntryOperation
		{
			$current = $this_EntryOperation_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getLibraryParserRuleCall_6());
		}
		this_Library_6=ruleLibrary
		{
			$current = $this_Library_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getModelTypeParserRuleCall_7());
		}
		this_ModelType_7=ruleModelType
		{
			$current = $this_ModelType_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getTagGOParserRuleCall_8());
		}
		this_TagGO_8=ruleTagGO
		{
			$current = $this_TagGO_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getMetaModelGOParserRuleCall_9());
		}
		this_MetaModelGO_9=ruleMetaModelGO
		{
			$current = $this_MetaModelGO_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getAccessDeclParserRuleCall_10());
		}
		this_AccessDecl_10=ruleAccessDecl
		{
			$current = $this_AccessDecl_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getTypeDefParserRuleCall_11());
		}
		this_TypeDef_11=ruleTypeDef
		{
			$current = $this_TypeDef_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getModuleAccess().getClassifierGOParserRuleCall_12());
		}
		this_ClassifierGO_12=ruleClassifierGO
		{
			$current = $this_ClassifierGO_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImperativeOperation
entryRuleImperativeOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeOperationRule()); }
	iv_ruleImperativeOperation=ruleImperativeOperation
	{ $current=$iv_ruleImperativeOperation.current; }
	EOF;

// Rule ImperativeOperation
ruleImperativeOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getHelperParserRuleCall_0());
		}
		this_Helper_0=ruleHelper
		{
			$current = $this_Helper_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getMappingOperationParserRuleCall_1());
		}
		this_MappingOperation_1=ruleMappingOperation
		{
			$current = $this_MappingOperation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getConstructorParserRuleCall_2());
		}
		this_Constructor_2=ruleConstructor
		{
			$current = $this_Constructor_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getContextualPropertyParserRuleCall_3());
		}
		this_ContextualProperty_3=ruleContextualProperty
		{
			$current = $this_ContextualProperty_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getEntryOperationParserRuleCall_4());
		}
		this_EntryOperation_4=ruleEntryOperation
		{
			$current = $this_EntryOperation_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getTagGOParserRuleCall_5());
		}
		this_TagGO_5=ruleTagGO
		{
			$current = $this_TagGO_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getAccessDeclParserRuleCall_6());
		}
		this_AccessDecl_6=ruleAccessDecl
		{
			$current = $this_AccessDecl_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getTypeDefParserRuleCall_7());
		}
		this_TypeDef_7=ruleTypeDef
		{
			$current = $this_TypeDef_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImperativeOperationAccess().getClassifierGOParserRuleCall_8());
		}
		this_ClassifierGO_8=ruleClassifierGO
		{
			$current = $this_ClassifierGO_8.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModuleImport
entryRuleModuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleImportRule()); }
	iv_ruleModuleImport=ruleModuleImport
	{ $current=$iv_ruleModuleImport.current; }
	EOF;

// Rule ModuleImport
ruleModuleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='from'
			{
				newLeafNode(otherlv_0, grammarAccess.getModuleImportAccess().getFromKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleImportAccess().getUnitUnitRefGOParserRuleCall_0_1_0());
					}
					lv_unit_1_0=ruleUnitRefGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleImportRule());
						}
						set(
							$current,
							"unit",
							lv_unit_1_0,
							"org.omg.qvt10.myqvto.MyQvto.UnitRefGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='import'
			{
				newLeafNode(otherlv_2, grammarAccess.getModuleImportAccess().getImportKeyword_0_2());
			}
			(
				(
					(
						(
							lv_identifier_3_0=RULE_ID
							{
								newLeafNode(lv_identifier_3_0, grammarAccess.getModuleImportAccess().getIdentifierIDTerminalRuleCall_0_3_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getModuleImportRule());
								}
								addWithLastConsumed(
									$current,
									"identifier",
									lv_identifier_3_0,
									"org.eclipse.xtext.common.Terminals.ID");
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getModuleImportAccess().getCommaKeyword_0_3_0_1_0());
						}
						(
							(
								lv_identifier_5_0=RULE_ID
								{
									newLeafNode(lv_identifier_5_0, grammarAccess.getModuleImportAccess().getIdentifierIDTerminalRuleCall_0_3_0_1_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getModuleImportRule());
									}
									addWithLastConsumed(
										$current,
										"identifier",
										lv_identifier_5_0,
										"org.eclipse.xtext.common.Terminals.ID");
								}
							)
						)
					)*
				)
				    |
				otherlv_6='*'
				{
					newLeafNode(otherlv_6, grammarAccess.getModuleImportAccess().getAsteriskKeyword_0_3_1());
				}
			)
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getModuleImportAccess().getSemicolonKeyword_0_4());
			}
		)
		    |
		(
			otherlv_8='import'
			{
				newLeafNode(otherlv_8, grammarAccess.getModuleImportAccess().getImportKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleImportAccess().getUnitUnitRefGOParserRuleCall_1_1_0());
					}
					lv_unit_9_0=ruleUnitRefGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleImportRule());
						}
						set(
							$current,
							"unit",
							lv_unit_9_0,
							"org.omg.qvt10.myqvto.MyQvto.UnitRefGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_10=';'
			{
				newLeafNode(otherlv_10, grammarAccess.getModuleImportAccess().getSemicolonKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleModelType
entryRuleModelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelTypeRule()); }
	iv_ruleModelType=ruleModelType
	{ $current=$iv_ruleModelType.current; }
	EOF;

// Rule ModelType
ruleModelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelTypeAccess().getModelTypeAction_0(),
					$current);
			}
		)
		otherlv_1='modeltype'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelTypeAccess().getModeltypeKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getModelTypeAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_compliance_kind_3_0=RULE_STRING
				{
					newLeafNode(lv_compliance_kind_3_0, grammarAccess.getModelTypeAccess().getCompliance_kindSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelTypeRule());
					}
					setWithLastConsumed(
						$current,
						"compliance_kind",
						lv_compliance_kind_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_4='uses'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelTypeAccess().getUsesKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelTypeAccess().getPackageref_listPackageRefGOParserRuleCall_5_0());
				}
				lv_packageref_list_5_0=rulePackageRefGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelTypeRule());
					}
					add(
						$current,
						"packageref_list",
						lv_packageref_list_5_0,
						"org.omg.qvt10.myqvto.MyQvto.PackageRefGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getModelTypeAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelTypeAccess().getPackageref_listPackageRefGOParserRuleCall_6_1_0());
					}
					lv_packageref_list_7_0=rulePackageRefGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelTypeRule());
						}
						add(
							$current,
							"packageref_list",
							lv_packageref_list_7_0,
							"org.omg.qvt10.myqvto.MyQvto.PackageRefGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='where'
			{
				newLeafNode(otherlv_8, grammarAccess.getModelTypeAccess().getWhereKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelTypeAccess().getModeltype_whereExpressionBlockParserRuleCall_7_1_0());
					}
					lv_modeltype_where_9_0=ruleExpressionBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelTypeRule());
						}
						set(
							$current,
							"modeltype_where",
							lv_modeltype_where_9_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getModelTypeAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleExpressionGO
entryRuleExpressionGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionGORule()); }
	iv_ruleExpressionGO=ruleExpressionGO
	{ $current=$iv_ruleExpressionGO.current; }
	EOF;

// Rule ExpressionGO
ruleExpressionGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionGOAccess().getExpressionGOAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionGOAccess().getDummyContentEStringParserRuleCall_1_0());
				}
				lv_dummyContent_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionGORule());
					}
					add(
						$current,
						"dummyContent",
						lv_dummyContent_1_0,
						"org.omg.qvt10.myqvto.MyQvto.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleHelper
entryRuleHelper returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHelperRule()); }
	iv_ruleHelper=ruleHelper
	{ $current=$iv_ruleHelper.current; }
	EOF;

// Rule Helper
ruleHelper returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperAccess().getHelper_headerHelperHeaderParserRuleCall_0_0());
				}
				lv_helper_header_0_0=ruleHelperHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperRule());
					}
					set(
						$current,
						"helper_header",
						lv_helper_header_0_0,
						"org.omg.qvt10.myqvto.MyQvto.HelperHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getHelperAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getHelperAccess().getEqualsSignKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHelperAccess().getExpressionExpressionGOParserRuleCall_1_1_1_0());
						}
						lv_expression_3_0=ruleExpressionGO
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHelperRule());
							}
							set(
								$current,
								"expression",
								lv_expression_3_0,
								"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getHelperAccess().getSemicolonKeyword_1_1_2());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getHelperAccess().getExpression_blockExpressionBlockParserRuleCall_1_2_0_0());
						}
						lv_expression_block_5_0=ruleExpressionBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHelperRule());
							}
							set(
								$current,
								"expression_block",
								lv_expression_block_5_0,
								"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=';'
					{
						newLeafNode(otherlv_6, grammarAccess.getHelperAccess().getSemicolonKeyword_1_2_1());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleOperationalTransformation
entryRuleOperationalTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationalTransformationRule()); }
	iv_ruleOperationalTransformation=ruleOperationalTransformation
	{ $current=$iv_ruleOperationalTransformation.current; }
	EOF;

// Rule OperationalTransformation
ruleOperationalTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationalTransformationAccess().getTransformation_hTransformationHeaderParserRuleCall_0_0());
				}
				lv_transformation_h_0_0=ruleTransformationHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationalTransformationRule());
					}
					set(
						$current,
						"transformation_h",
						lv_transformation_h_0_0,
						"org.omg.qvt10.myqvto.MyQvto.TransformationHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getOperationalTransformationAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getOperationalTransformationAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationalTransformationAccess().getModule_elementImperativeOperationParserRuleCall_1_1_1_0());
						}
						lv_module_element_3_0=ruleImperativeOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationalTransformationRule());
							}
							add(
								$current,
								"module_element",
								lv_module_element_3_0,
								"org.omg.qvt10.myqvto.MyQvto.ImperativeOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getOperationalTransformationAccess().getRightCurlyBracketKeyword_1_1_2());
				}
				(
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getOperationalTransformationAccess().getSemicolonKeyword_1_1_3());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleMappingOperation
entryRuleMappingOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingOperationRule()); }
	iv_ruleMappingOperation=ruleMappingOperation
	{ $current=$iv_ruleMappingOperation.current; }
	EOF;

// Rule MappingOperation
ruleMappingOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingOperationAccess().getMapping_full_headerMappingFullHeaderParserRuleCall_0_0());
				}
				lv_mapping_full_header_0_0=ruleMappingFullHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingOperationRule());
					}
					set(
						$current,
						"mapping_full_header",
						lv_mapping_full_header_0_0,
						"org.omg.qvt10.myqvto.MyQvto.MappingFullHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getMappingOperationAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getMappingOperationAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMappingOperationAccess().getMapping_bodyMappingBodyParserRuleCall_1_1_1_0());
						}
						lv_mapping_body_3_0=ruleMappingBody
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMappingOperationRule());
							}
							set(
								$current,
								"mapping_body",
								lv_mapping_body_3_0,
								"org.omg.qvt10.myqvto.MyQvto.MappingBody");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getMappingOperationAccess().getRightCurlyBracketKeyword_1_1_2());
				}
				(
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getMappingOperationAccess().getSemicolonKeyword_1_1_3());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	iv_ruleConstructor=ruleConstructor
	{ $current=$iv_ruleConstructor.current; }
	EOF;

// Rule Constructor
ruleConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorAccess().getConstructor_headerConstructorHeaderParserRuleCall_0_0());
				}
				lv_constructor_header_0_0=ruleConstructorHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorRule());
					}
					set(
						$current,
						"constructor_header",
						lv_constructor_header_0_0,
						"org.omg.qvt10.myqvto.MyQvto.ConstructorHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConstructorAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0_0());
						}
						lv_expression_block_2_0=ruleExpressionBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstructorRule());
							}
							set(
								$current,
								"expression_block",
								lv_expression_block_2_0,
								"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=';'
					{
						newLeafNode(otherlv_3, grammarAccess.getConstructorAccess().getSemicolonKeyword_1_1_1());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleContextualProperty
entryRuleContextualProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextualPropertyRule()); }
	iv_ruleContextualProperty=ruleContextualProperty
	{ $current=$iv_ruleContextualProperty.current; }
	EOF;

// Rule ContextualProperty
ruleContextualProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='intermediate'
			{
				newLeafNode(otherlv_0, grammarAccess.getContextualPropertyAccess().getIntermediateKeyword_0());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getContextualPropertyAccess().getProperty_keyPropertyKeyEnumRuleCall_1_0());
				}
				lv_property_key_1_0=rulePropertyKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextualPropertyRule());
					}
					add(
						$current,
						"property_key",
						lv_property_key_1_0,
						"org.omg.qvt10.myqvto.MyQvto.PropertyKey");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getContextualPropertyAccess().getDeclaratorDeclaratorParserRuleCall_2_0());
				}
				lv_declarator_2_0=ruleDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextualPropertyRule());
					}
					set(
						$current,
						"declarator",
						lv_declarator_2_0,
						"org.omg.qvt10.myqvto.MyQvto.Declarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getContextualPropertyAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleEntryOperation
entryRuleEntryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryOperationRule()); }
	iv_ruleEntryOperation=ruleEntryOperation
	{ $current=$iv_ruleEntryOperation.current; }
	EOF;

// Rule EntryOperation
ruleEntryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEntryOperationAccess().getEntry_headerEntryHeaderParserRuleCall_0_0());
				}
				lv_entry_header_0_0=ruleEntryHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntryOperationRule());
					}
					set(
						$current,
						"entry_header",
						lv_entry_header_0_0,
						"org.omg.qvt10.myqvto.MyQvto.EntryHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getEntryOperationAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getEntryOperationAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0_0());
						}
						lv_expression_block_2_0=ruleExpressionBlock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntryOperationRule());
							}
							set(
								$current,
								"expression_block",
								lv_expression_block_2_0,
								"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=';'
					{
						newLeafNode(otherlv_3, grammarAccess.getEntryOperationAccess().getSemicolonKeyword_1_1_1());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleLibrary
entryRuleLibrary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLibraryRule()); }
	iv_ruleLibrary=ruleLibrary
	{ $current=$iv_ruleLibrary.current; }
	EOF;

// Rule Library
ruleLibrary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLibraryAccess().getLibrary_hLibraryHeaderParserRuleCall_0_0());
				}
				lv_library_h_0_0=ruleLibraryHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLibraryRule());
					}
					set(
						$current,
						"library_h",
						lv_library_h_0_0,
						"org.omg.qvt10.myqvto.MyQvto.LibraryHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getLibraryAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLibraryAccess().getModule_elementImperativeOperationParserRuleCall_1_1_1_0());
						}
						lv_module_element_3_0=ruleImperativeOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLibraryRule());
							}
							add(
								$current,
								"module_element",
								lv_module_element_3_0,
								"org.omg.qvt10.myqvto.MyQvto.ImperativeOperation");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_1_1_2());
				}
				(
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getLibraryAccess().getSemicolonKeyword_1_1_3());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleTagGO
entryRuleTagGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagGORule()); }
	iv_ruleTagGO=ruleTagGO
	{ $current=$iv_ruleTagGO.current; }
	EOF;

// Rule TagGO
ruleTagGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tag'
		{
			newLeafNode(otherlv_0, grammarAccess.getTagGOAccess().getTagKeyword_0());
		}
		(
			(
				lv_tagid_1_0=RULE_STRING
				{
					newLeafNode(lv_tagid_1_0, grammarAccess.getTagGOAccess().getTagidSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagGORule());
					}
					setWithLastConsumed(
						$current,
						"tagid",
						lv_tagid_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTagGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_2_0());
				}
				lv_scoped_identifier_2_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTagGORule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getTagGOAccess().getEqualsSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTagGOAccess().getTagvalueExpressionGOParserRuleCall_3_1_0());
					}
					lv_tagvalue_4_0=ruleExpressionGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTagGORule());
						}
						set(
							$current,
							"tagvalue",
							lv_tagvalue_4_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getTagGOAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleMetaModelGO
entryRuleMetaModelGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaModelGORule()); }
	iv_ruleMetaModelGO=ruleMetaModelGO
	{ $current=$iv_ruleMetaModelGO.current; }
	EOF;

// Rule MetaModelGO
ruleMetaModelGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaModelGOAccess().getMetamodel_hMetaModelHeaderParserRuleCall_0_0());
				}
				lv_metamodel_h_0_0=ruleMetaModelHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaModelGORule());
					}
					set(
						$current,
						"metamodel_h",
						lv_metamodel_h_0_0,
						"org.omg.qvt10.myqvto.MyQvto.MetaModelHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getMetaModelGOAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getMetaModelGOAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMetaModelGOAccess().getMetamodel_elementMetaModelElementParserRuleCall_1_1_1_0());
						}
						lv_metamodel_element_3_0=ruleMetaModelElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetaModelGORule());
							}
							add(
								$current,
								"metamodel_element",
								lv_metamodel_element_3_0,
								"org.omg.qvt10.myqvto.MyQvto.MetaModelElement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getMetaModelGOAccess().getRightCurlyBracketKeyword_1_1_2());
				}
				(
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getMetaModelGOAccess().getSemicolonKeyword_1_1_3());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleAccessDecl
entryRuleAccessDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccessDeclRule()); }
	iv_ruleAccessDecl=ruleAccessDecl
	{ $current=$iv_ruleAccessDecl.current; }
	EOF;

// Rule AccessDecl
ruleAccessDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAccessDeclAccess().getAccess_usageAccessUsageParserRuleCall_0_0());
				}
				lv_access_usage_0_0=ruleAccessUsage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccessDeclRule());
					}
					set(
						$current,
						"access_usage",
						lv_access_usage_0_0,
						"org.omg.qvt10.myqvto.MyQvto.AccessUsage");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getAccessDeclAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='typedef'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDefAccess().getTypedefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeDefAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeDefAccess().getTypespecTypeSpecParserRuleCall_3_0());
				}
				lv_typespec_3_0=ruleTypeSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeDefRule());
					}
					set(
						$current,
						"typespec",
						lv_typespec_3_0,
						"org.omg.qvt10.myqvto.MyQvto.TypeSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeDefAccess().getLeftSquareBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDefAccess().getTypedef_conditionExpressionGOParserRuleCall_4_1_0());
					}
					lv_typedef_condition_5_0=ruleExpressionGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDefRule());
						}
						set(
							$current,
							"typedef_condition",
							lv_typedef_condition_5_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getTypeDefAccess().getRightSquareBracketKeyword_4_2());
			}
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getTypeDefAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleClassifierGO
entryRuleClassifierGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierGORule()); }
	iv_ruleClassifierGO=ruleClassifierGO
	{ $current=$iv_ruleClassifierGO.current; }
	EOF;

// Rule ClassifierGO
ruleClassifierGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierGOAccess().getClassifier_hClassifierHeaderParserRuleCall_0_0());
				}
				lv_classifier_h_0_0=ruleClassifierHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierGORule());
					}
					set(
						$current,
						"classifier_h",
						lv_classifier_h_0_0,
						"org.omg.qvt10.myqvto.MyQvto.ClassifierHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getClassifierGOAccess().getSemicolonKeyword_1_0());
			}
			    |
			(
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getClassifierGOAccess().getLeftCurlyBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierGOAccess().getClassifier_feature_listClassifierFeatureListParserRuleCall_1_1_1_0());
						}
						lv_classifier_feature_list_3_0=ruleClassifierFeatureList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierGORule());
							}
							set(
								$current,
								"classifier_feature_list",
								lv_classifier_feature_list_3_0,
								"org.omg.qvt10.myqvto.MyQvto.ClassifierFeatureList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierGOAccess().getRightCurlyBracketKeyword_1_1_2());
				}
				(
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getClassifierGOAccess().getSemicolonKeyword_1_1_3());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePackageRefGO
entryRulePackageRefGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRefGORule()); }
	iv_rulePackageRefGO=rulePackageRefGO
	{ $current=$iv_rulePackageRefGO.current; }
	EOF;

// Rule PackageRefGO
rulePackageRefGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getPackageRefGOAccess().getPackageRefGOAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPackageRefGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0_0_0());
						}
						lv_scoped_identifier_1_0=ruleScopedIdentifier
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPackageRefGORule());
							}
							set(
								$current,
								"scoped_identifier",
								lv_scoped_identifier_1_0,
								"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2='('
					{
						newLeafNode(otherlv_2, grammarAccess.getPackageRefGOAccess().getLeftParenthesisKeyword_1_0_1_0());
					}
					(
						(
							lv_uri_3_0=RULE_STRING
							{
								newLeafNode(lv_uri_3_0, grammarAccess.getPackageRefGOAccess().getUriSTRINGTerminalRuleCall_1_0_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPackageRefGORule());
								}
								setWithLastConsumed(
									$current,
									"uri",
									lv_uri_3_0,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
						)
					)
					otherlv_4=')'
					{
						newLeafNode(otherlv_4, grammarAccess.getPackageRefGOAccess().getRightParenthesisKeyword_1_0_1_2());
					}
				)?
			)
			    |
			(
				(
					lv_uri_5_0=RULE_STRING
					{
						newLeafNode(lv_uri_5_0, grammarAccess.getPackageRefGOAccess().getUriSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPackageRefGORule());
						}
						setWithLastConsumed(
							$current,
							"uri",
							lv_uri_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpressionBlock
entryRuleExpressionBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionBlockRule()); }
	iv_ruleExpressionBlock=ruleExpressionBlock
	{ $current=$iv_ruleExpressionBlock.current; }
	EOF;

// Rule ExpressionBlock
ruleExpressionBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionBlockAccess().getExpressionBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getExpressionBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionBlockAccess().getExpression_listExpressionListParserRuleCall_2_0());
				}
				lv_expression_list_2_0=ruleExpressionList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionBlockRule());
					}
					set(
						$current,
						"expression_list",
						lv_expression_list_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ExpressionList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getExpressionBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleScopedIdentifier
entryRuleScopedIdentifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopedIdentifierRule()); }
	iv_ruleScopedIdentifier=ruleScopedIdentifier
	{ $current=$iv_ruleScopedIdentifier.current; }
	EOF;

// Rule ScopedIdentifier
ruleScopedIdentifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getScopedIdentifierAccess().getScopedIdentifierAction_0(),
					$current);
			}
		)
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getScopedIdentifierAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScopedIdentifierRule());
					}
					addWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='::'
			{
				newLeafNode(otherlv_2, grammarAccess.getScopedIdentifierAccess().getColonColonKeyword_2_0());
			}
			(
				(
					lv_identifier_3_0=RULE_ID
					{
						newLeafNode(lv_identifier_3_0, grammarAccess.getScopedIdentifierAccess().getIdentifierIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getScopedIdentifierRule());
						}
						addWithLastConsumed(
							$current,
							"identifier",
							lv_identifier_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressionList
entryRuleExpressionList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionListRule()); }
	iv_ruleExpressionList=ruleExpressionList
	{ $current=$iv_ruleExpressionList.current; }
	EOF;

// Rule ExpressionList
ruleExpressionList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionListAccess().getExpression_semi_listExpressionSemiListParserRuleCall_0_0());
				}
				lv_expression_semi_list_0_0=ruleExpressionSemiList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionListRule());
					}
					set(
						$current,
						"expression_semi_list",
						lv_expression_semi_list_0_0,
						"org.omg.qvt10.myqvto.MyQvto.ExpressionSemiList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getSemicolonKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleExpressionSemiList
entryRuleExpressionSemiList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionSemiListRule()); }
	iv_ruleExpressionSemiList=ruleExpressionSemiList
	{ $current=$iv_ruleExpressionSemiList.current; }
	EOF;

// Rule ExpressionSemiList
ruleExpressionSemiList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExpressionSemiListAccess().getExpressionSemiListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionSemiListAccess().getExpressionExpressionGOParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpressionGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionSemiListRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionSemiListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionSemiListAccess().getExpressionExpressionGOParserRuleCall_2_1_0());
					}
					lv_expression_3_0=ruleExpressionGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionSemiListRule());
						}
						add(
							$current,
							"expression",
							lv_expression_3_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVarParameter
entryRuleVarParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarParameterRule()); }
	iv_ruleVarParameter=ruleVarParameter
	{ $current=$iv_ruleVarParameter.current; }
	EOF;

// Rule VarParameter
ruleVarParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarParameterAccess().getKindDirectionKindEnumRuleCall_0_0());
				}
				lv_kind_0_0=ruleDirectionKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarParameterRule());
					}
					set(
						$current,
						"kind",
						lv_kind_0_0,
						"org.omg.qvt10.myqvto.MyQvto.DirectionKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVarParameterAccess().getDeclaratorDeclaratorParserRuleCall_1_0());
				}
				lv_declarator_1_0=ruleDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarParameterRule());
					}
					set(
						$current,
						"declarator",
						lv_declarator_1_0,
						"org.omg.qvt10.myqvto.MyQvto.Declarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclarator
entryRuleDeclarator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaratorRule()); }
	iv_ruleDeclarator=ruleDeclarator
	{ $current=$iv_ruleDeclarator.current; }
	EOF;

// Rule Declarator
ruleDeclarator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclaratorAccess().getTypespecTypeSpecParserRuleCall_0_0_0());
					}
					lv_typespec_0_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclaratorRule());
						}
						set(
							$current,
							"typespec",
							lv_typespec_0_0,
							"org.omg.qvt10.myqvto.MyQvto.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclaratorAccess().getInit_partInitPartParserRuleCall_0_1_0());
					}
					lv_init_part_1_0=ruleInitPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclaratorRule());
						}
						set(
							$current,
							"init_part",
							lv_init_part_1_0,
							"org.omg.qvt10.myqvto.MyQvto.InitPart");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclaratorAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0_0());
					}
					lv_scoped_identifier_2_0=ruleScopedIdentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclaratorRule());
						}
						set(
							$current,
							"scoped_identifier",
							lv_scoped_identifier_2_0,
							"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeclaratorAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclaratorAccess().getTypespecTypeSpecParserRuleCall_1_2_0());
					}
					lv_typespec_4_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclaratorRule());
						}
						set(
							$current,
							"typespec",
							lv_typespec_4_0,
							"org.omg.qvt10.myqvto.MyQvto.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclaratorAccess().getInit_partInitPartParserRuleCall_1_3_0());
					}
					lv_init_part_5_0=ruleInitPart
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclaratorRule());
						}
						set(
							$current,
							"init_part",
							lv_init_part_5_0,
							"org.omg.qvt10.myqvto.MyQvto.InitPart");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSpecRule()); }
	iv_ruleTypeSpec=ruleTypeSpec
	{ $current=$iv_ruleTypeSpec.current; }
	EOF;

// Rule TypeSpec
ruleTypeSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeSpecAccess().getType_referenceTypeReferenceParserRuleCall_0_0());
				}
				lv_type_reference_0_0=ruleTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeSpecRule());
					}
					set(
						$current,
						"type_reference",
						lv_type_reference_0_0,
						"org.omg.qvt10.myqvto.MyQvto.TypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='@'
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeSpecAccess().getCommercialAtKeyword_1_0());
			}
			(
				(
					lv_extent_location_2_0=RULE_ID
					{
						newLeafNode(lv_extent_location_2_0, grammarAccess.getTypeSpecAccess().getExtent_locationIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeSpecRule());
						}
						setWithLastConsumed(
							$current,
							"extent_location",
							lv_extent_location_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInitPart
entryRuleInitPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitPartRule()); }
	iv_ruleInitPart=ruleInitPart
	{ $current=$iv_ruleInitPart.current; }
	EOF;

// Rule InitPart
ruleInitPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_init_op_0_1='='
					{
						newLeafNode(lv_init_op_0_1, grammarAccess.getInitPartAccess().getInit_opEqualsSignKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInitPartRule());
						}
						setWithLastConsumed($current, "init_op", lv_init_op_0_1, null);
					}
					    |
					lv_init_op_0_2=':='
					{
						newLeafNode(lv_init_op_0_2, grammarAccess.getInitPartAccess().getInit_opColonEqualsSignKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInitPartRule());
						}
						setWithLastConsumed($current, "init_op", lv_init_op_0_2, null);
					}
					    |
					lv_init_op_0_3='::='
					{
						newLeafNode(lv_init_op_0_3, grammarAccess.getInitPartAccess().getInit_opColonColonEqualsSignKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInitPartRule());
						}
						setWithLastConsumed($current, "init_op", lv_init_op_0_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInitPartAccess().getExpressionExpressionGOParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpressionGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitPartRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeReferenceAccess().getScoped_identifierScopedIdentifierParserRuleCall_0_1_0());
					}
					lv_scoped_identifier_1_0=ruleScopedIdentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
						}
						set(
							$current,
							"scoped_identifier",
							lv_scoped_identifier_1_0,
							"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeReferenceAccess().getComplex_typeComplexTypeParserRuleCall_1_0());
				}
				lv_complex_type_2_0=ruleComplexType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeReferenceRule());
					}
					set(
						$current,
						"complex_type",
						lv_complex_type_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ComplexType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	iv_ruleComplexType=ruleComplexType
	{ $current=$iv_ruleComplexType.current; }
	EOF;

// Rule ComplexType
ruleComplexType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getComplexTypeAccess().getComplexTypeAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexTypeAccess().getComplex_type_keyComplexTypeKeyEnumRuleCall_0_1_0());
					}
					lv_complex_type_key_1_0=ruleComplexTypeKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
						}
						set(
							$current,
							"complex_type_key",
							lv_complex_type_key_1_0,
							"org.omg.qvt10.myqvto.MyQvto.ComplexTypeKey");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexTypeAccess().getCollection_keyCollectionKeyEnumRuleCall_1_0_0());
					}
					lv_collection_key_2_0=ruleCollectionKey
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
						}
						set(
							$current,
							"collection_key",
							lv_collection_key_2_0,
							"org.omg.qvt10.myqvto.MyQvto.CollectionKey");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_1_2_0());
					}
					lv_typespec_4_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
						}
						add(
							$current,
							"typespec",
							lv_typespec_4_0,
							"org.omg.qvt10.myqvto.MyQvto.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			otherlv_6='Dict'
			{
				newLeafNode(otherlv_6, grammarAccess.getComplexTypeAccess().getDictKeyword_2_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_2_2_0());
					}
					lv_typespec_8_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
						}
						add(
							$current,
							"typespec",
							lv_typespec_8_0,
							"org.omg.qvt10.myqvto.MyQvto.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getComplexTypeAccess().getCommaKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_2_4_0());
					}
					lv_typespec_10_0=ruleTypeSpec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
						}
						add(
							$current,
							"typespec",
							lv_typespec_10_0,
							"org.omg.qvt10.myqvto.MyQvto.TypeSpec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_2_5());
			}
		)
		    |
		(
			otherlv_12='Tuple'
			{
				newLeafNode(otherlv_12, grammarAccess.getComplexTypeAccess().getTupleKeyword_3_0());
			}
			otherlv_13='('
			{
				newLeafNode(otherlv_13, grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexTypeAccess().getDeclarator_listDeclaratorListParserRuleCall_3_2_0());
					}
					lv_declarator_list_14_0=ruleDeclaratorList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexTypeRule());
						}
						set(
							$current,
							"declarator_list",
							lv_declarator_list_14_0,
							"org.omg.qvt10.myqvto.MyQvto.DeclaratorList");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleDeclaratorList
entryRuleDeclaratorList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaratorListRule()); }
	iv_ruleDeclaratorList=ruleDeclaratorList
	{ $current=$iv_ruleDeclaratorList.current; }
	EOF;

// Rule DeclaratorList
ruleDeclaratorList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeclaratorListAccess().getDeclaratorListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclaratorListAccess().getDeclaratorDeclaratorParserRuleCall_1_0());
				}
				lv_declarator_1_0=ruleDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclaratorListRule());
					}
					add(
						$current,
						"declarator",
						lv_declarator_1_0,
						"org.omg.qvt10.myqvto.MyQvto.Declarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getDeclaratorListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclaratorListAccess().getDeclaratorDeclaratorParserRuleCall_2_1_0());
					}
					lv_declarator_3_0=ruleDeclarator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclaratorListRule());
						}
						add(
							$current,
							"declarator",
							lv_declarator_3_0,
							"org.omg.qvt10.myqvto.MyQvto.Declarator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleHelperHeader
entryRuleHelperHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHelperHeaderRule()); }
	iv_ruleHelperHeader=ruleHelperHeader
	{ $current=$iv_ruleHelperHeader.current; }
	EOF;

// Rule HelperHeader
ruleHelperHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperHeaderAccess().getHelper_infoHelperInfoParserRuleCall_0_0());
				}
				lv_helper_info_0_0=ruleHelperInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperHeaderRule());
					}
					set(
						$current,
						"helper_info",
						lv_helper_info_0_0,
						"org.omg.qvt10.myqvto.MyQvto.HelperInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperHeaderAccess().getScope_identifierScopedIdentifierParserRuleCall_1_0());
				}
				lv_scope_identifier_1_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperHeaderRule());
					}
					set(
						$current,
						"scope_identifier",
						lv_scope_identifier_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperHeaderAccess().getComplete_signatureCompleteSignatureParserRuleCall_2_0());
				}
				lv_complete_signature_2_0=ruleCompleteSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperHeaderRule());
					}
					set(
						$current,
						"complete_signature",
						lv_complete_signature_2_0,
						"org.omg.qvt10.myqvto.MyQvto.CompleteSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMappingBody
entryRuleMappingBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingBodyRule()); }
	iv_ruleMappingBody=ruleMappingBody
	{ $current=$iv_ruleMappingBody.current; }
	EOF;

// Rule MappingBody
ruleMappingBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMappingBodyAccess().getMappingBodyAction_0(),
					$current);
			}
		)
		(
			otherlv_1='init'
			{
				newLeafNode(otherlv_1, grammarAccess.getMappingBodyAccess().getInitKeyword_1_0());
			}
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getMappingBodyAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMappingBodyAccess().getInitSectionExpressionGOParserRuleCall_1_2_0_0());
						}
						lv_initSection_3_0=ruleExpressionGO
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMappingBodyRule());
							}
							add(
								$current,
								"initSection",
								lv_initSection_3_0,
								"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=';'
					{
						newLeafNode(otherlv_4, grammarAccess.getMappingBodyAccess().getSemicolonKeyword_1_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMappingBodyAccess().getInitSectionExpressionGOParserRuleCall_1_2_1_1_0());
							}
							lv_initSection_5_0=ruleExpressionGO
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMappingBodyRule());
								}
								add(
									$current,
									"initSection",
									lv_initSection_5_0,
									"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				(
					otherlv_6=';'
					{
						newLeafNode(otherlv_6, grammarAccess.getMappingBodyAccess().getSemicolonKeyword_1_2_2());
					}
				)?
			)?
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getMappingBodyAccess().getRightCurlyBracketKeyword_1_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingBodyAccess().getPopulation_sectionPopulationSectionParserRuleCall_2_0());
				}
				lv_population_section_8_0=rulePopulationSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingBodyRule());
					}
					set(
						$current,
						"population_section",
						lv_population_section_8_0,
						"org.omg.qvt10.myqvto.MyQvto.PopulationSection");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_9='end'
			{
				newLeafNode(otherlv_9, grammarAccess.getMappingBodyAccess().getEndKeyword_3_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getMappingBodyAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMappingBodyAccess().getEndSectionExpressionGOParserRuleCall_3_2_0_0());
						}
						lv_endSection_11_0=ruleExpressionGO
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMappingBodyRule());
							}
							add(
								$current,
								"endSection",
								lv_endSection_11_0,
								"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12=';'
					{
						newLeafNode(otherlv_12, grammarAccess.getMappingBodyAccess().getSemicolonKeyword_3_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMappingBodyAccess().getEndSectionExpressionGOParserRuleCall_3_2_1_1_0());
							}
							lv_endSection_13_0=ruleExpressionGO
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMappingBodyRule());
								}
								add(
									$current,
									"endSection",
									lv_endSection_13_0,
									"org.omg.qvt10.myqvto.MyQvto.ExpressionGO");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				(
					otherlv_14=';'
					{
						newLeafNode(otherlv_14, grammarAccess.getMappingBodyAccess().getSemicolonKeyword_3_2_2());
					}
				)?
			)?
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getMappingBodyAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
	)
;

// Entry rule entryRulePopulationSection
entryRulePopulationSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPopulationSectionRule()); }
	iv_rulePopulationSection=rulePopulationSection
	{ $current=$iv_rulePopulationSection.current; }
	EOF;

// Rule PopulationSection
rulePopulationSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getPopulationSectionAccess().getPopulationSectionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPopulationSectionAccess().getExpression_listExpressionListParserRuleCall_0_1_0());
					}
					lv_expression_list_1_0=ruleExpressionList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPopulationSectionRule());
						}
						set(
							$current,
							"expression_list",
							lv_expression_list_1_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='population'
			{
				newLeafNode(otherlv_2, grammarAccess.getPopulationSectionAccess().getPopulationKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPopulationSectionAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0());
					}
					lv_expression_block_3_0=ruleExpressionBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPopulationSectionRule());
						}
						set(
							$current,
							"expression_block",
							lv_expression_block_3_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleHelperInfo
entryRuleHelperInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHelperInfoRule()); }
	iv_ruleHelperInfo=ruleHelperInfo
	{ $current=$iv_ruleHelperInfo.current; }
	EOF;

// Rule HelperInfo
ruleHelperInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getHelperInfoAccess().getHelperInfoAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperInfoAccess().getQualifierGeneralQualifierEnumRuleCall_1_0());
				}
				lv_qualifier_1_0=ruleGeneralQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperInfoRule());
					}
					add(
						$current,
						"qualifier",
						lv_qualifier_1_0,
						"org.omg.qvt10.myqvto.MyQvto.GeneralQualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getHelperInfoAccess().getHelper_kindHelperKindEnumRuleCall_2_0());
				}
				lv_helper_kind_2_0=ruleHelperKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHelperInfoRule());
					}
					set(
						$current,
						"helper_kind",
						lv_helper_kind_2_0,
						"org.omg.qvt10.myqvto.MyQvto.HelperKind");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompleteSignature
entryRuleCompleteSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompleteSignatureRule()); }
	iv_ruleCompleteSignature=ruleCompleteSignature
	{ $current=$iv_ruleCompleteSignature.current; }
	EOF;

// Rule CompleteSignature
ruleCompleteSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompleteSignatureAccess().getSimple_signatureSimpleSignatureParserRuleCall_0_0());
				}
				lv_simple_signature_0_0=ruleSimpleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompleteSignatureRule());
					}
					set(
						$current,
						"simple_signature",
						lv_simple_signature_0_0,
						"org.omg.qvt10.myqvto.MyQvto.SimpleSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getCompleteSignatureAccess().getColonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompleteSignatureAccess().getParam_listParamListParserRuleCall_1_1_0());
					}
					lv_param_list_2_0=ruleParamList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompleteSignatureRule());
						}
						set(
							$current,
							"param_list",
							lv_param_list_2_0,
							"org.omg.qvt10.myqvto.MyQvto.ParamList");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSimpleSignature
entryRuleSimpleSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleSignatureRule()); }
	iv_ruleSimpleSignature=ruleSimpleSignature
	{ $current=$iv_ruleSimpleSignature.current; }
	EOF;

// Rule SimpleSignature
ruleSimpleSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleSignatureAccess().getSimpleSignatureAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleSignatureAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleSignatureAccess().getParam_listParamListParserRuleCall_2_0());
				}
				lv_param_list_2_0=ruleParamList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleSignatureRule());
					}
					set(
						$current,
						"param_list",
						lv_param_list_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ParamList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSimpleSignatureAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParamList
entryRuleParamList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamListRule()); }
	iv_ruleParamList=ruleParamList
	{ $current=$iv_ruleParamList.current; }
	EOF;

// Rule ParamList
ruleParamList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getParamListAccess().getParamListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParamListAccess().getParamVarParameterParserRuleCall_1_0());
				}
				lv_param_1_0=ruleVarParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamListRule());
					}
					add(
						$current,
						"param",
						lv_param_1_0,
						"org.omg.qvt10.myqvto.MyQvto.VarParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getParamListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParamListAccess().getParamVarParameterParserRuleCall_2_1_0());
					}
					lv_param_3_0=ruleVarParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParamListRule());
						}
						add(
							$current,
							"param",
							lv_param_3_0,
							"org.omg.qvt10.myqvto.MyQvto.VarParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTransformationHeader
entryRuleTransformationHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationHeaderRule()); }
	iv_ruleTransformationHeader=ruleTransformationHeader
	{ $current=$iv_ruleTransformationHeader.current; }
	EOF;

// Rule TransformationHeader
ruleTransformationHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0());
				}
				lv_qualifier_0_0=ruleGeneralQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationHeaderRule());
					}
					add(
						$current,
						"qualifier",
						lv_qualifier_0_0,
						"org.omg.qvt10.myqvto.MyQvto.GeneralQualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='transformation'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransformationHeaderAccess().getTransformationKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTransformationHeaderAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransformationHeaderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationHeaderAccess().getTransformation_signatureSimpleSignatureParserRuleCall_3_0());
				}
				lv_transformation_signature_3_0=ruleSimpleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationHeaderRule());
					}
					set(
						$current,
						"transformation_signature",
						lv_transformation_signature_3_0,
						"org.omg.qvt10.myqvto.MyQvto.SimpleSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationHeaderAccess().getTransformation_usage_refineTransformationUsageRefineParserRuleCall_4_0());
				}
				lv_transformation_usage_refine_4_0=ruleTransformationUsageRefine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationHeaderRule());
					}
					set(
						$current,
						"transformation_usage_refine",
						lv_transformation_usage_refine_4_0,
						"org.omg.qvt10.myqvto.MyQvto.TransformationUsageRefine");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTransformationUsageRefine
entryRuleTransformationUsageRefine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationUsageRefineRule()); }
	iv_ruleTransformationUsageRefine=ruleTransformationUsageRefine
	{ $current=$iv_ruleTransformationUsageRefine.current; }
	EOF;

// Rule TransformationUsageRefine
ruleTransformationUsageRefine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getTransformationUsageRefineAccess().getTransformationUsageRefineAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformationUsageRefineAccess().getModule_usageModuleUsageGOParserRuleCall_0_1_0());
					}
					lv_module_usage_1_0=ruleModuleUsageGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformationUsageRefineRule());
						}
						set(
							$current,
							"module_usage",
							lv_module_usage_1_0,
							"org.omg.qvt10.myqvto.MyQvto.ModuleUsageGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_2='refines'
			{
				newLeafNode(otherlv_2, grammarAccess.getTransformationUsageRefineAccess().getRefinesKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformationUsageRefineAccess().getTransformation_refineModuleRefGOParserRuleCall_1_1_0());
					}
					lv_transformation_refine_3_0=ruleModuleRefGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformationUsageRefineRule());
						}
						set(
							$current,
							"transformation_refine",
							lv_transformation_refine_3_0,
							"org.omg.qvt10.myqvto.MyQvto.ModuleRefGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleModuleUsageGO
entryRuleModuleUsageGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleUsageGORule()); }
	iv_ruleModuleUsageGO=ruleModuleUsageGO
	{ $current=$iv_ruleModuleUsageGO.current; }
	EOF;

// Rule ModuleUsageGO
ruleModuleUsageGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getModuleUsageGOAccess().getModuleUsageGOAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleUsageGOAccess().getAccess_usageAccessUsageParserRuleCall_0_1_0());
					}
					lv_access_usage_1_0=ruleAccessUsage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleUsageGORule());
						}
						set(
							$current,
							"access_usage",
							lv_access_usage_1_0,
							"org.omg.qvt10.myqvto.MyQvto.AccessUsage");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleUsageGOAccess().getExtends_usageExtendsUsageParserRuleCall_1_0());
				}
				lv_extends_usage_2_0=ruleExtendsUsage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleUsageGORule());
					}
					set(
						$current,
						"extends_usage",
						lv_extends_usage_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ExtendsUsage");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModuleRefGO
entryRuleModuleRefGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRefGORule()); }
	iv_ruleModuleRefGO=ruleModuleRefGO
	{ $current=$iv_ruleModuleRefGO.current; }
	EOF;

// Rule ModuleRefGO
ruleModuleRefGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleRefGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_0_0());
				}
				lv_scoped_identifier_0_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRefGORule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_0_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleRefGOAccess().getSimple_signatureSimpleSignatureParserRuleCall_1_0());
				}
				lv_simple_signature_1_0=ruleSimpleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRefGORule());
					}
					set(
						$current,
						"simple_signature",
						lv_simple_signature_1_0,
						"org.omg.qvt10.myqvto.MyQvto.SimpleSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAccessUsage
entryRuleAccessUsage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccessUsageRule()); }
	iv_ruleAccessUsage=ruleAccessUsage
	{ $current=$iv_ruleAccessUsage.current; }
	EOF;

// Rule AccessUsage
ruleAccessUsage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getAccessUsageAccess().getAccessUsageAction_0(),
					$current);
			}
		)
		otherlv_1='access'
		{
			newLeafNode(otherlv_1, grammarAccess.getAccessUsageAccess().getAccessKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAccessUsageAccess().getModule_kindModuleKindEnumRuleCall_2_0());
				}
				lv_module_kind_2_0=ruleModuleKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccessUsageRule());
					}
					set(
						$current,
						"module_kind",
						lv_module_kind_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ModuleKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAccessUsageAccess().getModuleref_listModuleRefGOParserRuleCall_3_0());
				}
				lv_moduleref_list_3_0=ruleModuleRefGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccessUsageRule());
					}
					add(
						$current,
						"moduleref_list",
						lv_moduleref_list_3_0,
						"org.omg.qvt10.myqvto.MyQvto.ModuleRefGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getAccessUsageAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAccessUsageAccess().getModuleref_listModuleRefGOParserRuleCall_4_1_0());
					}
					lv_moduleref_list_5_0=ruleModuleRefGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAccessUsageRule());
						}
						add(
							$current,
							"moduleref_list",
							lv_moduleref_list_5_0,
							"org.omg.qvt10.myqvto.MyQvto.ModuleRefGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExtendsUsage
entryRuleExtendsUsage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendsUsageRule()); }
	iv_ruleExtendsUsage=ruleExtendsUsage
	{ $current=$iv_ruleExtendsUsage.current; }
	EOF;

// Rule ExtendsUsage
ruleExtendsUsage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getExtendsUsageAccess().getExtendsUsageAction_0(),
					$current);
			}
		)
		otherlv_1='extends'
		{
			newLeafNode(otherlv_1, grammarAccess.getExtendsUsageAccess().getExtendsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsUsageAccess().getModule_kindModuleKindEnumRuleCall_2_0());
				}
				lv_module_kind_2_0=ruleModuleKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsUsageRule());
					}
					set(
						$current,
						"module_kind",
						lv_module_kind_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ModuleKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsUsageAccess().getModuleref_listModuleRefGOParserRuleCall_3_0());
				}
				lv_moduleref_list_3_0=ruleModuleRefGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsUsageRule());
					}
					add(
						$current,
						"moduleref_list",
						lv_moduleref_list_3_0,
						"org.omg.qvt10.myqvto.MyQvto.ModuleRefGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getExtendsUsageAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExtendsUsageAccess().getModuleref_listModuleRefGOParserRuleCall_4_1_0());
					}
					lv_moduleref_list_5_0=ruleModuleRefGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtendsUsageRule());
						}
						add(
							$current,
							"moduleref_list",
							lv_moduleref_list_5_0,
							"org.omg.qvt10.myqvto.MyQvto.ModuleRefGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMappingFullHeader
entryRuleMappingFullHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingFullHeaderRule()); }
	iv_ruleMappingFullHeader=ruleMappingFullHeader
	{ $current=$iv_ruleMappingFullHeader.current; }
	EOF;

// Rule MappingFullHeader
ruleMappingFullHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingFullHeaderAccess().getMapping_headerMappingHeaderParserRuleCall_0_0());
				}
				lv_mapping_header_0_0=ruleMappingHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingFullHeaderRule());
					}
					set(
						$current,
						"mapping_header",
						lv_mapping_header_0_0,
						"org.omg.qvt10.myqvto.MyQvto.MappingHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='when'
			{
				newLeafNode(otherlv_1, grammarAccess.getMappingFullHeaderAccess().getWhenKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMappingFullHeaderAccess().getWhenExpressionBlockParserRuleCall_1_1_0());
					}
					lv_when_2_0=ruleExpressionBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingFullHeaderRule());
						}
						set(
							$current,
							"when",
							lv_when_2_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='where'
			{
				newLeafNode(otherlv_3, grammarAccess.getMappingFullHeaderAccess().getWhereKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMappingFullHeaderAccess().getWhereExpressionBlockParserRuleCall_2_1_0());
					}
					lv_where_4_0=ruleExpressionBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingFullHeaderRule());
						}
						set(
							$current,
							"where",
							lv_where_4_0,
							"org.omg.qvt10.myqvto.MyQvto.ExpressionBlock");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleMappingHeader
entryRuleMappingHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingHeaderRule()); }
	iv_ruleMappingHeader=ruleMappingHeader
	{ $current=$iv_ruleMappingHeader.current; }
	EOF;

// Rule MappingHeader
ruleMappingHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0());
				}
				lv_qualifier_0_0=ruleGeneralQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingHeaderRule());
					}
					add(
						$current,
						"qualifier",
						lv_qualifier_0_0,
						"org.omg.qvt10.myqvto.MyQvto.GeneralQualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='mapping'
		{
			newLeafNode(otherlv_1, grammarAccess.getMappingHeaderAccess().getMappingKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingHeaderAccess().getParam_directionDirectionKindEnumRuleCall_2_0());
				}
				lv_param_direction_2_0=ruleDirectionKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingHeaderRule());
					}
					set(
						$current,
						"param_direction",
						lv_param_direction_2_0,
						"org.omg.qvt10.myqvto.MyQvto.DirectionKind");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_3_0());
				}
				lv_scoped_identifier_3_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingHeaderRule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_3_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingHeaderAccess().getComplete_signatureCompleteSignatureParserRuleCall_4_0());
				}
				lv_complete_signature_4_0=ruleCompleteSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingHeaderRule());
					}
					set(
						$current,
						"complete_signature",
						lv_complete_signature_4_0,
						"org.omg.qvt10.myqvto.MyQvto.CompleteSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingHeaderAccess().getMapping_extraMappingExtraParserRuleCall_5_0());
				}
				lv_mapping_extra_5_0=ruleMappingExtra
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingHeaderRule());
					}
					add(
						$current,
						"mapping_extra",
						lv_mapping_extra_5_0,
						"org.omg.qvt10.myqvto.MyQvto.MappingExtra");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleMappingExtra
entryRuleMappingExtra returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingExtraRule()); }
	iv_ruleMappingExtra=ruleMappingExtra
	{ $current=$iv_ruleMappingExtra.current; }
	EOF;

// Rule MappingExtra
ruleMappingExtra returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getMappingExtraAccess().getMappingExtraAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMappingExtraAccess().getMapping_extensionMappingExtensionParserRuleCall_0_1_0());
					}
					lv_mapping_extension_1_0=ruleMappingExtension
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMappingExtraRule());
						}
						set(
							$current,
							"mapping_extension",
							lv_mapping_extension_1_0,
							"org.omg.qvt10.myqvto.MyQvto.MappingExtension");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingExtraAccess().getMapping_refinementMappingRefinementParserRuleCall_1_0());
				}
				lv_mapping_refinement_2_0=ruleMappingRefinement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingExtraRule());
					}
					set(
						$current,
						"mapping_refinement",
						lv_mapping_refinement_2_0,
						"org.omg.qvt10.myqvto.MyQvto.MappingRefinement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMappingExtension
entryRuleMappingExtension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingExtensionRule()); }
	iv_ruleMappingExtension=ruleMappingExtension
	{ $current=$iv_ruleMappingExtension.current; }
	EOF;

// Rule MappingExtension
ruleMappingExtension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingExtensionAccess().getMapping_extension_keyMappingExtensionKeyEnumRuleCall_0_0());
				}
				lv_mapping_extension_key_0_0=ruleMappingExtensionKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingExtensionRule());
					}
					set(
						$current,
						"mapping_extension_key",
						lv_mapping_extension_key_0_0,
						"org.omg.qvt10.myqvto.MyQvto.MappingExtensionKey");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingExtensionAccess().getScoped_identifier_listScopedIdentifierListParserRuleCall_1_0());
				}
				lv_scoped_identifier_list_1_0=ruleScopedIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingExtensionRule());
					}
					set(
						$current,
						"scoped_identifier_list",
						lv_scoped_identifier_list_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMappingRefinement
entryRuleMappingRefinement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingRefinementRule()); }
	iv_ruleMappingRefinement=ruleMappingRefinement
	{ $current=$iv_ruleMappingRefinement.current; }
	EOF;

// Rule MappingRefinement
ruleMappingRefinement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='refines'
		{
			newLeafNode(otherlv_0, grammarAccess.getMappingRefinementAccess().getRefinesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingRefinementAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0());
				}
				lv_scoped_identifier_1_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingRefinementRule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleScopedIdentifierList
entryRuleScopedIdentifierList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopedIdentifierListRule()); }
	iv_ruleScopedIdentifierList=ruleScopedIdentifierList
	{ $current=$iv_ruleScopedIdentifierList.current; }
	EOF;

// Rule ScopedIdentifierList
ruleScopedIdentifierList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getScopedIdentifierListAccess().getScopedIdentifierListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listScopedIdentifierParserRuleCall_1_0());
				}
				lv_scoped_identifier_list_1_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScopedIdentifierListRule());
					}
					add(
						$current,
						"scoped_identifier_list",
						lv_scoped_identifier_list_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getScopedIdentifierListAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listScopedIdentifierParserRuleCall_2_1_0());
					}
					lv_scoped_identifier_list_3_0=ruleScopedIdentifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopedIdentifierListRule());
						}
						add(
							$current,
							"scoped_identifier_list",
							lv_scoped_identifier_list_3_0,
							"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConstructorHeader
entryRuleConstructorHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorHeaderRule()); }
	iv_ruleConstructorHeader=ruleConstructorHeader
	{ $current=$iv_ruleConstructorHeader.current; }
	EOF;

// Rule ConstructorHeader
ruleConstructorHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0());
				}
				lv_qualifier_0_0=ruleGeneralQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorHeaderRule());
					}
					add(
						$current,
						"qualifier",
						lv_qualifier_0_0,
						"org.omg.qvt10.myqvto.MyQvto.GeneralQualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_1='constructor'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstructorHeaderAccess().getConstructorKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_2_0());
				}
				lv_scoped_identifier_2_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorHeaderRule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorHeaderAccess().getSimple_signatureSimpleSignatureParserRuleCall_3_0());
				}
				lv_simple_signature_3_0=ruleSimpleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorHeaderRule());
					}
					set(
						$current,
						"simple_signature",
						lv_simple_signature_3_0,
						"org.omg.qvt10.myqvto.MyQvto.SimpleSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEntryHeader
entryRuleEntryHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryHeaderRule()); }
	iv_ruleEntryHeader=ruleEntryHeader
	{ $current=$iv_ruleEntryHeader.current; }
	EOF;

// Rule EntryHeader
ruleEntryHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='main'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntryHeaderAccess().getMainKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntryHeaderAccess().getSimple_signatureSimpleSignatureParserRuleCall_1_0());
				}
				lv_simple_signature_1_0=ruleSimpleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntryHeaderRule());
					}
					set(
						$current,
						"simple_signature",
						lv_simple_signature_1_0,
						"org.omg.qvt10.myqvto.MyQvto.SimpleSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLibraryHeader
entryRuleLibraryHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLibraryHeaderRule()); }
	iv_ruleLibraryHeader=ruleLibraryHeader
	{ $current=$iv_ruleLibraryHeader.current; }
	EOF;

// Rule LibraryHeader
ruleLibraryHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getLibraryHeaderAccess().getLibraryHeaderAction_0(),
					$current);
			}
		)
		otherlv_1='library'
		{
			newLeafNode(otherlv_1, grammarAccess.getLibraryHeaderAccess().getLibraryKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLibraryHeaderAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLibraryHeaderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLibraryHeaderAccess().getLibrary_signatureSimpleSignatureParserRuleCall_3_0());
				}
				lv_library_signature_3_0=ruleSimpleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLibraryHeaderRule());
					}
					set(
						$current,
						"library_signature",
						lv_library_signature_3_0,
						"org.omg.qvt10.myqvto.MyQvto.SimpleSignature");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLibraryHeaderAccess().getModule_usageModuleUsageGOParserRuleCall_4_0());
				}
				lv_module_usage_4_0=ruleModuleUsageGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLibraryHeaderRule());
					}
					set(
						$current,
						"module_usage",
						lv_module_usage_4_0,
						"org.omg.qvt10.myqvto.MyQvto.ModuleUsageGO");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMetaModelHeader
entryRuleMetaModelHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaModelHeaderRule()); }
	iv_ruleMetaModelHeader=ruleMetaModelHeader
	{ $current=$iv_ruleMetaModelHeader.current; }
	EOF;

// Rule MetaModelHeader
ruleMetaModelHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='metamodel'
			{
				newLeafNode(otherlv_0, grammarAccess.getMetaModelHeaderAccess().getMetamodelKeyword_0_0());
			}
			    |
			otherlv_1='package'
			{
				newLeafNode(otherlv_1, grammarAccess.getMetaModelHeaderAccess().getPackageKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaModelHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0());
				}
				lv_scoped_identifier_2_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaModelHeaderRule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMetaModelElement
entryRuleMetaModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaModelElementRule()); }
	iv_ruleMetaModelElement=ruleMetaModelElement
	{ $current=$iv_ruleMetaModelElement.current; }
	EOF;

// Rule MetaModelElement
ruleMetaModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getMetaModelElementAccess().getMetaModelElementAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMetaModelElementAccess().getClassifierClassifierGOParserRuleCall_0_1_0());
					}
					lv_classifier_1_0=ruleClassifierGO
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMetaModelElementRule());
						}
						set(
							$current,
							"classifier",
							lv_classifier_1_0,
							"org.omg.qvt10.myqvto.MyQvto.ClassifierGO");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaModelElementAccess().getEnumerationEnumerationGOParserRuleCall_1_0());
				}
				lv_enumeration_2_0=ruleEnumerationGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaModelElementRule());
					}
					set(
						$current,
						"enumeration",
						lv_enumeration_2_0,
						"org.omg.qvt10.myqvto.MyQvto.EnumerationGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMetaModelElementAccess().getTagTagGOParserRuleCall_2_0());
				}
				lv_tag_3_0=ruleTagGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetaModelElementRule());
					}
					set(
						$current,
						"tag",
						lv_tag_3_0,
						"org.omg.qvt10.myqvto.MyQvto.TagGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumerationGO
entryRuleEnumerationGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationGORule()); }
	iv_ruleEnumerationGO=ruleEnumerationGO
	{ $current=$iv_ruleEnumerationGO.current; }
	EOF;

// Rule EnumerationGO
ruleEnumerationGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumerationGOAccess().getEnumerationGOAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationGOAccess().getEnumeration_hEnumerationHeaderParserRuleCall_1_0());
				}
				lv_enumeration_h_1_0=ruleEnumerationHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationGORule());
					}
					set(
						$current,
						"enumeration_h",
						lv_enumeration_h_1_0,
						"org.omg.qvt10.myqvto.MyQvto.EnumerationHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getEnumerationGOAccess().getSemicolonKeyword_2_0());
			}
			    |
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getEnumerationGOAccess().getLeftCurlyBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEnumerationGOAccess().getIdentifierEStringParserRuleCall_2_1_1_0());
						}
						lv_identifier_4_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEnumerationGORule());
							}
							add(
								$current,
								"identifier",
								lv_identifier_4_0,
								"org.omg.qvt10.myqvto.MyQvto.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_5=','
					{
						newLeafNode(otherlv_5, grammarAccess.getEnumerationGOAccess().getCommaKeyword_2_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getEnumerationGOAccess().getIdentifierEStringParserRuleCall_2_1_2_1_0());
							}
							lv_identifier_6_0=ruleEString
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getEnumerationGORule());
								}
								add(
									$current,
									"identifier",
									lv_identifier_6_0,
									"org.omg.qvt10.myqvto.MyQvto.EString");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_7='}'
				{
					newLeafNode(otherlv_7, grammarAccess.getEnumerationGOAccess().getRightCurlyBracketKeyword_2_1_3());
				}
				(
					otherlv_8=';'
					{
						newLeafNode(otherlv_8, grammarAccess.getEnumerationGOAccess().getSemicolonKeyword_2_1_4());
					}
				)?
			)
		)
	)
;

// Entry rule entryRuleEnumerationHeader
entryRuleEnumerationHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationHeaderRule()); }
	iv_ruleEnumerationHeader=ruleEnumerationHeader
	{ $current=$iv_ruleEnumerationHeader.current; }
	EOF;

// Rule EnumerationHeader
ruleEnumerationHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumerationHeaderAccess().getEnumKeyword_0());
		}
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getEnumerationHeaderAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationHeaderRule());
					}
					setWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleClassifierHeader
entryRuleClassifierHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierHeaderRule()); }
	iv_ruleClassifierHeader=ruleClassifierHeader
	{ $current=$iv_ruleClassifierHeader.current; }
	EOF;

// Rule ClassifierHeader
ruleClassifierHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierHeaderAccess().getClassifier_infoClassifierInfoParserRuleCall_0_0());
				}
				lv_classifier_info_0_0=ruleClassifierInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierHeaderRule());
					}
					set(
						$current,
						"classifier_info",
						lv_classifier_info_0_0,
						"org.omg.qvt10.myqvto.MyQvto.ClassifierInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0());
				}
				lv_scoped_identifier_1_0=ruleScopedIdentifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierHeaderRule());
					}
					set(
						$current,
						"scoped_identifier",
						lv_scoped_identifier_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierHeaderAccess().getClassifier_extensionClassifierExtensionParserRuleCall_2_0());
				}
				lv_classifier_extension_2_0=ruleClassifierExtension
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierHeaderRule());
					}
					set(
						$current,
						"classifier_extension",
						lv_classifier_extension_2_0,
						"org.omg.qvt10.myqvto.MyQvto.ClassifierExtension");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleClassifierFeatureList
entryRuleClassifierFeatureList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierFeatureListRule()); }
	iv_ruleClassifierFeatureList=ruleClassifierFeatureList
	{ $current=$iv_ruleClassifierFeatureList.current; }
	EOF;

// Rule ClassifierFeatureList
ruleClassifierFeatureList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getClassifierFeatureListAccess().getClassifierFeatureListAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureClassifierFeatureParserRuleCall_1_0());
				}
				lv_classifier_feature_1_0=ruleClassifierFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierFeatureListRule());
					}
					add(
						$current,
						"classifier_feature",
						lv_classifier_feature_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ClassifierFeature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getClassifierFeatureListAccess().getSemicolonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureClassifierFeatureParserRuleCall_2_1_0());
					}
					lv_classifier_feature_3_0=ruleClassifierFeature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierFeatureListRule());
						}
						add(
							$current,
							"classifier_feature",
							lv_classifier_feature_3_0,
							"org.omg.qvt10.myqvto.MyQvto.ClassifierFeature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getClassifierFeatureListAccess().getSemicolonKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleClassifierInfo
entryRuleClassifierInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierInfoRule()); }
	iv_ruleClassifierInfo=ruleClassifierInfo
	{ $current=$iv_ruleClassifierInfo.current; }
	EOF;

// Rule ClassifierInfo
ruleClassifierInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					/* */
				}
				{
					$current = forceCreateModelElement(
						grammarAccess.getClassifierInfoAccess().getClassifierInfoAction_0_0(),
						$current);
				}
			)
			otherlv_1='datatype'
			{
				newLeafNode(otherlv_1, grammarAccess.getClassifierInfoAccess().getDatatypeKeyword_0_1());
			}
		)
		    |
		otherlv_2='primitive'
		{
			newLeafNode(otherlv_2, grammarAccess.getClassifierInfoAccess().getPrimitiveKeyword_1());
		}
		    |
		otherlv_3='exception'
		{
			newLeafNode(otherlv_3, grammarAccess.getClassifierInfoAccess().getExceptionKeyword_2());
		}
		    |
		(
			(
				otherlv_4='intermediate'
				{
					newLeafNode(otherlv_4, grammarAccess.getClassifierInfoAccess().getIntermediateKeyword_3_0());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierInfoAccess().getQualifierGeneralQualifierEnumRuleCall_3_1_0());
					}
					lv_qualifier_5_0=ruleGeneralQualifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierInfoRule());
						}
						add(
							$current,
							"qualifier",
							lv_qualifier_5_0,
							"org.omg.qvt10.myqvto.MyQvto.GeneralQualifier");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_6='class'
			{
				newLeafNode(otherlv_6, grammarAccess.getClassifierInfoAccess().getClassKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleClassifierExtension
entryRuleClassifierExtension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierExtensionRule()); }
	iv_ruleClassifierExtension=ruleClassifierExtension
	{ $current=$iv_ruleClassifierExtension.current; }
	EOF;

// Rule ClassifierExtension
ruleClassifierExtension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extends'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassifierExtensionAccess().getExtendsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierExtensionAccess().getScoped_identifier_listScopedIdentifierListParserRuleCall_1_0());
				}
				lv_scoped_identifier_list_1_0=ruleScopedIdentifierList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierExtensionRule());
					}
					set(
						$current,
						"scoped_identifier_list",
						lv_scoped_identifier_list_1_0,
						"org.omg.qvt10.myqvto.MyQvto.ScopedIdentifierList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassifierFeature
entryRuleClassifierFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassifierFeatureRule()); }
	iv_ruleClassifierFeature=ruleClassifierFeature
	{ $current=$iv_ruleClassifierFeature.current; }
	EOF;

// Rule ClassifierFeature
ruleClassifierFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierFeatureAccess().getFeature_qualifierFeatureQualifierParserRuleCall_0_0_0());
					}
					lv_feature_qualifier_0_0=ruleFeatureQualifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierFeatureRule());
						}
						set(
							$current,
							"feature_qualifier",
							lv_feature_qualifier_0_0,
							"org.omg.qvt10.myqvto.MyQvto.FeatureQualifier");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getClassifierFeatureAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0());
					}
					lv_declarator_1_0=ruleDeclarator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassifierFeatureRule());
						}
						set(
							$current,
							"declarator",
							lv_declarator_1_0,
							"org.omg.qvt10.myqvto.MyQvto.Declarator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getClassifierFeatureAccess().getMultiplicityMultiplicityParserRuleCall_0_2_0_0_0());
							}
							lv_multiplicity_2_0=ruleMultiplicity
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getClassifierFeatureRule());
								}
								set(
									$current,
									"multiplicity",
									lv_multiplicity_2_0,
									"org.omg.qvt10.myqvto.MyQvto.Multiplicity");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						(
							{
								newCompositeNode(grammarAccess.getClassifierFeatureAccess().getOpposite_propertyOppositePropertyParserRuleCall_0_2_0_1_0());
							}
							lv_opposite_property_3_0=ruleOppositeProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getClassifierFeatureRule());
								}
								set(
									$current,
									"opposite_property",
									lv_opposite_property_3_0,
									"org.omg.qvt10.myqvto.MyQvto.OppositeProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)?
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getClassifierFeatureAccess().getComplete_signatureCompleteSignatureParserRuleCall_0_2_1_0());
						}
						lv_complete_signature_4_0=ruleCompleteSignature
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getClassifierFeatureRule());
							}
							set(
								$current,
								"complete_signature",
								lv_complete_signature_4_0,
								"org.omg.qvt10.myqvto.MyQvto.CompleteSignature");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassifierFeatureAccess().getTagTagGOParserRuleCall_1_0());
				}
				lv_tag_5_0=ruleTagGO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassifierFeatureRule());
					}
					set(
						$current,
						"tag",
						lv_tag_5_0,
						"org.omg.qvt10.myqvto.MyQvto.TagGO");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFeatureQualifier
entryRuleFeatureQualifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureQualifierRule()); }
	iv_ruleFeatureQualifier=ruleFeatureQualifier
	{ $current=$iv_ruleFeatureQualifier.current; }
	EOF;

// Rule FeatureQualifier
ruleFeatureQualifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getFeatureQualifierAccess().getFeatureQualifierAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureQualifierAccess().getStereotype_qualifierStereotypeQualifierParserRuleCall_1_0());
				}
				lv_stereotype_qualifier_1_0=ruleStereotypeQualifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureQualifierRule());
					}
					set(
						$current,
						"stereotype_qualifier",
						lv_stereotype_qualifier_1_0,
						"org.omg.qvt10.myqvto.MyQvto.StereotypeQualifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureQualifierAccess().getFeature_keyFeatureKeyEnumRuleCall_2_0());
				}
				lv_feature_key_2_0=ruleFeatureKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureQualifierRule());
					}
					add(
						$current,
						"feature_key",
						lv_feature_key_2_0,
						"org.omg.qvt10.myqvto.MyQvto.FeatureKey");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityRule()); }
	iv_ruleMultiplicity=ruleMultiplicity
	{ $current=$iv_ruleMultiplicity.current; }
	EOF;

// Rule Multiplicity
ruleMultiplicity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_multiplicity_range_1_0=RULE_MULTIPLICITYRANGE
				{
					newLeafNode(lv_multiplicity_range_1_0, grammarAccess.getMultiplicityAccess().getMultiplicity_rangeMULTIPLICITYRANGETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultiplicityRule());
					}
					setWithLastConsumed(
						$current,
						"multiplicity_range",
						lv_multiplicity_range_1_0,
						"org.omg.qvt10.myqvto.MyQvto.MULTIPLICITYRANGE");
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleOppositeProperty
entryRuleOppositeProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOppositePropertyRule()); }
	iv_ruleOppositeProperty=ruleOppositeProperty
	{ $current=$iv_ruleOppositeProperty.current; }
	EOF;

// Rule OppositeProperty
ruleOppositeProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getOppositePropertyAccess().getOppositePropertyAction_0(),
					$current);
			}
		)
		otherlv_1='opposites'
		{
			newLeafNode(otherlv_1, grammarAccess.getOppositePropertyAccess().getOppositesKeyword_1());
		}
		(
			otherlv_2='~'
			{
				newLeafNode(otherlv_2, grammarAccess.getOppositePropertyAccess().getTildeKeyword_2());
			}
		)?
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getOppositePropertyAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOppositePropertyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOppositePropertyAccess().getMultiplicityMultiplicityParserRuleCall_4_0());
				}
				lv_multiplicity_4_0=ruleMultiplicity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOppositePropertyRule());
					}
					set(
						$current,
						"multiplicity",
						lv_multiplicity_4_0,
						"org.omg.qvt10.myqvto.MyQvto.Multiplicity");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleStereotypeQualifier
entryRuleStereotypeQualifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStereotypeQualifierRule()); }
	iv_ruleStereotypeQualifier=ruleStereotypeQualifier
	{ $current=$iv_ruleStereotypeQualifier.current; }
	EOF;

// Rule StereotypeQualifier
ruleStereotypeQualifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getStereotypeQualifierAccess().getStereotypeQualifierAction_0(),
					$current);
			}
		)
		otherlv_1='<<'
		{
			newLeafNode(otherlv_1, grammarAccess.getStereotypeQualifierAccess().getLessThanSignLessThanSignKeyword_1());
		}
		(
			(
				lv_identifier_2_0=RULE_ID
				{
					newLeafNode(lv_identifier_2_0, grammarAccess.getStereotypeQualifierAccess().getIdentifierIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStereotypeQualifierRule());
					}
					addWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getStereotypeQualifierAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_identifier_4_0=RULE_ID
					{
						newLeafNode(lv_identifier_4_0, grammarAccess.getStereotypeQualifierAccess().getIdentifierIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStereotypeQualifierRule());
						}
						addWithLastConsumed(
							$current,
							"identifier",
							lv_identifier_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		otherlv_5='>>'
		{
			newLeafNode(otherlv_5, grammarAccess.getStereotypeQualifierAccess().getGreaterThanSignGreaterThanSignKeyword_4());
		}
	)
;

// Entry rule entryRuleUnitRefGO
entryRuleUnitRefGO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRefGORule()); }
	iv_ruleUnitRefGO=ruleUnitRefGO
	{ $current=$iv_ruleUnitRefGO.current; }
	EOF;

// Rule UnitRefGO
ruleUnitRefGO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnitRefGOAccess().getUnitRefGOAction_0(),
					$current);
			}
		)
		(
			(
				lv_identifier_1_0=RULE_ID
				{
					newLeafNode(lv_identifier_1_0, grammarAccess.getUnitRefGOAccess().getIdentifierIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRefGORule());
					}
					addWithLastConsumed(
						$current,
						"identifier",
						lv_identifier_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getUnitRefGOAccess().getFullStopKeyword_2_0());
			}
			(
				(
					lv_identifier_3_0=RULE_ID
					{
						newLeafNode(lv_identifier_3_0, grammarAccess.getUnitRefGOAccess().getIdentifierIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitRefGORule());
						}
						addWithLastConsumed(
							$current,
							"identifier",
							lv_identifier_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
	)
;

// Rule DirectionKind
ruleDirectionKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getDirectionKindAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDirectionKindAccess().getInEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='inout'
			{
				$current = grammarAccess.getDirectionKindAccess().getInoutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDirectionKindAccess().getInoutEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='out'
			{
				$current = grammarAccess.getDirectionKindAccess().getOutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDirectionKindAccess().getOutEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ComplexTypeKey
ruleComplexTypeKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Collection'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getCollectionEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComplexTypeKeyAccess().getCollectionEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Set'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getSetEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComplexTypeKeyAccess().getSetEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='OrderedSet'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getOrderedSetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComplexTypeKeyAccess().getOrderedSetEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Sequence'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getSequenceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComplexTypeKeyAccess().getSequenceEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Bag'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getBagEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComplexTypeKeyAccess().getBagEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='List'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getListEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getComplexTypeKeyAccess().getListEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Dict'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getDictEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getComplexTypeKeyAccess().getDictEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Tuple'
			{
				$current = grammarAccess.getComplexTypeKeyAccess().getTupleEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getComplexTypeKeyAccess().getTupleEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule CollectionKey
ruleCollectionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Collection'
			{
				$current = grammarAccess.getCollectionKeyAccess().getCollectionEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCollectionKeyAccess().getCollectionEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Set'
			{
				$current = grammarAccess.getCollectionKeyAccess().getSetEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCollectionKeyAccess().getSetEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='OrderedSet'
			{
				$current = grammarAccess.getCollectionKeyAccess().getOrderedSetEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCollectionKeyAccess().getOrderedSetEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Sequence'
			{
				$current = grammarAccess.getCollectionKeyAccess().getSequenceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCollectionKeyAccess().getSequenceEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Bag'
			{
				$current = grammarAccess.getCollectionKeyAccess().getBagEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCollectionKeyAccess().getBagEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='List'
			{
				$current = grammarAccess.getCollectionKeyAccess().getListEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCollectionKeyAccess().getListEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule GeneralQualifier
ruleGeneralQualifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='blackbox'
			{
				$current = grammarAccess.getGeneralQualifierAccess().getBlackboxEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGeneralQualifierAccess().getBlackboxEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='abstract'
			{
				$current = grammarAccess.getGeneralQualifierAccess().getAbstractEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGeneralQualifierAccess().getAbstractEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='static'
			{
				$current = grammarAccess.getGeneralQualifierAccess().getStaticEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGeneralQualifierAccess().getStaticEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule HelperKind
ruleHelperKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='helper'
			{
				$current = grammarAccess.getHelperKindAccess().getHelperEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHelperKindAccess().getHelperEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='query'
			{
				$current = grammarAccess.getHelperKindAccess().getQueryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHelperKindAccess().getQueryEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ModuleKind
ruleModuleKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='transformation'
			{
				$current = grammarAccess.getModuleKindAccess().getTransformationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getModuleKindAccess().getTransformationEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='library'
			{
				$current = grammarAccess.getModuleKindAccess().getLibraryEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getModuleKindAccess().getLibraryEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule MappingExtensionKey
ruleMappingExtensionKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='inherits'
			{
				$current = grammarAccess.getMappingExtensionKeyAccess().getInheritsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMappingExtensionKeyAccess().getInheritsEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='merges'
			{
				$current = grammarAccess.getMappingExtensionKeyAccess().getMergesEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMappingExtensionKeyAccess().getMergesEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='disjuncts'
			{
				$current = grammarAccess.getMappingExtensionKeyAccess().getDisjunctsEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMappingExtensionKeyAccess().getDisjunctsEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule PropertyKey
rulePropertyKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='derived'
			{
				$current = grammarAccess.getPropertyKeyAccess().getDerivedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPropertyKeyAccess().getDerivedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='literal'
			{
				$current = grammarAccess.getPropertyKeyAccess().getLiteralEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPropertyKeyAccess().getLiteralEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='configuration'
			{
				$current = grammarAccess.getPropertyKeyAccess().getConfigurationEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPropertyKeyAccess().getConfigurationEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='property'
			{
				$current = grammarAccess.getPropertyKeyAccess().getPropertyEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPropertyKeyAccess().getPropertyEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule FeatureKey
ruleFeatureKey returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='composes'
			{
				$current = grammarAccess.getFeatureKeyAccess().getComposesEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFeatureKeyAccess().getComposesEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='references'
			{
				$current = grammarAccess.getFeatureKeyAccess().getReferencesEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFeatureKeyAccess().getReferencesEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='readonly'
			{
				$current = grammarAccess.getFeatureKeyAccess().getReadonlyEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFeatureKeyAccess().getReadonlyEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='derived'
			{
				$current = grammarAccess.getFeatureKeyAccess().getDerivedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFeatureKeyAccess().getDerivedEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='static'
			{
				$current = grammarAccess.getFeatureKeyAccess().getStaticEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFeatureKeyAccess().getStaticEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_MULTIPLICITYRANGE : (RULE_INT|'*'|RULE_INT '...' RULE_INT|RULE_INT '...' '*');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
