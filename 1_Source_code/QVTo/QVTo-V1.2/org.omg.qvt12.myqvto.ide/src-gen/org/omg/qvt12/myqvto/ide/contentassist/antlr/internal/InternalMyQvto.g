/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyQvto;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.omg.qvt12.myqvto.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.omg.qvt12.myqvto.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.omg.qvt12.myqvto.services.MyQvtoGrammarAccess;

}
@parser::members {
	private MyQvtoGrammarAccess grammarAccess;

	public void setGrammarAccess(MyQvtoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTopLevelGO
entryRuleTopLevelGO
:
{ before(grammarAccess.getTopLevelGORule()); }
	 ruleTopLevelGO
{ after(grammarAccess.getTopLevelGORule()); } 
	 EOF 
;

// Rule TopLevelGO
ruleTopLevelGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelGOAccess().getGroup()); }
		(rule__TopLevelGO__Group__0)
		{ after(grammarAccess.getTopLevelGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getAlternatives()); }
		(rule__Module__Alternatives)
		{ after(grammarAccess.getModuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImperativeOperation
entryRuleImperativeOperation
:
{ before(grammarAccess.getImperativeOperationRule()); }
	 ruleImperativeOperation
{ after(grammarAccess.getImperativeOperationRule()); } 
	 EOF 
;

// Rule ImperativeOperation
ruleImperativeOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImperativeOperationAccess().getAlternatives()); }
		(rule__ImperativeOperation__Alternatives)
		{ after(grammarAccess.getImperativeOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleImport
entryRuleModuleImport
:
{ before(grammarAccess.getModuleImportRule()); }
	 ruleModuleImport
{ after(grammarAccess.getModuleImportRule()); } 
	 EOF 
;

// Rule ModuleImport
ruleModuleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleImportAccess().getAlternatives()); }
		(rule__ModuleImport__Alternatives)
		{ after(grammarAccess.getModuleImportAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntryOperation
entryRuleEntryOperation
:
{ before(grammarAccess.getEntryOperationRule()); }
	 ruleEntryOperation
{ after(grammarAccess.getEntryOperationRule()); } 
	 EOF 
;

// Rule EntryOperation
ruleEntryOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryOperationAccess().getGroup()); }
		(rule__EntryOperation__Group__0)
		{ after(grammarAccess.getEntryOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionGO
entryRuleExpressionGO
:
{ before(grammarAccess.getExpressionGORule()); }
	 ruleExpressionGO
{ after(grammarAccess.getExpressionGORule()); } 
	 EOF 
;

// Rule ExpressionGO
ruleExpressionGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionGOAccess().getGroup()); }
		(rule__ExpressionGO__Group__0)
		{ after(grammarAccess.getExpressionGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelType
entryRuleModelType
:
{ before(grammarAccess.getModelTypeRule()); }
	 ruleModelType
{ after(grammarAccess.getModelTypeRule()); } 
	 EOF 
;

// Rule ModelType
ruleModelType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelTypeAccess().getGroup()); }
		(rule__ModelType__Group__0)
		{ after(grammarAccess.getModelTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructor
entryRuleConstructor
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorAccess().getGroup()); }
		(rule__Constructor__Group__0)
		{ after(grammarAccess.getConstructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContextualProperty
entryRuleContextualProperty
:
{ before(grammarAccess.getContextualPropertyRule()); }
	 ruleContextualProperty
{ after(grammarAccess.getContextualPropertyRule()); } 
	 EOF 
;

// Rule ContextualProperty
ruleContextualProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextualPropertyAccess().getGroup()); }
		(rule__ContextualProperty__Group__0)
		{ after(grammarAccess.getContextualPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHelper
entryRuleHelper
:
{ before(grammarAccess.getHelperRule()); }
	 ruleHelper
{ after(grammarAccess.getHelperRule()); } 
	 EOF 
;

// Rule Helper
ruleHelper 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHelperAccess().getGroup()); }
		(rule__Helper__Group__0)
		{ after(grammarAccess.getHelperAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLibrary
entryRuleLibrary
:
{ before(grammarAccess.getLibraryRule()); }
	 ruleLibrary
{ after(grammarAccess.getLibraryRule()); } 
	 EOF 
;

// Rule Library
ruleLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLibraryAccess().getGroup()); }
		(rule__Library__Group__0)
		{ after(grammarAccess.getLibraryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingOperation
entryRuleMappingOperation
:
{ before(grammarAccess.getMappingOperationRule()); }
	 ruleMappingOperation
{ after(grammarAccess.getMappingOperationRule()); } 
	 EOF 
;

// Rule MappingOperation
ruleMappingOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingOperationAccess().getGroup()); }
		(rule__MappingOperation__Group__0)
		{ after(grammarAccess.getMappingOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationalTransformation
entryRuleOperationalTransformation
:
{ before(grammarAccess.getOperationalTransformationRule()); }
	 ruleOperationalTransformation
{ after(grammarAccess.getOperationalTransformationRule()); } 
	 EOF 
;

// Rule OperationalTransformation
ruleOperationalTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationalTransformationAccess().getGroup()); }
		(rule__OperationalTransformation__Group__0)
		{ after(grammarAccess.getOperationalTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTagGO
entryRuleTagGO
:
{ before(grammarAccess.getTagGORule()); }
	 ruleTagGO
{ after(grammarAccess.getTagGORule()); } 
	 EOF 
;

// Rule TagGO
ruleTagGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagGOAccess().getGroup()); }
		(rule__TagGO__Group__0)
		{ after(grammarAccess.getTagGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaModelGO
entryRuleMetaModelGO
:
{ before(grammarAccess.getMetaModelGORule()); }
	 ruleMetaModelGO
{ after(grammarAccess.getMetaModelGORule()); } 
	 EOF 
;

// Rule MetaModelGO
ruleMetaModelGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaModelGOAccess().getGroup()); }
		(rule__MetaModelGO__Group__0)
		{ after(grammarAccess.getMetaModelGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccessDecl
entryRuleAccessDecl
:
{ before(grammarAccess.getAccessDeclRule()); }
	 ruleAccessDecl
{ after(grammarAccess.getAccessDeclRule()); } 
	 EOF 
;

// Rule AccessDecl
ruleAccessDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccessDeclAccess().getGroup()); }
		(rule__AccessDecl__Group__0)
		{ after(grammarAccess.getAccessDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierGO
entryRuleClassifierGO
:
{ before(grammarAccess.getClassifierGORule()); }
	 ruleClassifierGO
{ after(grammarAccess.getClassifierGORule()); } 
	 EOF 
;

// Rule ClassifierGO
ruleClassifierGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierGOAccess().getGroup()); }
		(rule__ClassifierGO__Group__0)
		{ after(grammarAccess.getClassifierGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarParameter
entryRuleVarParameter
:
{ before(grammarAccess.getVarParameterRule()); }
	 ruleVarParameter
{ after(grammarAccess.getVarParameterRule()); } 
	 EOF 
;

// Rule VarParameter
ruleVarParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarParameterAccess().getGroup()); }
		(rule__VarParameter__Group__0)
		{ after(grammarAccess.getVarParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntryHeader
entryRuleEntryHeader
:
{ before(grammarAccess.getEntryHeaderRule()); }
	 ruleEntryHeader
{ after(grammarAccess.getEntryHeaderRule()); } 
	 EOF 
;

// Rule EntryHeader
ruleEntryHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryHeaderAccess().getGroup()); }
		(rule__EntryHeader__Group__0)
		{ after(grammarAccess.getEntryHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBlock
entryRuleExpressionBlock
:
{ before(grammarAccess.getExpressionBlockRule()); }
	 ruleExpressionBlock
{ after(grammarAccess.getExpressionBlockRule()); } 
	 EOF 
;

// Rule ExpressionBlock
ruleExpressionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBlockAccess().getGroup()); }
		(rule__ExpressionBlock__Group__0)
		{ after(grammarAccess.getExpressionBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingBody
entryRuleMappingBody
:
{ before(grammarAccess.getMappingBodyRule()); }
	 ruleMappingBody
{ after(grammarAccess.getMappingBodyRule()); } 
	 EOF 
;

// Rule MappingBody
ruleMappingBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingBodyAccess().getGroup()); }
		(rule__MappingBody__Group__0)
		{ after(grammarAccess.getMappingBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePopulationSection
entryRulePopulationSection
:
{ before(grammarAccess.getPopulationSectionRule()); }
	 rulePopulationSection
{ after(grammarAccess.getPopulationSectionRule()); } 
	 EOF 
;

// Rule PopulationSection
rulePopulationSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPopulationSectionAccess().getAlternatives()); }
		(rule__PopulationSection__Alternatives)
		{ after(grammarAccess.getPopulationSectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionList
entryRuleExpressionList
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionListAccess().getGroup()); }
		(rule__ExpressionList__Group__0)
		{ after(grammarAccess.getExpressionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionSemiList
entryRuleExpressionSemiList
:
{ before(grammarAccess.getExpressionSemiListRule()); }
	 ruleExpressionSemiList
{ after(grammarAccess.getExpressionSemiListRule()); } 
	 EOF 
;

// Rule ExpressionSemiList
ruleExpressionSemiList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionSemiListAccess().getGroup()); }
		(rule__ExpressionSemiList__Group__0)
		{ after(grammarAccess.getExpressionSemiListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarator
entryRuleDeclarator
:
{ before(grammarAccess.getDeclaratorRule()); }
	 ruleDeclarator
{ after(grammarAccess.getDeclaratorRule()); } 
	 EOF 
;

// Rule Declarator
ruleDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaratorAccess().getAlternatives()); }
		(rule__Declarator__Alternatives)
		{ after(grammarAccess.getDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSpec
entryRuleTypeSpec
:
{ before(grammarAccess.getTypeSpecRule()); }
	 ruleTypeSpec
{ after(grammarAccess.getTypeSpecRule()); } 
	 EOF 
;

// Rule TypeSpec
ruleTypeSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSpecAccess().getGroup()); }
		(rule__TypeSpec__Group__0)
		{ after(grammarAccess.getTypeSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitPart
entryRuleInitPart
:
{ before(grammarAccess.getInitPartRule()); }
	 ruleInitPart
{ after(grammarAccess.getInitPartRule()); } 
	 EOF 
;

// Rule InitPart
ruleInitPart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitPartAccess().getGroup()); }
		(rule__InitPart__Group__0)
		{ after(grammarAccess.getInitPartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopedIdentifier
entryRuleScopedIdentifier
:
{ before(grammarAccess.getScopedIdentifierRule()); }
	 ruleScopedIdentifier
{ after(grammarAccess.getScopedIdentifierRule()); } 
	 EOF 
;

// Rule ScopedIdentifier
ruleScopedIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopedIdentifierAccess().getGroup()); }
		(rule__ScopedIdentifier__Group__0)
		{ after(grammarAccess.getScopedIdentifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeReference
entryRuleTypeReference
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
		(rule__TypeReference__Alternatives)
		{ after(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexType
entryRuleComplexType
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexTypeAccess().getAlternatives()); }
		(rule__ComplexType__Alternatives)
		{ after(grammarAccess.getComplexTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaratorList
entryRuleDeclaratorList
:
{ before(grammarAccess.getDeclaratorListRule()); }
	 ruleDeclaratorList
{ after(grammarAccess.getDeclaratorListRule()); } 
	 EOF 
;

// Rule DeclaratorList
ruleDeclaratorList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclaratorListAccess().getGroup()); }
		(rule__DeclaratorList__Group__0)
		{ after(grammarAccess.getDeclaratorListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleSignature
entryRuleSimpleSignature
:
{ before(grammarAccess.getSimpleSignatureRule()); }
	 ruleSimpleSignature
{ after(grammarAccess.getSimpleSignatureRule()); } 
	 EOF 
;

// Rule SimpleSignature
ruleSimpleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSignatureAccess().getGroup()); }
		(rule__SimpleSignature__Group__0)
		{ after(grammarAccess.getSimpleSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamList
entryRuleParamList
:
{ before(grammarAccess.getParamListRule()); }
	 ruleParamList
{ after(grammarAccess.getParamListRule()); } 
	 EOF 
;

// Rule ParamList
ruleParamList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamListAccess().getGroup()); }
		(rule__ParamList__Group__0)
		{ after(grammarAccess.getParamListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageRefGO
entryRulePackageRefGO
:
{ before(grammarAccess.getPackageRefGORule()); }
	 rulePackageRefGO
{ after(grammarAccess.getPackageRefGORule()); } 
	 EOF 
;

// Rule PackageRefGO
rulePackageRefGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageRefGOAccess().getGroup()); }
		(rule__PackageRefGO__Group__0)
		{ after(grammarAccess.getPackageRefGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorHeader
entryRuleConstructorHeader
:
{ before(grammarAccess.getConstructorHeaderRule()); }
	 ruleConstructorHeader
{ after(grammarAccess.getConstructorHeaderRule()); } 
	 EOF 
;

// Rule ConstructorHeader
ruleConstructorHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorHeaderAccess().getGroup()); }
		(rule__ConstructorHeader__Group__0)
		{ after(grammarAccess.getConstructorHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHelperHeader
entryRuleHelperHeader
:
{ before(grammarAccess.getHelperHeaderRule()); }
	 ruleHelperHeader
{ after(grammarAccess.getHelperHeaderRule()); } 
	 EOF 
;

// Rule HelperHeader
ruleHelperHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHelperHeaderAccess().getGroup()); }
		(rule__HelperHeader__Group__0)
		{ after(grammarAccess.getHelperHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHelperInfo
entryRuleHelperInfo
:
{ before(grammarAccess.getHelperInfoRule()); }
	 ruleHelperInfo
{ after(grammarAccess.getHelperInfoRule()); } 
	 EOF 
;

// Rule HelperInfo
ruleHelperInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHelperInfoAccess().getGroup()); }
		(rule__HelperInfo__Group__0)
		{ after(grammarAccess.getHelperInfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompleteSignature
entryRuleCompleteSignature
:
{ before(grammarAccess.getCompleteSignatureRule()); }
	 ruleCompleteSignature
{ after(grammarAccess.getCompleteSignatureRule()); } 
	 EOF 
;

// Rule CompleteSignature
ruleCompleteSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompleteSignatureAccess().getGroup()); }
		(rule__CompleteSignature__Group__0)
		{ after(grammarAccess.getCompleteSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLibraryHeader
entryRuleLibraryHeader
:
{ before(grammarAccess.getLibraryHeaderRule()); }
	 ruleLibraryHeader
{ after(grammarAccess.getLibraryHeaderRule()); } 
	 EOF 
;

// Rule LibraryHeader
ruleLibraryHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLibraryHeaderAccess().getGroup()); }
		(rule__LibraryHeader__Group__0)
		{ after(grammarAccess.getLibraryHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleUsageGO
entryRuleModuleUsageGO
:
{ before(grammarAccess.getModuleUsageGORule()); }
	 ruleModuleUsageGO
{ after(grammarAccess.getModuleUsageGORule()); } 
	 EOF 
;

// Rule ModuleUsageGO
ruleModuleUsageGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleUsageGOAccess().getAlternatives()); }
		(rule__ModuleUsageGO__Alternatives)
		{ after(grammarAccess.getModuleUsageGOAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAccessUsage
entryRuleAccessUsage
:
{ before(grammarAccess.getAccessUsageRule()); }
	 ruleAccessUsage
{ after(grammarAccess.getAccessUsageRule()); } 
	 EOF 
;

// Rule AccessUsage
ruleAccessUsage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAccessUsageAccess().getGroup()); }
		(rule__AccessUsage__Group__0)
		{ after(grammarAccess.getAccessUsageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendsUsage
entryRuleExtendsUsage
:
{ before(grammarAccess.getExtendsUsageRule()); }
	 ruleExtendsUsage
{ after(grammarAccess.getExtendsUsageRule()); } 
	 EOF 
;

// Rule ExtendsUsage
ruleExtendsUsage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendsUsageAccess().getGroup()); }
		(rule__ExtendsUsage__Group__0)
		{ after(grammarAccess.getExtendsUsageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleRefGO
entryRuleModuleRefGO
:
{ before(grammarAccess.getModuleRefGORule()); }
	 ruleModuleRefGO
{ after(grammarAccess.getModuleRefGORule()); } 
	 EOF 
;

// Rule ModuleRefGO
ruleModuleRefGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleRefGOAccess().getGroup()); }
		(rule__ModuleRefGO__Group__0)
		{ after(grammarAccess.getModuleRefGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingFullHeader
entryRuleMappingFullHeader
:
{ before(grammarAccess.getMappingFullHeaderRule()); }
	 ruleMappingFullHeader
{ after(grammarAccess.getMappingFullHeaderRule()); } 
	 EOF 
;

// Rule MappingFullHeader
ruleMappingFullHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingFullHeaderAccess().getGroup()); }
		(rule__MappingFullHeader__Group__0)
		{ after(grammarAccess.getMappingFullHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingHeader
entryRuleMappingHeader
:
{ before(grammarAccess.getMappingHeaderRule()); }
	 ruleMappingHeader
{ after(grammarAccess.getMappingHeaderRule()); } 
	 EOF 
;

// Rule MappingHeader
ruleMappingHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingHeaderAccess().getGroup()); }
		(rule__MappingHeader__Group__0)
		{ after(grammarAccess.getMappingHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingExtra
entryRuleMappingExtra
:
{ before(grammarAccess.getMappingExtraRule()); }
	 ruleMappingExtra
{ after(grammarAccess.getMappingExtraRule()); } 
	 EOF 
;

// Rule MappingExtra
ruleMappingExtra 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingExtraAccess().getAlternatives()); }
		(rule__MappingExtra__Alternatives)
		{ after(grammarAccess.getMappingExtraAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingExtension
entryRuleMappingExtension
:
{ before(grammarAccess.getMappingExtensionRule()); }
	 ruleMappingExtension
{ after(grammarAccess.getMappingExtensionRule()); } 
	 EOF 
;

// Rule MappingExtension
ruleMappingExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingExtensionAccess().getGroup()); }
		(rule__MappingExtension__Group__0)
		{ after(grammarAccess.getMappingExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingRefinement
entryRuleMappingRefinement
:
{ before(grammarAccess.getMappingRefinementRule()); }
	 ruleMappingRefinement
{ after(grammarAccess.getMappingRefinementRule()); } 
	 EOF 
;

// Rule MappingRefinement
ruleMappingRefinement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingRefinementAccess().getGroup()); }
		(rule__MappingRefinement__Group__0)
		{ after(grammarAccess.getMappingRefinementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScopedIdentifierList
entryRuleScopedIdentifierList
:
{ before(grammarAccess.getScopedIdentifierListRule()); }
	 ruleScopedIdentifierList
{ after(grammarAccess.getScopedIdentifierListRule()); } 
	 EOF 
;

// Rule ScopedIdentifierList
ruleScopedIdentifierList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopedIdentifierListAccess().getGroup()); }
		(rule__ScopedIdentifierList__Group__0)
		{ after(grammarAccess.getScopedIdentifierListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationHeader
entryRuleTransformationHeader
:
{ before(grammarAccess.getTransformationHeaderRule()); }
	 ruleTransformationHeader
{ after(grammarAccess.getTransformationHeaderRule()); } 
	 EOF 
;

// Rule TransformationHeader
ruleTransformationHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationHeaderAccess().getGroup()); }
		(rule__TransformationHeader__Group__0)
		{ after(grammarAccess.getTransformationHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationUsageRefine
entryRuleTransformationUsageRefine
:
{ before(grammarAccess.getTransformationUsageRefineRule()); }
	 ruleTransformationUsageRefine
{ after(grammarAccess.getTransformationUsageRefineRule()); } 
	 EOF 
;

// Rule TransformationUsageRefine
ruleTransformationUsageRefine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationUsageRefineAccess().getAlternatives()); }
		(rule__TransformationUsageRefine__Alternatives)
		{ after(grammarAccess.getTransformationUsageRefineAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaModelHeader
entryRuleMetaModelHeader
:
{ before(grammarAccess.getMetaModelHeaderRule()); }
	 ruleMetaModelHeader
{ after(grammarAccess.getMetaModelHeaderRule()); } 
	 EOF 
;

// Rule MetaModelHeader
ruleMetaModelHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaModelHeaderAccess().getGroup()); }
		(rule__MetaModelHeader__Group__0)
		{ after(grammarAccess.getMetaModelHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaModelElement
entryRuleMetaModelElement
:
{ before(grammarAccess.getMetaModelElementRule()); }
	 ruleMetaModelElement
{ after(grammarAccess.getMetaModelElementRule()); } 
	 EOF 
;

// Rule MetaModelElement
ruleMetaModelElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaModelElementAccess().getAlternatives()); }
		(rule__MetaModelElement__Alternatives)
		{ after(grammarAccess.getMetaModelElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationGO
entryRuleEnumerationGO
:
{ before(grammarAccess.getEnumerationGORule()); }
	 ruleEnumerationGO
{ after(grammarAccess.getEnumerationGORule()); } 
	 EOF 
;

// Rule EnumerationGO
ruleEnumerationGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationGOAccess().getGroup()); }
		(rule__EnumerationGO__Group__0)
		{ after(grammarAccess.getEnumerationGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationHeader
entryRuleEnumerationHeader
:
{ before(grammarAccess.getEnumerationHeaderRule()); }
	 ruleEnumerationHeader
{ after(grammarAccess.getEnumerationHeaderRule()); } 
	 EOF 
;

// Rule EnumerationHeader
ruleEnumerationHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationHeaderAccess().getGroup()); }
		(rule__EnumerationHeader__Group__0)
		{ after(grammarAccess.getEnumerationHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierHeader
entryRuleClassifierHeader
:
{ before(grammarAccess.getClassifierHeaderRule()); }
	 ruleClassifierHeader
{ after(grammarAccess.getClassifierHeaderRule()); } 
	 EOF 
;

// Rule ClassifierHeader
ruleClassifierHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierHeaderAccess().getGroup()); }
		(rule__ClassifierHeader__Group__0)
		{ after(grammarAccess.getClassifierHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierFeatureList
entryRuleClassifierFeatureList
:
{ before(grammarAccess.getClassifierFeatureListRule()); }
	 ruleClassifierFeatureList
{ after(grammarAccess.getClassifierFeatureListRule()); } 
	 EOF 
;

// Rule ClassifierFeatureList
ruleClassifierFeatureList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierFeatureListAccess().getGroup()); }
		(rule__ClassifierFeatureList__Group__0)
		{ after(grammarAccess.getClassifierFeatureListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierInfo
entryRuleClassifierInfo
:
{ before(grammarAccess.getClassifierInfoRule()); }
	 ruleClassifierInfo
{ after(grammarAccess.getClassifierInfoRule()); } 
	 EOF 
;

// Rule ClassifierInfo
ruleClassifierInfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierInfoAccess().getAlternatives()); }
		(rule__ClassifierInfo__Alternatives)
		{ after(grammarAccess.getClassifierInfoAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierExtension
entryRuleClassifierExtension
:
{ before(grammarAccess.getClassifierExtensionRule()); }
	 ruleClassifierExtension
{ after(grammarAccess.getClassifierExtensionRule()); } 
	 EOF 
;

// Rule ClassifierExtension
ruleClassifierExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierExtensionAccess().getGroup()); }
		(rule__ClassifierExtension__Group__0)
		{ after(grammarAccess.getClassifierExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifierFeature
entryRuleClassifierFeature
:
{ before(grammarAccess.getClassifierFeatureRule()); }
	 ruleClassifierFeature
{ after(grammarAccess.getClassifierFeatureRule()); } 
	 EOF 
;

// Rule ClassifierFeature
ruleClassifierFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getAlternatives()); }
		(rule__ClassifierFeature__Alternatives)
		{ after(grammarAccess.getClassifierFeatureAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureQualifier
entryRuleFeatureQualifier
:
{ before(grammarAccess.getFeatureQualifierRule()); }
	 ruleFeatureQualifier
{ after(grammarAccess.getFeatureQualifierRule()); } 
	 EOF 
;

// Rule FeatureQualifier
ruleFeatureQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureQualifierAccess().getGroup()); }
		(rule__FeatureQualifier__Group__0)
		{ after(grammarAccess.getFeatureQualifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicity
entryRuleMultiplicity
:
{ before(grammarAccess.getMultiplicityRule()); }
	 ruleMultiplicity
{ after(grammarAccess.getMultiplicityRule()); } 
	 EOF 
;

// Rule Multiplicity
ruleMultiplicity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicityAccess().getGroup()); }
		(rule__Multiplicity__Group__0)
		{ after(grammarAccess.getMultiplicityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOppositeProperty
entryRuleOppositeProperty
:
{ before(grammarAccess.getOppositePropertyRule()); }
	 ruleOppositeProperty
{ after(grammarAccess.getOppositePropertyRule()); } 
	 EOF 
;

// Rule OppositeProperty
ruleOppositeProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOppositePropertyAccess().getGroup()); }
		(rule__OppositeProperty__Group__0)
		{ after(grammarAccess.getOppositePropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStereotypeQualifier
entryRuleStereotypeQualifier
:
{ before(grammarAccess.getStereotypeQualifierRule()); }
	 ruleStereotypeQualifier
{ after(grammarAccess.getStereotypeQualifierRule()); } 
	 EOF 
;

// Rule StereotypeQualifier
ruleStereotypeQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStereotypeQualifierAccess().getGroup()); }
		(rule__StereotypeQualifier__Group__0)
		{ after(grammarAccess.getStereotypeQualifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitRefGO
entryRuleUnitRefGO
:
{ before(grammarAccess.getUnitRefGORule()); }
	 ruleUnitRefGO
{ after(grammarAccess.getUnitRefGORule()); } 
	 EOF 
;

// Rule UnitRefGO
ruleUnitRefGO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitRefGOAccess().getGroup()); }
		(rule__UnitRefGO__Group__0)
		{ after(grammarAccess.getUnitRefGOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DirectionKind
ruleDirectionKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionKindAccess().getAlternatives()); }
		(rule__DirectionKind__Alternatives)
		{ after(grammarAccess.getDirectionKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ComplexTypeKey
ruleComplexTypeKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getAlternatives()); }
		(rule__ComplexTypeKey__Alternatives)
		{ after(grammarAccess.getComplexTypeKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CollectionKey
ruleCollectionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionKeyAccess().getAlternatives()); }
		(rule__CollectionKey__Alternatives)
		{ after(grammarAccess.getCollectionKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule GeneralQualifier
ruleGeneralQualifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralQualifierAccess().getAlternatives()); }
		(rule__GeneralQualifier__Alternatives)
		{ after(grammarAccess.getGeneralQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PropertyKey
rulePropertyKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyKeyAccess().getAlternatives()); }
		(rule__PropertyKey__Alternatives)
		{ after(grammarAccess.getPropertyKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule HelperKind
ruleHelperKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperKindAccess().getAlternatives()); }
		(rule__HelperKind__Alternatives)
		{ after(grammarAccess.getHelperKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ModuleKind
ruleModuleKind
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleKindAccess().getAlternatives()); }
		(rule__ModuleKind__Alternatives)
		{ after(grammarAccess.getModuleKindAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MappingExtensionKey
ruleMappingExtensionKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtensionKeyAccess().getAlternatives()); }
		(rule__MappingExtensionKey__Alternatives)
		{ after(grammarAccess.getMappingExtensionKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule FeatureKey
ruleFeatureKey
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureKeyAccess().getAlternatives()); }
		(rule__FeatureKey__Alternatives)
		{ after(grammarAccess.getFeatureKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getConstructorParserRuleCall_0()); }
		ruleConstructor
		{ after(grammarAccess.getModuleAccess().getConstructorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getContextualPropertyParserRuleCall_1()); }
		ruleContextualProperty
		{ after(grammarAccess.getModuleAccess().getContextualPropertyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getEntryOperationParserRuleCall_2()); }
		ruleEntryOperation
		{ after(grammarAccess.getModuleAccess().getEntryOperationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getHelperParserRuleCall_3()); }
		ruleHelper
		{ after(grammarAccess.getModuleAccess().getHelperParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getLibraryParserRuleCall_4()); }
		ruleLibrary
		{ after(grammarAccess.getModuleAccess().getLibraryParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getMappingOperationParserRuleCall_5()); }
		ruleMappingOperation
		{ after(grammarAccess.getModuleAccess().getMappingOperationParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getModelTypeParserRuleCall_6()); }
		ruleModelType
		{ after(grammarAccess.getModuleAccess().getModelTypeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getOperationalTransformationParserRuleCall_7()); }
		ruleOperationalTransformation
		{ after(grammarAccess.getModuleAccess().getOperationalTransformationParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getTagGOParserRuleCall_8()); }
		ruleTagGO
		{ after(grammarAccess.getModuleAccess().getTagGOParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getMetaModelGOParserRuleCall_9()); }
		ruleMetaModelGO
		{ after(grammarAccess.getModuleAccess().getMetaModelGOParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getAccessDeclParserRuleCall_10()); }
		ruleAccessDecl
		{ after(grammarAccess.getModuleAccess().getAccessDeclParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getTypeDefParserRuleCall_11()); }
		ruleTypeDef
		{ after(grammarAccess.getModuleAccess().getTypeDefParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getModuleAccess().getClassifierGOParserRuleCall_12()); }
		ruleClassifierGO
		{ after(grammarAccess.getModuleAccess().getClassifierGOParserRuleCall_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImperativeOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImperativeOperationAccess().getConstructorParserRuleCall_0()); }
		ruleConstructor
		{ after(grammarAccess.getImperativeOperationAccess().getConstructorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getContextualPropertyParserRuleCall_1()); }
		ruleContextualProperty
		{ after(grammarAccess.getImperativeOperationAccess().getContextualPropertyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getEntryOperationParserRuleCall_2()); }
		ruleEntryOperation
		{ after(grammarAccess.getImperativeOperationAccess().getEntryOperationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getHelperParserRuleCall_3()); }
		ruleHelper
		{ after(grammarAccess.getImperativeOperationAccess().getHelperParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getMappingOperationParserRuleCall_4()); }
		ruleMappingOperation
		{ after(grammarAccess.getImperativeOperationAccess().getMappingOperationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getTagGOParserRuleCall_5()); }
		ruleTagGO
		{ after(grammarAccess.getImperativeOperationAccess().getTagGOParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getAccessDeclParserRuleCall_6()); }
		ruleAccessDecl
		{ after(grammarAccess.getImperativeOperationAccess().getAccessDeclParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getTypeDefParserRuleCall_7()); }
		ruleTypeDef
		{ after(grammarAccess.getImperativeOperationAccess().getTypeDefParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getImperativeOperationAccess().getClassifierGOParserRuleCall_8()); }
		ruleClassifierGO
		{ after(grammarAccess.getImperativeOperationAccess().getClassifierGOParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleImportAccess().getGroup_0()); }
		(rule__ModuleImport__Group_0__0)
		{ after(grammarAccess.getModuleImportAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleImportAccess().getGroup_1()); }
		(rule__ModuleImport__Group_1__0)
		{ after(grammarAccess.getModuleImportAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Alternatives_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleImportAccess().getGroup_0_3_0()); }
		(rule__ModuleImport__Group_0_3_0__0)
		{ after(grammarAccess.getModuleImportAccess().getGroup_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleImportAccess().getAsteriskKeyword_0_3_1()); }
		'*'
		{ after(grammarAccess.getModuleImportAccess().getAsteriskKeyword_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryOperationAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getEntryOperationAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntryOperationAccess().getGroup_1_1()); }
		(rule__EntryOperation__Group_1_1__0)
		{ after(grammarAccess.getEntryOperationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getConstructorAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstructorAccess().getGroup_1_1()); }
		(rule__Constructor__Group_1_1__0)
		{ after(grammarAccess.getConstructorAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getHelperAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHelperAccess().getGroup_1_1()); }
		(rule__Helper__Group_1_1__0)
		{ after(grammarAccess.getHelperAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getHelperAccess().getGroup_1_2()); }
		(rule__Helper__Group_1_2__0)
		{ after(grammarAccess.getHelperAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getLibraryAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getLibraryAccess().getGroup_1_1()); }
		(rule__Library__Group_1_1__0)
		{ after(grammarAccess.getLibraryAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingOperationAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getMappingOperationAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMappingOperationAccess().getGroup_1_1()); }
		(rule__MappingOperation__Group_1_1__0)
		{ after(grammarAccess.getMappingOperationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationalTransformationAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getOperationalTransformationAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationalTransformationAccess().getGroup_1_1()); }
		(rule__OperationalTransformation__Group_1_1__0)
		{ after(grammarAccess.getOperationalTransformationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelGOAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getMetaModelGOAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaModelGOAccess().getGroup_1_1()); }
		(rule__MetaModelGO__Group_1_1__0)
		{ after(grammarAccess.getMetaModelGOAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierGOAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getClassifierGOAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierGOAccess().getGroup_1_1()); }
		(rule__ClassifierGO__Group_1_1__0)
		{ after(grammarAccess.getClassifierGOAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPopulationSectionAccess().getGroup_0()); }
		(rule__PopulationSection__Group_0__0)
		{ after(grammarAccess.getPopulationSectionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPopulationSectionAccess().getGroup_1()); }
		(rule__PopulationSection__Group_1__0)
		{ after(grammarAccess.getPopulationSectionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getGroup_0()); }
		(rule__Declarator__Group_0__0)
		{ after(grammarAccess.getDeclaratorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclaratorAccess().getGroup_1()); }
		(rule__Declarator__Group_1__0)
		{ after(grammarAccess.getDeclaratorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPart__Init_opAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitPartAccess().getInit_opEqualsSignKeyword_0_0_0()); }
		'='
		{ after(grammarAccess.getInitPartAccess().getInit_opEqualsSignKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitPartAccess().getInit_opColonEqualsSignKeyword_0_0_1()); }
		':='
		{ after(grammarAccess.getInitPartAccess().getInit_opColonEqualsSignKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInitPartAccess().getInit_opColonColonEqualsSignKeyword_0_0_2()); }
		'::='
		{ after(grammarAccess.getInitPartAccess().getInit_opColonColonEqualsSignKeyword_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getGroup_0()); }
		(rule__TypeReference__Group_0__0)
		{ after(grammarAccess.getTypeReferenceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeReferenceAccess().getComplex_typeAssignment_1()); }
		(rule__TypeReference__Complex_typeAssignment_1)
		{ after(grammarAccess.getTypeReferenceAccess().getComplex_typeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getGroup_0()); }
		(rule__ComplexType__Group_0__0)
		{ after(grammarAccess.getComplexTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeAccess().getGroup_1()); }
		(rule__ComplexType__Group_1__0)
		{ after(grammarAccess.getComplexTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeAccess().getGroup_2()); }
		(rule__ComplexType__Group_2__0)
		{ after(grammarAccess.getComplexTypeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeAccess().getGroup_3()); }
		(rule__ComplexType__Group_3__0)
		{ after(grammarAccess.getComplexTypeAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageRefGOAccess().getGroup_1_0()); }
		(rule__PackageRefGO__Group_1_0__0)
		{ after(grammarAccess.getPackageRefGOAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPackageRefGOAccess().getUriAssignment_1_1()); }
		(rule__PackageRefGO__UriAssignment_1_1)
		{ after(grammarAccess.getPackageRefGOAccess().getUriAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleUsageGO__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleUsageGOAccess().getGroup_0()); }
		(rule__ModuleUsageGO__Group_0__0)
		{ after(grammarAccess.getModuleUsageGOAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleUsageGOAccess().getExtends_usageAssignment_1()); }
		(rule__ModuleUsageGO__Extends_usageAssignment_1)
		{ after(grammarAccess.getModuleUsageGOAccess().getExtends_usageAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtra__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtraAccess().getGroup_0()); }
		(rule__MappingExtra__Group_0__0)
		{ after(grammarAccess.getMappingExtraAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMappingExtraAccess().getMapping_refinementAssignment_1()); }
		(rule__MappingExtra__Mapping_refinementAssignment_1)
		{ after(grammarAccess.getMappingExtraAccess().getMapping_refinementAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationUsageRefineAccess().getGroup_0()); }
		(rule__TransformationUsageRefine__Group_0__0)
		{ after(grammarAccess.getTransformationUsageRefineAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationUsageRefineAccess().getGroup_1()); }
		(rule__TransformationUsageRefine__Group_1__0)
		{ after(grammarAccess.getTransformationUsageRefineAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelHeader__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelHeaderAccess().getMetamodelKeyword_0_0()); }
		'metamodel'
		{ after(grammarAccess.getMetaModelHeaderAccess().getMetamodelKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaModelHeaderAccess().getPackageKeyword_0_1()); }
		'package'
		{ after(grammarAccess.getMetaModelHeaderAccess().getPackageKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelElementAccess().getGroup_0()); }
		(rule__MetaModelElement__Group_0__0)
		{ after(grammarAccess.getMetaModelElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaModelElementAccess().getEnumerationAssignment_1()); }
		(rule__MetaModelElement__EnumerationAssignment_1)
		{ after(grammarAccess.getMetaModelElementAccess().getEnumerationAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getMetaModelElementAccess().getTagAssignment_2()); }
		(rule__MetaModelElement__TagAssignment_2)
		{ after(grammarAccess.getMetaModelElementAccess().getTagAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationGOAccess().getSemicolonKeyword_2_0()); }
		';'
		{ after(grammarAccess.getEnumerationGOAccess().getSemicolonKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumerationGOAccess().getGroup_2_1()); }
		(rule__EnumerationGO__Group_2_1__0)
		{ after(grammarAccess.getEnumerationGOAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierInfoAccess().getGroup_0()); }
		(rule__ClassifierInfo__Group_0__0)
		{ after(grammarAccess.getClassifierInfoAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierInfoAccess().getPrimitiveKeyword_1()); }
		'primitive'
		{ after(grammarAccess.getClassifierInfoAccess().getPrimitiveKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierInfoAccess().getExceptionKeyword_2()); }
		'exception'
		{ after(grammarAccess.getClassifierInfoAccess().getExceptionKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierInfoAccess().getGroup_3()); }
		(rule__ClassifierInfo__Group_3__0)
		{ after(grammarAccess.getClassifierInfoAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getGroup_0()); }
		(rule__ClassifierFeature__Group_0__0)
		{ after(grammarAccess.getClassifierFeatureAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getTagAssignment_1()); }
		(rule__ClassifierFeature__TagAssignment_1)
		{ after(grammarAccess.getClassifierFeatureAccess().getTagAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Alternatives_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getGroup_0_2_0()); }
		(rule__ClassifierFeature__Group_0_2_0__0)
		{ after(grammarAccess.getClassifierFeatureAccess().getGroup_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getComplete_signatureAssignment_0_2_1()); }
		(rule__ClassifierFeature__Complete_signatureAssignment_0_2_1)
		{ after(grammarAccess.getClassifierFeatureAccess().getComplete_signatureAssignment_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectionKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionKindAccess().getInEnumLiteralDeclaration_0()); }
		('in')
		{ after(grammarAccess.getDirectionKindAccess().getInEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionKindAccess().getInoutEnumLiteralDeclaration_1()); }
		('inout')
		{ after(grammarAccess.getDirectionKindAccess().getInoutEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionKindAccess().getOutEnumLiteralDeclaration_2()); }
		('out')
		{ after(grammarAccess.getDirectionKindAccess().getOutEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getCollectionEnumLiteralDeclaration_0()); }
		('Collection')
		{ after(grammarAccess.getComplexTypeKeyAccess().getCollectionEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getSetEnumLiteralDeclaration_1()); }
		('Set')
		{ after(grammarAccess.getComplexTypeKeyAccess().getSetEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getOrderedSetEnumLiteralDeclaration_2()); }
		('OrderedSet')
		{ after(grammarAccess.getComplexTypeKeyAccess().getOrderedSetEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getSequenceEnumLiteralDeclaration_3()); }
		('Sequence')
		{ after(grammarAccess.getComplexTypeKeyAccess().getSequenceEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getBagEnumLiteralDeclaration_4()); }
		('Bag')
		{ after(grammarAccess.getComplexTypeKeyAccess().getBagEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getListEnumLiteralDeclaration_5()); }
		('List')
		{ after(grammarAccess.getComplexTypeKeyAccess().getListEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getDictEnumLiteralDeclaration_6()); }
		('Dict')
		{ after(grammarAccess.getComplexTypeKeyAccess().getDictEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getComplexTypeKeyAccess().getTupleEnumLiteralDeclaration_7()); }
		('Tuple')
		{ after(grammarAccess.getComplexTypeKeyAccess().getTupleEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionKeyAccess().getCollectionEnumLiteralDeclaration_0()); }
		('Collection')
		{ after(grammarAccess.getCollectionKeyAccess().getCollectionEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionKeyAccess().getSetEnumLiteralDeclaration_1()); }
		('Set')
		{ after(grammarAccess.getCollectionKeyAccess().getSetEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionKeyAccess().getOrderedSetEnumLiteralDeclaration_2()); }
		('OrderedSet')
		{ after(grammarAccess.getCollectionKeyAccess().getOrderedSetEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionKeyAccess().getSequenceEnumLiteralDeclaration_3()); }
		('Sequence')
		{ after(grammarAccess.getCollectionKeyAccess().getSequenceEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionKeyAccess().getBagEnumLiteralDeclaration_4()); }
		('Bag')
		{ after(grammarAccess.getCollectionKeyAccess().getBagEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionKeyAccess().getListEnumLiteralDeclaration_5()); }
		('List')
		{ after(grammarAccess.getCollectionKeyAccess().getListEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneralQualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGeneralQualifierAccess().getBlackboxEnumLiteralDeclaration_0()); }
		('blackbox')
		{ after(grammarAccess.getGeneralQualifierAccess().getBlackboxEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralQualifierAccess().getAbstractEnumLiteralDeclaration_1()); }
		('abstract')
		{ after(grammarAccess.getGeneralQualifierAccess().getAbstractEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getGeneralQualifierAccess().getStaticEnumLiteralDeclaration_2()); }
		('static')
		{ after(grammarAccess.getGeneralQualifierAccess().getStaticEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyKeyAccess().getDerivedEnumLiteralDeclaration_0()); }
		('derived')
		{ after(grammarAccess.getPropertyKeyAccess().getDerivedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyKeyAccess().getLiteralEnumLiteralDeclaration_1()); }
		('literal')
		{ after(grammarAccess.getPropertyKeyAccess().getLiteralEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyKeyAccess().getConfigurationEnumLiteralDeclaration_2()); }
		('configuration')
		{ after(grammarAccess.getPropertyKeyAccess().getConfigurationEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyKeyAccess().getPropertyEnumLiteralDeclaration_3()); }
		('property')
		{ after(grammarAccess.getPropertyKeyAccess().getPropertyEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperKindAccess().getHelperEnumLiteralDeclaration_0()); }
		('helper')
		{ after(grammarAccess.getHelperKindAccess().getHelperEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getHelperKindAccess().getQueryEnumLiteralDeclaration_1()); }
		('query')
		{ after(grammarAccess.getHelperKindAccess().getQueryEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleKind__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleKindAccess().getTransformationEnumLiteralDeclaration_0()); }
		('transformation')
		{ after(grammarAccess.getModuleKindAccess().getTransformationEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleKindAccess().getLibraryEnumLiteralDeclaration_1()); }
		('library')
		{ after(grammarAccess.getModuleKindAccess().getLibraryEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtensionKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtensionKeyAccess().getInheritsEnumLiteralDeclaration_0()); }
		('inherits')
		{ after(grammarAccess.getMappingExtensionKeyAccess().getInheritsEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMappingExtensionKeyAccess().getMergesEnumLiteralDeclaration_1()); }
		('merges')
		{ after(grammarAccess.getMappingExtensionKeyAccess().getMergesEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMappingExtensionKeyAccess().getDisjunctsEnumLiteralDeclaration_2()); }
		('disjuncts')
		{ after(grammarAccess.getMappingExtensionKeyAccess().getDisjunctsEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureKey__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureKeyAccess().getComposesEnumLiteralDeclaration_0()); }
		('composes')
		{ after(grammarAccess.getFeatureKeyAccess().getComposesEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureKeyAccess().getReferencesEnumLiteralDeclaration_1()); }
		('references')
		{ after(grammarAccess.getFeatureKeyAccess().getReferencesEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureKeyAccess().getReadonlyEnumLiteralDeclaration_2()); }
		('readonly')
		{ after(grammarAccess.getFeatureKeyAccess().getReadonlyEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureKeyAccess().getDerivedEnumLiteralDeclaration_3()); }
		('derived')
		{ after(grammarAccess.getFeatureKeyAccess().getDerivedEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getFeatureKeyAccess().getStaticEnumLiteralDeclaration_4()); }
		('static')
		{ after(grammarAccess.getFeatureKeyAccess().getStaticEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelGO__Group__0__Impl
	rule__TopLevelGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelGOAccess().getTopLevelGOAction_0()); }
	()
	{ after(grammarAccess.getTopLevelGOAccess().getTopLevelGOAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelGO__Group__1__Impl
	rule__TopLevelGO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelGOAccess().getModuleimportAssignment_1()); }
	(rule__TopLevelGO__ModuleimportAssignment_1)*
	{ after(grammarAccess.getTopLevelGOAccess().getModuleimportAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelGO__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelGOAccess().getUnit_elementAssignment_2()); }
	(rule__TopLevelGO__Unit_elementAssignment_2)*
	{ after(grammarAccess.getTopLevelGOAccess().getUnit_elementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleImport__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0__0__Impl
	rule__ModuleImport__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getFromKeyword_0_0()); }
	'from'
	{ after(grammarAccess.getModuleImportAccess().getFromKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0__1__Impl
	rule__ModuleImport__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getUnitAssignment_0_1()); }
	(rule__ModuleImport__UnitAssignment_0_1)
	{ after(grammarAccess.getModuleImportAccess().getUnitAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0__2__Impl
	rule__ModuleImport__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getImportKeyword_0_2()); }
	'import'
	{ after(grammarAccess.getModuleImportAccess().getImportKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0__3__Impl
	rule__ModuleImport__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getAlternatives_0_3()); }
	(rule__ModuleImport__Alternatives_0_3)
	{ after(grammarAccess.getModuleImportAccess().getAlternatives_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getSemicolonKeyword_0_4()); }
	';'
	{ after(grammarAccess.getModuleImportAccess().getSemicolonKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleImport__Group_0_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0_3_0__0__Impl
	rule__ModuleImport__Group_0_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getIdentifierAssignment_0_3_0_0()); }
	(rule__ModuleImport__IdentifierAssignment_0_3_0_0)
	{ after(grammarAccess.getModuleImportAccess().getIdentifierAssignment_0_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getGroup_0_3_0_1()); }
	(rule__ModuleImport__Group_0_3_0_1__0)*
	{ after(grammarAccess.getModuleImportAccess().getGroup_0_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleImport__Group_0_3_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0_3_0_1__0__Impl
	rule__ModuleImport__Group_0_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0_3_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getCommaKeyword_0_3_0_1_0()); }
	','
	{ after(grammarAccess.getModuleImportAccess().getCommaKeyword_0_3_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0_3_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_0_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_0_3_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getIdentifierAssignment_0_3_0_1_1()); }
	(rule__ModuleImport__IdentifierAssignment_0_3_0_1_1)
	{ after(grammarAccess.getModuleImportAccess().getIdentifierAssignment_0_3_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleImport__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_1__0__Impl
	rule__ModuleImport__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getImportKeyword_1_0()); }
	'import'
	{ after(grammarAccess.getModuleImportAccess().getImportKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_1__1__Impl
	rule__ModuleImport__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getUnitAssignment_1_1()); }
	(rule__ModuleImport__UnitAssignment_1_1)
	{ after(grammarAccess.getModuleImportAccess().getUnitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleImport__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleImportAccess().getSemicolonKeyword_1_2()); }
	';'
	{ after(grammarAccess.getModuleImportAccess().getSemicolonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryOperation__Group__0__Impl
	rule__EntryOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryOperationAccess().getEntry_headerAssignment_0()); }
	(rule__EntryOperation__Entry_headerAssignment_0)
	{ after(grammarAccess.getEntryOperationAccess().getEntry_headerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryOperationAccess().getAlternatives_1()); }
	(rule__EntryOperation__Alternatives_1)
	{ after(grammarAccess.getEntryOperationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryOperation__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryOperation__Group_1_1__0__Impl
	rule__EntryOperation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryOperationAccess().getExpression_blockAssignment_1_1_0()); }
	(rule__EntryOperation__Expression_blockAssignment_1_1_0)
	{ after(grammarAccess.getEntryOperationAccess().getExpression_blockAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryOperation__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryOperationAccess().getSemicolonKeyword_1_1_1()); }
	(';')?
	{ after(grammarAccess.getEntryOperationAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionGO__Group__0__Impl
	rule__ExpressionGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionGOAccess().getExpressionGOAction_0()); }
	()
	{ after(grammarAccess.getExpressionGOAccess().getExpressionGOAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionGO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionGOAccess().getDummyContentAssignment_1()); }
	(rule__ExpressionGO__DummyContentAssignment_1)*
	{ after(grammarAccess.getExpressionGOAccess().getDummyContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__0__Impl
	rule__ModelType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getModeltypeKeyword_0()); }
	'modeltype'
	{ after(grammarAccess.getModelTypeAccess().getModeltypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__1__Impl
	rule__ModelType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getNameAssignment_1()); }
	(rule__ModelType__NameAssignment_1)
	{ after(grammarAccess.getModelTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__2__Impl
	rule__ModelType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getCompliance_kindAssignment_2()); }
	(rule__ModelType__Compliance_kindAssignment_2)?
	{ after(grammarAccess.getModelTypeAccess().getCompliance_kindAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__3__Impl
	rule__ModelType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getUsesKeyword_3()); }
	'uses'
	{ after(grammarAccess.getModelTypeAccess().getUsesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__4__Impl
	rule__ModelType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getPackageref_listAssignment_4()); }
	(rule__ModelType__Packageref_listAssignment_4)
	{ after(grammarAccess.getModelTypeAccess().getPackageref_listAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__5__Impl
	rule__ModelType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getGroup_5()); }
	(rule__ModelType__Group_5__0)*
	{ after(grammarAccess.getModelTypeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__6__Impl
	rule__ModelType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getGroup_6()); }
	(rule__ModelType__Group_6__0)?
	{ after(grammarAccess.getModelTypeAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getSemicolonKeyword_7()); }
	';'
	{ after(grammarAccess.getModelTypeAccess().getSemicolonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group_5__0__Impl
	rule__ModelType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getModelTypeAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getPackageref_listAssignment_5_1()); }
	(rule__ModelType__Packageref_listAssignment_5_1)
	{ after(grammarAccess.getModelTypeAccess().getPackageref_listAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelType__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group_6__0__Impl
	rule__ModelType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getWhereKeyword_6_0()); }
	'where'
	{ after(grammarAccess.getModelTypeAccess().getWhereKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelTypeAccess().getModeltype_whereAssignment_6_1()); }
	(rule__ModelType__Modeltype_whereAssignment_6_1)
	{ after(grammarAccess.getModelTypeAccess().getModeltype_whereAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getConstructor_headerAssignment_0()); }
	(rule__Constructor__Constructor_headerAssignment_0)
	{ after(grammarAccess.getConstructorAccess().getConstructor_headerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getAlternatives_1()); }
	(rule__Constructor__Alternatives_1)
	{ after(grammarAccess.getConstructorAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_1_1__0__Impl
	rule__Constructor__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getExpression_blockAssignment_1_1_0()); }
	(rule__Constructor__Expression_blockAssignment_1_1_0)
	{ after(grammarAccess.getConstructorAccess().getExpression_blockAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getSemicolonKeyword_1_1_1()); }
	(';')?
	{ after(grammarAccess.getConstructorAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContextualProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextualProperty__Group__0__Impl
	rule__ContextualProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextualPropertyAccess().getIntermediateKeyword_0()); }
	('intermediate')?
	{ after(grammarAccess.getContextualPropertyAccess().getIntermediateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextualProperty__Group__1__Impl
	rule__ContextualProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getContextualPropertyAccess().getProperty_keyAssignment_1()); }
		(rule__ContextualProperty__Property_keyAssignment_1)
		{ after(grammarAccess.getContextualPropertyAccess().getProperty_keyAssignment_1()); }
	)
	(
		{ before(grammarAccess.getContextualPropertyAccess().getProperty_keyAssignment_1()); }
		(rule__ContextualProperty__Property_keyAssignment_1)*
		{ after(grammarAccess.getContextualPropertyAccess().getProperty_keyAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextualProperty__Group__2__Impl
	rule__ContextualProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextualPropertyAccess().getDeclaratorAssignment_2()); }
	(rule__ContextualProperty__DeclaratorAssignment_2)
	{ after(grammarAccess.getContextualPropertyAccess().getDeclaratorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContextualProperty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextualPropertyAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getContextualPropertyAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Helper__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__0__Impl
	rule__Helper__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getHelper_headerAssignment_0()); }
	(rule__Helper__Helper_headerAssignment_0)
	{ after(grammarAccess.getHelperAccess().getHelper_headerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getAlternatives_1()); }
	(rule__Helper__Alternatives_1)
	{ after(grammarAccess.getHelperAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Helper__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group_1_1__0__Impl
	rule__Helper__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getHelperAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group_1_1__1__Impl
	rule__Helper__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getExpressionAssignment_1_1_1()); }
	(rule__Helper__ExpressionAssignment_1_1_1)
	{ after(grammarAccess.getHelperAccess().getExpressionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getSemicolonKeyword_1_1_2()); }
	';'
	{ after(grammarAccess.getHelperAccess().getSemicolonKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Helper__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group_1_2__0__Impl
	rule__Helper__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getExpression_blockAssignment_1_2_0()); }
	(rule__Helper__Expression_blockAssignment_1_2_0)
	{ after(grammarAccess.getHelperAccess().getExpression_blockAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helper__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperAccess().getSemicolonKeyword_1_2_1()); }
	(';')?
	{ after(grammarAccess.getHelperAccess().getSemicolonKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__0__Impl
	rule__Library__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getLibrary_hAssignment_0()); }
	(rule__Library__Library_hAssignment_0)
	{ after(grammarAccess.getLibraryAccess().getLibrary_hAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getAlternatives_1()); }
	(rule__Library__Alternatives_1)
	{ after(grammarAccess.getLibraryAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Library__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_1_1__0__Impl
	rule__Library__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getLibraryAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_1_1__1__Impl
	rule__Library__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getModule_elementAssignment_1_1_1()); }
	(rule__Library__Module_elementAssignment_1_1_1)*
	{ after(grammarAccess.getLibraryAccess().getModule_elementAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_1_1__2__Impl
	rule__Library__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getLibraryAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Library__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryAccess().getSemicolonKeyword_1_1_3()); }
	(';')?
	{ after(grammarAccess.getLibraryAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingOperation__Group__0__Impl
	rule__MappingOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingOperationAccess().getMapping_full_headerAssignment_0()); }
	(rule__MappingOperation__Mapping_full_headerAssignment_0)
	{ after(grammarAccess.getMappingOperationAccess().getMapping_full_headerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingOperationAccess().getAlternatives_1()); }
	(rule__MappingOperation__Alternatives_1)
	{ after(grammarAccess.getMappingOperationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingOperation__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingOperation__Group_1_1__0__Impl
	rule__MappingOperation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingOperationAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getMappingOperationAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingOperation__Group_1_1__1__Impl
	rule__MappingOperation__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingOperationAccess().getMapping_bodyAssignment_1_1_1()); }
	(rule__MappingOperation__Mapping_bodyAssignment_1_1_1)
	{ after(grammarAccess.getMappingOperationAccess().getMapping_bodyAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingOperation__Group_1_1__2__Impl
	rule__MappingOperation__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingOperationAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getMappingOperationAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingOperation__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingOperationAccess().getSemicolonKeyword_1_1_3()); }
	(';')?
	{ after(grammarAccess.getMappingOperationAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationalTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalTransformation__Group__0__Impl
	rule__OperationalTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalTransformationAccess().getTransformation_hAssignment_0()); }
	(rule__OperationalTransformation__Transformation_hAssignment_0)
	{ after(grammarAccess.getOperationalTransformationAccess().getTransformation_hAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalTransformation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalTransformationAccess().getAlternatives_1()); }
	(rule__OperationalTransformation__Alternatives_1)
	{ after(grammarAccess.getOperationalTransformationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationalTransformation__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalTransformation__Group_1_1__0__Impl
	rule__OperationalTransformation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalTransformationAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getOperationalTransformationAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalTransformation__Group_1_1__1__Impl
	rule__OperationalTransformation__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalTransformationAccess().getModule_elementAssignment_1_1_1()); }
	(rule__OperationalTransformation__Module_elementAssignment_1_1_1)*
	{ after(grammarAccess.getOperationalTransformationAccess().getModule_elementAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalTransformation__Group_1_1__2__Impl
	rule__OperationalTransformation__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalTransformationAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getOperationalTransformationAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationalTransformation__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationalTransformationAccess().getSemicolonKeyword_1_1_3()); }
	(';')?
	{ after(grammarAccess.getOperationalTransformationAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TagGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group__0__Impl
	rule__TagGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getTagKeyword_0()); }
	'tag'
	{ after(grammarAccess.getTagGOAccess().getTagKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group__1__Impl
	rule__TagGO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getTagidAssignment_1()); }
	(rule__TagGO__TagidAssignment_1)
	{ after(grammarAccess.getTagGOAccess().getTagidAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group__2__Impl
	rule__TagGO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getScoped_identifierAssignment_2()); }
	(rule__TagGO__Scoped_identifierAssignment_2)
	{ after(grammarAccess.getTagGOAccess().getScoped_identifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group__3__Impl
	rule__TagGO__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getGroup_3()); }
	(rule__TagGO__Group_3__0)?
	{ after(grammarAccess.getTagGOAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getTagGOAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TagGO__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group_3__0__Impl
	rule__TagGO__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getEqualsSignKeyword_3_0()); }
	'='
	{ after(grammarAccess.getTagGOAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TagGO__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagGOAccess().getTagvalueAssignment_3_1()); }
	(rule__TagGO__TagvalueAssignment_3_1)
	{ after(grammarAccess.getTagGOAccess().getTagvalueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModelGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelGO__Group__0__Impl
	rule__MetaModelGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelGOAccess().getMetamodel_hAssignment_0()); }
	(rule__MetaModelGO__Metamodel_hAssignment_0)
	{ after(grammarAccess.getMetaModelGOAccess().getMetamodel_hAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelGO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelGOAccess().getAlternatives_1()); }
	(rule__MetaModelGO__Alternatives_1)
	{ after(grammarAccess.getMetaModelGOAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModelGO__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelGO__Group_1_1__0__Impl
	rule__MetaModelGO__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelGOAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getMetaModelGOAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelGO__Group_1_1__1__Impl
	rule__MetaModelGO__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelGOAccess().getMetamodel_elementAssignment_1_1_1()); }
	(rule__MetaModelGO__Metamodel_elementAssignment_1_1_1)*
	{ after(grammarAccess.getMetaModelGOAccess().getMetamodel_elementAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelGO__Group_1_1__2__Impl
	rule__MetaModelGO__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelGOAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getMetaModelGOAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelGO__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelGOAccess().getSemicolonKeyword_1_1_3()); }
	(';')?
	{ after(grammarAccess.getMetaModelGOAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessDecl__Group__0__Impl
	rule__AccessDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessDeclAccess().getAccess_usageAssignment_0()); }
	(rule__AccessDecl__Access_usageAssignment_0)
	{ after(grammarAccess.getAccessDeclAccess().getAccess_usageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessDeclAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getAccessDeclAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypedefKeyword_0()); }
	'typedef'
	{ after(grammarAccess.getTypeDefAccess().getTypedefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
	rule__TypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
	(rule__TypeDef__NameAssignment_1)
	{ after(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__2__Impl
	rule__TypeDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getTypeDefAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__3__Impl
	rule__TypeDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypespecAssignment_3()); }
	(rule__TypeDef__TypespecAssignment_3)
	{ after(grammarAccess.getTypeDefAccess().getTypespecAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__4__Impl
	rule__TypeDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getGroup_4()); }
	(rule__TypeDef__Group_4__0)?
	{ after(grammarAccess.getTypeDefAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getTypeDefAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4__0__Impl
	rule__TypeDef__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getLeftSquareBracketKeyword_4_0()); }
	'['
	{ after(grammarAccess.getTypeDefAccess().getLeftSquareBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4__1__Impl
	rule__TypeDef__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypedef_conditionAssignment_4_1()); }
	(rule__TypeDef__Typedef_conditionAssignment_4_1)
	{ after(grammarAccess.getTypeDefAccess().getTypedef_conditionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getRightSquareBracketKeyword_4_2()); }
	']'
	{ after(grammarAccess.getTypeDefAccess().getRightSquareBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierGO__Group__0__Impl
	rule__ClassifierGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierGOAccess().getClassifier_hAssignment_0()); }
	(rule__ClassifierGO__Classifier_hAssignment_0)
	{ after(grammarAccess.getClassifierGOAccess().getClassifier_hAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierGO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierGOAccess().getAlternatives_1()); }
	(rule__ClassifierGO__Alternatives_1)
	{ after(grammarAccess.getClassifierGOAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierGO__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierGO__Group_1_1__0__Impl
	rule__ClassifierGO__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierGOAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getClassifierGOAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierGO__Group_1_1__1__Impl
	rule__ClassifierGO__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierGOAccess().getClassifier_feature_listAssignment_1_1_1()); }
	(rule__ClassifierGO__Classifier_feature_listAssignment_1_1_1)?
	{ after(grammarAccess.getClassifierGOAccess().getClassifier_feature_listAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierGO__Group_1_1__2__Impl
	rule__ClassifierGO__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierGOAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getClassifierGOAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierGO__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierGOAccess().getSemicolonKeyword_1_1_3()); }
	(';')?
	{ after(grammarAccess.getClassifierGOAccess().getSemicolonKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarParameter__Group__0__Impl
	rule__VarParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarParameterAccess().getKindAssignment_0()); }
	(rule__VarParameter__KindAssignment_0)?
	{ after(grammarAccess.getVarParameterAccess().getKindAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarParameterAccess().getDeclaratorAssignment_1()); }
	(rule__VarParameter__DeclaratorAssignment_1)
	{ after(grammarAccess.getVarParameterAccess().getDeclaratorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryHeader__Group__0__Impl
	rule__EntryHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryHeaderAccess().getMainKeyword_0()); }
	'main'
	{ after(grammarAccess.getEntryHeaderAccess().getMainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryHeader__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryHeaderAccess().getSimple_signatureAssignment_1()); }
	(rule__EntryHeader__Simple_signatureAssignment_1)
	{ after(grammarAccess.getEntryHeaderAccess().getSimple_signatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBlock__Group__0__Impl
	rule__ExpressionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBlockAccess().getExpressionBlockAction_0()); }
	()
	{ after(grammarAccess.getExpressionBlockAccess().getExpressionBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBlock__Group__1__Impl
	rule__ExpressionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getExpressionBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBlock__Group__2__Impl
	rule__ExpressionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBlockAccess().getExpression_listAssignment_2()); }
	(rule__ExpressionBlock__Expression_listAssignment_2)?
	{ after(grammarAccess.getExpressionBlockAccess().getExpression_listAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getExpressionBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group__0__Impl
	rule__MappingBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getMappingBodyAction_0()); }
	()
	{ after(grammarAccess.getMappingBodyAccess().getMappingBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group__1__Impl
	rule__MappingBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getGroup_1()); }
	(rule__MappingBody__Group_1__0)?
	{ after(grammarAccess.getMappingBodyAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group__2__Impl
	rule__MappingBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getPopulation_sectionAssignment_2()); }
	(rule__MappingBody__Population_sectionAssignment_2)?
	{ after(grammarAccess.getMappingBodyAccess().getPopulation_sectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getGroup_3()); }
	(rule__MappingBody__Group_3__0)?
	{ after(grammarAccess.getMappingBodyAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1__0__Impl
	rule__MappingBody__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getInitKeyword_1_0()); }
	'init'
	{ after(grammarAccess.getMappingBodyAccess().getInitKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1__1__Impl
	rule__MappingBody__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getLeftCurlyBracketKeyword_1_1()); }
	'{'
	{ after(grammarAccess.getMappingBodyAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1__2__Impl
	rule__MappingBody__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getGroup_1_2()); }
	(rule__MappingBody__Group_1_2__0)?
	{ after(grammarAccess.getMappingBodyAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getRightCurlyBracketKeyword_1_3()); }
	'}'
	{ after(grammarAccess.getMappingBodyAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1_2__0__Impl
	rule__MappingBody__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getInitSectionAssignment_1_2_0()); }
	(rule__MappingBody__InitSectionAssignment_1_2_0)
	{ after(grammarAccess.getMappingBodyAccess().getInitSectionAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1_2__1__Impl
	rule__MappingBody__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getGroup_1_2_1()); }
	(rule__MappingBody__Group_1_2_1__0)*
	{ after(grammarAccess.getMappingBodyAccess().getGroup_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_1_2_2()); }
	(';')?
	{ after(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group_1_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1_2_1__0__Impl
	rule__MappingBody__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_1_2_1_0()); }
	';'
	{ after(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_1_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_1_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getInitSectionAssignment_1_2_1_1()); }
	(rule__MappingBody__InitSectionAssignment_1_2_1_1)
	{ after(grammarAccess.getMappingBodyAccess().getInitSectionAssignment_1_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3__0__Impl
	rule__MappingBody__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getEndKeyword_3_0()); }
	'end'
	{ after(grammarAccess.getMappingBodyAccess().getEndKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3__1__Impl
	rule__MappingBody__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getMappingBodyAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3__2__Impl
	rule__MappingBody__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getGroup_3_2()); }
	(rule__MappingBody__Group_3_2__0)?
	{ after(grammarAccess.getMappingBodyAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getMappingBodyAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3_2__0__Impl
	rule__MappingBody__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getEndSectionAssignment_3_2_0()); }
	(rule__MappingBody__EndSectionAssignment_3_2_0)
	{ after(grammarAccess.getMappingBodyAccess().getEndSectionAssignment_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3_2__1__Impl
	rule__MappingBody__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getGroup_3_2_1()); }
	(rule__MappingBody__Group_3_2_1__0)*
	{ after(grammarAccess.getMappingBodyAccess().getGroup_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_3_2_2()); }
	(';')?
	{ after(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingBody__Group_3_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3_2_1__0__Impl
	rule__MappingBody__Group_3_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_3_2_1_0()); }
	';'
	{ after(grammarAccess.getMappingBodyAccess().getSemicolonKeyword_3_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingBody__Group_3_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Group_3_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingBodyAccess().getEndSectionAssignment_3_2_1_1()); }
	(rule__MappingBody__EndSectionAssignment_3_2_1_1)
	{ after(grammarAccess.getMappingBodyAccess().getEndSectionAssignment_3_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PopulationSection__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PopulationSection__Group_0__0__Impl
	rule__PopulationSection__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPopulationSectionAccess().getPopulationSectionAction_0_0()); }
	()
	{ after(grammarAccess.getPopulationSectionAccess().getPopulationSectionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PopulationSection__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPopulationSectionAccess().getExpression_listAssignment_0_1()); }
	(rule__PopulationSection__Expression_listAssignment_0_1)
	{ after(grammarAccess.getPopulationSectionAccess().getExpression_listAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PopulationSection__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PopulationSection__Group_1__0__Impl
	rule__PopulationSection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPopulationSectionAccess().getPopulationKeyword_1_0()); }
	'population'
	{ after(grammarAccess.getPopulationSectionAccess().getPopulationKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PopulationSection__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPopulationSectionAccess().getExpression_blockAssignment_1_1()); }
	(rule__PopulationSection__Expression_blockAssignment_1_1)
	{ after(grammarAccess.getPopulationSectionAccess().getExpression_blockAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getExpression_semi_listAssignment_0()); }
	(rule__ExpressionList__Expression_semi_listAssignment_0)
	{ after(grammarAccess.getExpressionListAccess().getExpression_semi_listAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionListAccess().getSemicolonKeyword_1()); }
	(';')?
	{ after(grammarAccess.getExpressionListAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSemiList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionSemiList__Group__0__Impl
	rule__ExpressionSemiList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionSemiListAccess().getExpressionSemiListAction_0()); }
	()
	{ after(grammarAccess.getExpressionSemiListAccess().getExpressionSemiListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionSemiList__Group__1__Impl
	rule__ExpressionSemiList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionSemiListAccess().getExpressionAssignment_1()); }
	(rule__ExpressionSemiList__ExpressionAssignment_1)
	{ after(grammarAccess.getExpressionSemiListAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionSemiList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionSemiListAccess().getGroup_2()); }
	(rule__ExpressionSemiList__Group_2__0)*
	{ after(grammarAccess.getExpressionSemiListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSemiList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionSemiList__Group_2__0__Impl
	rule__ExpressionSemiList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionSemiListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getExpressionSemiListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionSemiList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionSemiListAccess().getExpressionAssignment_2_1()); }
	(rule__ExpressionSemiList__ExpressionAssignment_2_1)
	{ after(grammarAccess.getExpressionSemiListAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_0__0__Impl
	rule__Declarator__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getTypespecAssignment_0_0()); }
	(rule__Declarator__TypespecAssignment_0_0)
	{ after(grammarAccess.getDeclaratorAccess().getTypespecAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getInit_partAssignment_0_1()); }
	(rule__Declarator__Init_partAssignment_0_1)?
	{ after(grammarAccess.getDeclaratorAccess().getInit_partAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_1__0__Impl
	rule__Declarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getScoped_identifierAssignment_1_0()); }
	(rule__Declarator__Scoped_identifierAssignment_1_0)
	{ after(grammarAccess.getDeclaratorAccess().getScoped_identifierAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_1__1__Impl
	rule__Declarator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getDeclaratorAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_1__2__Impl
	rule__Declarator__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getTypespecAssignment_1_2()); }
	(rule__Declarator__TypespecAssignment_1_2)
	{ after(grammarAccess.getDeclaratorAccess().getTypespecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declarator__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorAccess().getInit_partAssignment_1_3()); }
	(rule__Declarator__Init_partAssignment_1_3)?
	{ after(grammarAccess.getDeclaratorAccess().getInit_partAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpec__Group__0__Impl
	rule__TypeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecAccess().getType_referenceAssignment_0()); }
	(rule__TypeSpec__Type_referenceAssignment_0)
	{ after(grammarAccess.getTypeSpecAccess().getType_referenceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecAccess().getGroup_1()); }
	(rule__TypeSpec__Group_1__0)?
	{ after(grammarAccess.getTypeSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpec__Group_1__0__Impl
	rule__TypeSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecAccess().getCommercialAtKeyword_1_0()); }
	'@'
	{ after(grammarAccess.getTypeSpecAccess().getCommercialAtKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeSpecAccess().getExtent_locationAssignment_1_1()); }
	(rule__TypeSpec__Extent_locationAssignment_1_1)
	{ after(grammarAccess.getTypeSpecAccess().getExtent_locationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitPart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitPart__Group__0__Impl
	rule__InitPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitPartAccess().getInit_opAssignment_0()); }
	(rule__InitPart__Init_opAssignment_0)
	{ after(grammarAccess.getInitPartAccess().getInit_opAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitPartAccess().getExpressionAssignment_1()); }
	(rule__InitPart__ExpressionAssignment_1)
	{ after(grammarAccess.getInitPartAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifier__Group__0__Impl
	rule__ScopedIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierAccess().getScopedIdentifierAction_0()); }
	()
	{ after(grammarAccess.getScopedIdentifierAccess().getScopedIdentifierAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifier__Group__1__Impl
	rule__ScopedIdentifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierAccess().getIdentifierAssignment_1()); }
	(rule__ScopedIdentifier__IdentifierAssignment_1)
	{ after(grammarAccess.getScopedIdentifierAccess().getIdentifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierAccess().getGroup_2()); }
	(rule__ScopedIdentifier__Group_2__0)*
	{ after(grammarAccess.getScopedIdentifierAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifier__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifier__Group_2__0__Impl
	rule__ScopedIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierAccess().getColonColonKeyword_2_0()); }
	'::'
	{ after(grammarAccess.getScopedIdentifierAccess().getColonColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierAccess().getIdentifierAssignment_2_1()); }
	(rule__ScopedIdentifier__IdentifierAssignment_2_1)
	{ after(grammarAccess.getScopedIdentifierAccess().getIdentifierAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_0__0__Impl
	rule__TypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0_0()); }
	()
	{ after(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeReferenceAccess().getScoped_identifierAssignment_0_1()); }
	(rule__TypeReference__Scoped_identifierAssignment_0_1)
	{ after(grammarAccess.getTypeReferenceAccess().getScoped_identifierAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_0__0__Impl
	rule__ComplexType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getComplexTypeAction_0_0()); }
	()
	{ after(grammarAccess.getComplexTypeAccess().getComplexTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getComplex_type_keyAssignment_0_1()); }
	(rule__ComplexType__Complex_type_keyAssignment_0_1)
	{ after(grammarAccess.getComplexTypeAccess().getComplex_type_keyAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_1__0__Impl
	rule__ComplexType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getCollection_keyAssignment_1_0()); }
	(rule__ComplexType__Collection_keyAssignment_1_0)
	{ after(grammarAccess.getComplexTypeAccess().getCollection_keyAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_1__1__Impl
	rule__ComplexType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_1__2__Impl
	rule__ComplexType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getTypespecAssignment_1_2()); }
	(rule__ComplexType__TypespecAssignment_1_2)
	{ after(grammarAccess.getComplexTypeAccess().getTypespecAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_2__0__Impl
	rule__ComplexType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getDictKeyword_2_0()); }
	'Dict'
	{ after(grammarAccess.getComplexTypeAccess().getDictKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_2__1__Impl
	rule__ComplexType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_2__2__Impl
	rule__ComplexType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getTypespecAssignment_2_2()); }
	(rule__ComplexType__TypespecAssignment_2_2)
	{ after(grammarAccess.getComplexTypeAccess().getTypespecAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_2__3__Impl
	rule__ComplexType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getCommaKeyword_2_3()); }
	','
	{ after(grammarAccess.getComplexTypeAccess().getCommaKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_2__4__Impl
	rule__ComplexType__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getTypespecAssignment_2_4()); }
	(rule__ComplexType__TypespecAssignment_2_4)
	{ after(grammarAccess.getComplexTypeAccess().getTypespecAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_2_5()); }
	')'
	{ after(grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_3__0__Impl
	rule__ComplexType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getTupleKeyword_3_0()); }
	'Tuple'
	{ after(grammarAccess.getComplexTypeAccess().getTupleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_3__1__Impl
	rule__ComplexType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_3__2__Impl
	rule__ComplexType__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getDeclarator_listAssignment_3_2()); }
	(rule__ComplexType__Declarator_listAssignment_3_2)
	{ after(grammarAccess.getComplexTypeAccess().getDeclarator_listAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexType__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaratorList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaratorList__Group__0__Impl
	rule__DeclaratorList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorListAccess().getDeclaratorListAction_0()); }
	()
	{ after(grammarAccess.getDeclaratorListAccess().getDeclaratorListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaratorList__Group__1__Impl
	rule__DeclaratorList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorListAccess().getDeclaratorAssignment_1()); }
	(rule__DeclaratorList__DeclaratorAssignment_1)
	{ after(grammarAccess.getDeclaratorListAccess().getDeclaratorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaratorList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorListAccess().getGroup_2()); }
	(rule__DeclaratorList__Group_2__0)*
	{ after(grammarAccess.getDeclaratorListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaratorList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaratorList__Group_2__0__Impl
	rule__DeclaratorList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getDeclaratorListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclaratorList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclaratorListAccess().getDeclaratorAssignment_2_1()); }
	(rule__DeclaratorList__DeclaratorAssignment_2_1)
	{ after(grammarAccess.getDeclaratorListAccess().getDeclaratorAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSignature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSignature__Group__0__Impl
	rule__SimpleSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSignatureAccess().getSimpleSignatureAction_0()); }
	()
	{ after(grammarAccess.getSimpleSignatureAccess().getSimpleSignatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSignature__Group__1__Impl
	rule__SimpleSignature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSignatureAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSimpleSignatureAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSignature__Group__2__Impl
	rule__SimpleSignature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSignatureAccess().getParam_listAssignment_2()); }
	(rule__SimpleSignature__Param_listAssignment_2)?
	{ after(grammarAccess.getSimpleSignatureAccess().getParam_listAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSignature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSignatureAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSimpleSignatureAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group__0__Impl
	rule__ParamList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamListAction_0()); }
	()
	{ after(grammarAccess.getParamListAccess().getParamListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group__1__Impl
	rule__ParamList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamAssignment_1()); }
	(rule__ParamList__ParamAssignment_1)
	{ after(grammarAccess.getParamListAccess().getParamAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getGroup_2()); }
	(rule__ParamList__Group_2__0)*
	{ after(grammarAccess.getParamListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_2__0__Impl
	rule__ParamList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getParamListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamListAccess().getParamAssignment_2_1()); }
	(rule__ParamList__ParamAssignment_2_1)
	{ after(grammarAccess.getParamListAccess().getParamAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageRefGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group__0__Impl
	rule__PackageRefGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getPackageRefGOAction_0()); }
	()
	{ after(grammarAccess.getPackageRefGOAccess().getPackageRefGOAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getAlternatives_1()); }
	(rule__PackageRefGO__Alternatives_1)
	{ after(grammarAccess.getPackageRefGOAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageRefGO__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group_1_0__0__Impl
	rule__PackageRefGO__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getScoped_identifierAssignment_1_0_0()); }
	(rule__PackageRefGO__Scoped_identifierAssignment_1_0_0)
	{ after(grammarAccess.getPackageRefGOAccess().getScoped_identifierAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getGroup_1_0_1()); }
	(rule__PackageRefGO__Group_1_0_1__0)?
	{ after(grammarAccess.getPackageRefGOAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageRefGO__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group_1_0_1__0__Impl
	rule__PackageRefGO__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getLeftParenthesisKeyword_1_0_1_0()); }
	'('
	{ after(grammarAccess.getPackageRefGOAccess().getLeftParenthesisKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group_1_0_1__1__Impl
	rule__PackageRefGO__Group_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getUriAssignment_1_0_1_1()); }
	(rule__PackageRefGO__UriAssignment_1_0_1_1)
	{ after(grammarAccess.getPackageRefGOAccess().getUriAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageRefGO__Group_1_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Group_1_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageRefGOAccess().getRightParenthesisKeyword_1_0_1_2()); }
	')'
	{ after(grammarAccess.getPackageRefGOAccess().getRightParenthesisKeyword_1_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorHeader__Group__0__Impl
	rule__ConstructorHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorHeaderAccess().getQualifierAssignment_0()); }
	(rule__ConstructorHeader__QualifierAssignment_0)*
	{ after(grammarAccess.getConstructorHeaderAccess().getQualifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorHeader__Group__1__Impl
	rule__ConstructorHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorHeaderAccess().getConstructorKeyword_1()); }
	'constructor'
	{ after(grammarAccess.getConstructorHeaderAccess().getConstructorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorHeader__Group__2__Impl
	rule__ConstructorHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorHeaderAccess().getScoped_identifierAssignment_2()); }
	(rule__ConstructorHeader__Scoped_identifierAssignment_2)
	{ after(grammarAccess.getConstructorHeaderAccess().getScoped_identifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorHeader__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorHeaderAccess().getSimple_signatureAssignment_3()); }
	(rule__ConstructorHeader__Simple_signatureAssignment_3)
	{ after(grammarAccess.getConstructorHeaderAccess().getSimple_signatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HelperHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HelperHeader__Group__0__Impl
	rule__HelperHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperHeaderAccess().getHelper_infoAssignment_0()); }
	(rule__HelperHeader__Helper_infoAssignment_0)
	{ after(grammarAccess.getHelperHeaderAccess().getHelper_infoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HelperHeader__Group__1__Impl
	rule__HelperHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperHeaderAccess().getScope_identifierAssignment_1()); }
	(rule__HelperHeader__Scope_identifierAssignment_1)
	{ after(grammarAccess.getHelperHeaderAccess().getScope_identifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HelperHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperHeaderAccess().getComplete_signatureAssignment_2()); }
	(rule__HelperHeader__Complete_signatureAssignment_2)
	{ after(grammarAccess.getHelperHeaderAccess().getComplete_signatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HelperInfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HelperInfo__Group__0__Impl
	rule__HelperInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperInfoAccess().getHelperInfoAction_0()); }
	()
	{ after(grammarAccess.getHelperInfoAccess().getHelperInfoAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HelperInfo__Group__1__Impl
	rule__HelperInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperInfoAccess().getQualifierAssignment_1()); }
	(rule__HelperInfo__QualifierAssignment_1)*
	{ after(grammarAccess.getHelperInfoAccess().getQualifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HelperInfo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelperInfoAccess().getHelper_kindAssignment_2()); }
	(rule__HelperInfo__Helper_kindAssignment_2)
	{ after(grammarAccess.getHelperInfoAccess().getHelper_kindAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompleteSignature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteSignature__Group__0__Impl
	rule__CompleteSignature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteSignatureAccess().getSimple_signatureAssignment_0()); }
	(rule__CompleteSignature__Simple_signatureAssignment_0)
	{ after(grammarAccess.getCompleteSignatureAccess().getSimple_signatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteSignature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteSignatureAccess().getGroup_1()); }
	(rule__CompleteSignature__Group_1__0)?
	{ after(grammarAccess.getCompleteSignatureAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompleteSignature__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteSignature__Group_1__0__Impl
	rule__CompleteSignature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteSignatureAccess().getColonKeyword_1_0()); }
	':'
	{ after(grammarAccess.getCompleteSignatureAccess().getColonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompleteSignature__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompleteSignatureAccess().getParam_listAssignment_1_1()); }
	(rule__CompleteSignature__Param_listAssignment_1_1)
	{ after(grammarAccess.getCompleteSignatureAccess().getParam_listAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LibraryHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LibraryHeader__Group__0__Impl
	rule__LibraryHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryHeaderAccess().getLibraryHeaderAction_0()); }
	()
	{ after(grammarAccess.getLibraryHeaderAccess().getLibraryHeaderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LibraryHeader__Group__1__Impl
	rule__LibraryHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryHeaderAccess().getLibraryKeyword_1()); }
	'library'
	{ after(grammarAccess.getLibraryHeaderAccess().getLibraryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LibraryHeader__Group__2__Impl
	rule__LibraryHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryHeaderAccess().getNameAssignment_2()); }
	(rule__LibraryHeader__NameAssignment_2)
	{ after(grammarAccess.getLibraryHeaderAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LibraryHeader__Group__3__Impl
	rule__LibraryHeader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryHeaderAccess().getLibrary_signatureAssignment_3()); }
	(rule__LibraryHeader__Library_signatureAssignment_3)?
	{ after(grammarAccess.getLibraryHeaderAccess().getLibrary_signatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LibraryHeader__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLibraryHeaderAccess().getModule_usageAssignment_4()); }
	(rule__LibraryHeader__Module_usageAssignment_4)?
	{ after(grammarAccess.getLibraryHeaderAccess().getModule_usageAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleUsageGO__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleUsageGO__Group_0__0__Impl
	rule__ModuleUsageGO__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleUsageGO__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleUsageGOAccess().getModuleUsageGOAction_0_0()); }
	()
	{ after(grammarAccess.getModuleUsageGOAccess().getModuleUsageGOAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleUsageGO__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleUsageGO__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleUsageGO__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleUsageGOAccess().getAccess_usageAssignment_0_1()); }
	(rule__ModuleUsageGO__Access_usageAssignment_0_1)
	{ after(grammarAccess.getModuleUsageGOAccess().getAccess_usageAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessUsage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group__0__Impl
	rule__AccessUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getAccessUsageAction_0()); }
	()
	{ after(grammarAccess.getAccessUsageAccess().getAccessUsageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group__1__Impl
	rule__AccessUsage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getAccessKeyword_1()); }
	'access'
	{ after(grammarAccess.getAccessUsageAccess().getAccessKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group__2__Impl
	rule__AccessUsage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getModule_kindAssignment_2()); }
	(rule__AccessUsage__Module_kindAssignment_2)?
	{ after(grammarAccess.getAccessUsageAccess().getModule_kindAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group__3__Impl
	rule__AccessUsage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getModuleref_listAssignment_3()); }
	(rule__AccessUsage__Moduleref_listAssignment_3)
	{ after(grammarAccess.getAccessUsageAccess().getModuleref_listAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getGroup_4()); }
	(rule__AccessUsage__Group_4__0)*
	{ after(grammarAccess.getAccessUsageAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AccessUsage__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group_4__0__Impl
	rule__AccessUsage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getAccessUsageAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AccessUsage__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAccessUsageAccess().getModuleref_listAssignment_4_1()); }
	(rule__AccessUsage__Moduleref_listAssignment_4_1)
	{ after(grammarAccess.getAccessUsageAccess().getModuleref_listAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendsUsage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group__0__Impl
	rule__ExtendsUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getExtendsUsageAction_0()); }
	()
	{ after(grammarAccess.getExtendsUsageAccess().getExtendsUsageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group__1__Impl
	rule__ExtendsUsage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getExtendsKeyword_1()); }
	'extends'
	{ after(grammarAccess.getExtendsUsageAccess().getExtendsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group__2__Impl
	rule__ExtendsUsage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getModule_kindAssignment_2()); }
	(rule__ExtendsUsage__Module_kindAssignment_2)?
	{ after(grammarAccess.getExtendsUsageAccess().getModule_kindAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group__3__Impl
	rule__ExtendsUsage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getModuleref_listAssignment_3()); }
	(rule__ExtendsUsage__Moduleref_listAssignment_3)
	{ after(grammarAccess.getExtendsUsageAccess().getModuleref_listAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getGroup_4()); }
	(rule__ExtendsUsage__Group_4__0)*
	{ after(grammarAccess.getExtendsUsageAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendsUsage__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group_4__0__Impl
	rule__ExtendsUsage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getExtendsUsageAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsUsage__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsUsageAccess().getModuleref_listAssignment_4_1()); }
	(rule__ExtendsUsage__Moduleref_listAssignment_4_1)
	{ after(grammarAccess.getExtendsUsageAccess().getModuleref_listAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRefGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleRefGO__Group__0__Impl
	rule__ModuleRefGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRefGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleRefGOAccess().getScoped_identifierAssignment_0()); }
	(rule__ModuleRefGO__Scoped_identifierAssignment_0)
	{ after(grammarAccess.getModuleRefGOAccess().getScoped_identifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRefGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleRefGO__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRefGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleRefGOAccess().getSimple_signatureAssignment_1()); }
	(rule__ModuleRefGO__Simple_signatureAssignment_1)?
	{ after(grammarAccess.getModuleRefGOAccess().getSimple_signatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingFullHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group__0__Impl
	rule__MappingFullHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getMapping_headerAssignment_0()); }
	(rule__MappingFullHeader__Mapping_headerAssignment_0)
	{ after(grammarAccess.getMappingFullHeaderAccess().getMapping_headerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group__1__Impl
	rule__MappingFullHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getGroup_1()); }
	(rule__MappingFullHeader__Group_1__0)?
	{ after(grammarAccess.getMappingFullHeaderAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getGroup_2()); }
	(rule__MappingFullHeader__Group_2__0)?
	{ after(grammarAccess.getMappingFullHeaderAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingFullHeader__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group_1__0__Impl
	rule__MappingFullHeader__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getWhenKeyword_1_0()); }
	'when'
	{ after(grammarAccess.getMappingFullHeaderAccess().getWhenKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getWhenAssignment_1_1()); }
	(rule__MappingFullHeader__WhenAssignment_1_1)
	{ after(grammarAccess.getMappingFullHeaderAccess().getWhenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingFullHeader__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group_2__0__Impl
	rule__MappingFullHeader__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getWhereKeyword_2_0()); }
	'where'
	{ after(grammarAccess.getMappingFullHeaderAccess().getWhereKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingFullHeader__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFullHeaderAccess().getWhereAssignment_2_1()); }
	(rule__MappingFullHeader__WhereAssignment_2_1)
	{ after(grammarAccess.getMappingFullHeaderAccess().getWhereAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingHeader__Group__0__Impl
	rule__MappingHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingHeaderAccess().getQualifierAssignment_0()); }
	(rule__MappingHeader__QualifierAssignment_0)*
	{ after(grammarAccess.getMappingHeaderAccess().getQualifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingHeader__Group__1__Impl
	rule__MappingHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingHeaderAccess().getMappingKeyword_1()); }
	'mapping'
	{ after(grammarAccess.getMappingHeaderAccess().getMappingKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingHeader__Group__2__Impl
	rule__MappingHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingHeaderAccess().getParam_directionAssignment_2()); }
	(rule__MappingHeader__Param_directionAssignment_2)?
	{ after(grammarAccess.getMappingHeaderAccess().getParam_directionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingHeader__Group__3__Impl
	rule__MappingHeader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingHeaderAccess().getScoped_identifierAssignment_3()); }
	(rule__MappingHeader__Scoped_identifierAssignment_3)
	{ after(grammarAccess.getMappingHeaderAccess().getScoped_identifierAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingHeader__Group__4__Impl
	rule__MappingHeader__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingHeaderAccess().getComplete_signatureAssignment_4()); }
	(rule__MappingHeader__Complete_signatureAssignment_4)
	{ after(grammarAccess.getMappingHeaderAccess().getComplete_signatureAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingHeader__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingHeaderAccess().getMapping_extraAssignment_5()); }
	(rule__MappingHeader__Mapping_extraAssignment_5)*
	{ after(grammarAccess.getMappingHeaderAccess().getMapping_extraAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingExtra__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingExtra__Group_0__0__Impl
	rule__MappingExtra__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtra__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingExtraAccess().getMappingExtraAction_0_0()); }
	()
	{ after(grammarAccess.getMappingExtraAccess().getMappingExtraAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtra__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingExtra__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtra__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingExtraAccess().getMapping_extensionAssignment_0_1()); }
	(rule__MappingExtra__Mapping_extensionAssignment_0_1)
	{ after(grammarAccess.getMappingExtraAccess().getMapping_extensionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingExtension__Group__0__Impl
	rule__MappingExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingExtensionAccess().getMapping_extension_keyAssignment_0()); }
	(rule__MappingExtension__Mapping_extension_keyAssignment_0)
	{ after(grammarAccess.getMappingExtensionAccess().getMapping_extension_keyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingExtension__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingExtensionAccess().getScoped_identifier_listAssignment_1()); }
	(rule__MappingExtension__Scoped_identifier_listAssignment_1)
	{ after(grammarAccess.getMappingExtensionAccess().getScoped_identifier_listAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingRefinement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRefinement__Group__0__Impl
	rule__MappingRefinement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRefinement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRefinementAccess().getRefinesKeyword_0()); }
	'refines'
	{ after(grammarAccess.getMappingRefinementAccess().getRefinesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRefinement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingRefinement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRefinement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingRefinementAccess().getScoped_identifierAssignment_1()); }
	(rule__MappingRefinement__Scoped_identifierAssignment_1)
	{ after(grammarAccess.getMappingRefinementAccess().getScoped_identifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifierList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifierList__Group__0__Impl
	rule__ScopedIdentifierList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierListAccess().getScopedIdentifierListAction_0()); }
	()
	{ after(grammarAccess.getScopedIdentifierListAccess().getScopedIdentifierListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifierList__Group__1__Impl
	rule__ScopedIdentifierList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listAssignment_1()); }
	(rule__ScopedIdentifierList__Scoped_identifier_listAssignment_1)
	{ after(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifierList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierListAccess().getGroup_2()); }
	(rule__ScopedIdentifierList__Group_2__0)*
	{ after(grammarAccess.getScopedIdentifierListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScopedIdentifierList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifierList__Group_2__0__Impl
	rule__ScopedIdentifierList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierListAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getScopedIdentifierListAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScopedIdentifierList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listAssignment_2_1()); }
	(rule__ScopedIdentifierList__Scoped_identifier_listAssignment_2_1)
	{ after(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationHeader__Group__0__Impl
	rule__TransformationHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationHeaderAccess().getQualifierAssignment_0()); }
	(rule__TransformationHeader__QualifierAssignment_0)*
	{ after(grammarAccess.getTransformationHeaderAccess().getQualifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationHeader__Group__1__Impl
	rule__TransformationHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationHeaderAccess().getTransformationKeyword_1()); }
	'transformation'
	{ after(grammarAccess.getTransformationHeaderAccess().getTransformationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationHeader__Group__2__Impl
	rule__TransformationHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationHeaderAccess().getNameAssignment_2()); }
	(rule__TransformationHeader__NameAssignment_2)
	{ after(grammarAccess.getTransformationHeaderAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationHeader__Group__3__Impl
	rule__TransformationHeader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationHeaderAccess().getTransformation_signatureAssignment_3()); }
	(rule__TransformationHeader__Transformation_signatureAssignment_3)
	{ after(grammarAccess.getTransformationHeaderAccess().getTransformation_signatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationHeader__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationHeaderAccess().getTransformation_usage_refineAssignment_4()); }
	(rule__TransformationHeader__Transformation_usage_refineAssignment_4)?
	{ after(grammarAccess.getTransformationHeaderAccess().getTransformation_usage_refineAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationUsageRefine__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationUsageRefine__Group_0__0__Impl
	rule__TransformationUsageRefine__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationUsageRefineAccess().getTransformationUsageRefineAction_0_0()); }
	()
	{ after(grammarAccess.getTransformationUsageRefineAccess().getTransformationUsageRefineAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationUsageRefine__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationUsageRefineAccess().getModule_usageAssignment_0_1()); }
	(rule__TransformationUsageRefine__Module_usageAssignment_0_1)
	{ after(grammarAccess.getTransformationUsageRefineAccess().getModule_usageAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationUsageRefine__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationUsageRefine__Group_1__0__Impl
	rule__TransformationUsageRefine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationUsageRefineAccess().getRefinesKeyword_1_0()); }
	'refines'
	{ after(grammarAccess.getTransformationUsageRefineAccess().getRefinesKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationUsageRefine__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationUsageRefineAccess().getTransformation_refineAssignment_1_1()); }
	(rule__TransformationUsageRefine__Transformation_refineAssignment_1_1)
	{ after(grammarAccess.getTransformationUsageRefineAccess().getTransformation_refineAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModelHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelHeader__Group__0__Impl
	rule__MetaModelHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelHeaderAccess().getAlternatives_0()); }
	(rule__MetaModelHeader__Alternatives_0)
	{ after(grammarAccess.getMetaModelHeaderAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelHeader__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelHeaderAccess().getScoped_identifierAssignment_1()); }
	(rule__MetaModelHeader__Scoped_identifierAssignment_1)
	{ after(grammarAccess.getMetaModelHeaderAccess().getScoped_identifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModelElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelElement__Group_0__0__Impl
	rule__MetaModelElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelElementAccess().getMetaModelElementAction_0_0()); }
	()
	{ after(grammarAccess.getMetaModelElementAccess().getMetaModelElementAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaModelElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaModelElementAccess().getClassifierAssignment_0_1()); }
	(rule__MetaModelElement__ClassifierAssignment_0_1)
	{ after(grammarAccess.getMetaModelElementAccess().getClassifierAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group__0__Impl
	rule__EnumerationGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getEnumerationGOAction_0()); }
	()
	{ after(grammarAccess.getEnumerationGOAccess().getEnumerationGOAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group__1__Impl
	rule__EnumerationGO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getEnumeration_hAssignment_1()); }
	(rule__EnumerationGO__Enumeration_hAssignment_1)
	{ after(grammarAccess.getEnumerationGOAccess().getEnumeration_hAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getAlternatives_2()); }
	(rule__EnumerationGO__Alternatives_2)
	{ after(grammarAccess.getEnumerationGOAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationGO__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1__0__Impl
	rule__EnumerationGO__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getEnumerationGOAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1__1__Impl
	rule__EnumerationGO__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getIdentifierAssignment_2_1_1()); }
	(rule__EnumerationGO__IdentifierAssignment_2_1_1)
	{ after(grammarAccess.getEnumerationGOAccess().getIdentifierAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1__2__Impl
	rule__EnumerationGO__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getGroup_2_1_2()); }
	(rule__EnumerationGO__Group_2_1_2__0)*
	{ after(grammarAccess.getEnumerationGOAccess().getGroup_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1__3__Impl
	rule__EnumerationGO__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getRightCurlyBracketKeyword_2_1_3()); }
	'}'
	{ after(grammarAccess.getEnumerationGOAccess().getRightCurlyBracketKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getSemicolonKeyword_2_1_4()); }
	(';')?
	{ after(grammarAccess.getEnumerationGOAccess().getSemicolonKeyword_2_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationGO__Group_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1_2__0__Impl
	rule__EnumerationGO__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getCommaKeyword_2_1_2_0()); }
	','
	{ after(grammarAccess.getEnumerationGOAccess().getCommaKeyword_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationGO__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Group_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationGOAccess().getIdentifierAssignment_2_1_2_1()); }
	(rule__EnumerationGO__IdentifierAssignment_2_1_2_1)
	{ after(grammarAccess.getEnumerationGOAccess().getIdentifierAssignment_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationHeader__Group__0__Impl
	rule__EnumerationHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationHeaderAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumerationHeaderAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationHeader__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationHeaderAccess().getIdentifierAssignment_1()); }
	(rule__EnumerationHeader__IdentifierAssignment_1)
	{ after(grammarAccess.getEnumerationHeaderAccess().getIdentifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierHeader__Group__0__Impl
	rule__ClassifierHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierHeaderAccess().getClassifier_infoAssignment_0()); }
	(rule__ClassifierHeader__Classifier_infoAssignment_0)
	{ after(grammarAccess.getClassifierHeaderAccess().getClassifier_infoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierHeader__Group__1__Impl
	rule__ClassifierHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierHeaderAccess().getScoped_identifierAssignment_1()); }
	(rule__ClassifierHeader__Scoped_identifierAssignment_1)
	{ after(grammarAccess.getClassifierHeaderAccess().getScoped_identifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierHeaderAccess().getClassifier_extensionAssignment_2()); }
	(rule__ClassifierHeader__Classifier_extensionAssignment_2)?
	{ after(grammarAccess.getClassifierHeaderAccess().getClassifier_extensionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierFeatureList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeatureList__Group__0__Impl
	rule__ClassifierFeatureList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureListAccess().getClassifierFeatureListAction_0()); }
	()
	{ after(grammarAccess.getClassifierFeatureListAccess().getClassifierFeatureListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeatureList__Group__1__Impl
	rule__ClassifierFeatureList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureAssignment_1()); }
	(rule__ClassifierFeatureList__Classifier_featureAssignment_1)
	{ after(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeatureList__Group__2__Impl
	rule__ClassifierFeatureList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureListAccess().getGroup_2()); }
	(rule__ClassifierFeatureList__Group_2__0)*
	{ after(grammarAccess.getClassifierFeatureListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeatureList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureListAccess().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getClassifierFeatureListAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierFeatureList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeatureList__Group_2__0__Impl
	rule__ClassifierFeatureList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureListAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getClassifierFeatureListAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeatureList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureAssignment_2_1()); }
	(rule__ClassifierFeatureList__Classifier_featureAssignment_2_1)
	{ after(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierInfo__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierInfo__Group_0__0__Impl
	rule__ClassifierInfo__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierInfoAccess().getClassifierInfoAction_0_0()); }
	()
	{ after(grammarAccess.getClassifierInfoAccess().getClassifierInfoAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierInfo__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierInfoAccess().getDatatypeKeyword_0_1()); }
	'datatype'
	{ after(grammarAccess.getClassifierInfoAccess().getDatatypeKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierInfo__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierInfo__Group_3__0__Impl
	rule__ClassifierInfo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierInfoAccess().getIntermediateKeyword_3_0()); }
	('intermediate')?
	{ after(grammarAccess.getClassifierInfoAccess().getIntermediateKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierInfo__Group_3__1__Impl
	rule__ClassifierInfo__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierInfoAccess().getQualifierAssignment_3_1()); }
	(rule__ClassifierInfo__QualifierAssignment_3_1)*
	{ after(grammarAccess.getClassifierInfoAccess().getQualifierAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierInfo__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierInfoAccess().getClassKeyword_3_2()); }
	'class'
	{ after(grammarAccess.getClassifierInfoAccess().getClassKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierExtension__Group__0__Impl
	rule__ClassifierExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierExtensionAccess().getExtendsKeyword_0()); }
	'extends'
	{ after(grammarAccess.getClassifierExtensionAccess().getExtendsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierExtension__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierExtensionAccess().getScoped_identifier_listAssignment_1()); }
	(rule__ClassifierExtension__Scoped_identifier_listAssignment_1)
	{ after(grammarAccess.getClassifierExtensionAccess().getScoped_identifier_listAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierFeature__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeature__Group_0__0__Impl
	rule__ClassifierFeature__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureAccess().getFeature_qualifierAssignment_0_0()); }
	(rule__ClassifierFeature__Feature_qualifierAssignment_0_0)?
	{ after(grammarAccess.getClassifierFeatureAccess().getFeature_qualifierAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeature__Group_0__1__Impl
	rule__ClassifierFeature__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureAccess().getDeclaratorAssignment_0_1()); }
	(rule__ClassifierFeature__DeclaratorAssignment_0_1)
	{ after(grammarAccess.getClassifierFeatureAccess().getDeclaratorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeature__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureAccess().getAlternatives_0_2()); }
	(rule__ClassifierFeature__Alternatives_0_2)
	{ after(grammarAccess.getClassifierFeatureAccess().getAlternatives_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierFeature__Group_0_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeature__Group_0_2_0__0__Impl
	rule__ClassifierFeature__Group_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureAccess().getMultiplicityAssignment_0_2_0_0()); }
	(rule__ClassifierFeature__MultiplicityAssignment_0_2_0_0)?
	{ after(grammarAccess.getClassifierFeatureAccess().getMultiplicityAssignment_0_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassifierFeature__Group_0_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Group_0_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierFeatureAccess().getOpposite_propertyAssignment_0_2_0_1()); }
	(rule__ClassifierFeature__Opposite_propertyAssignment_0_2_0_1)?
	{ after(grammarAccess.getClassifierFeatureAccess().getOpposite_propertyAssignment_0_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureQualifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureQualifier__Group__0__Impl
	rule__FeatureQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureQualifierAccess().getFeatureQualifierAction_0()); }
	()
	{ after(grammarAccess.getFeatureQualifierAccess().getFeatureQualifierAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureQualifier__Group__1__Impl
	rule__FeatureQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureQualifierAccess().getStereotype_qualifierAssignment_1()); }
	(rule__FeatureQualifier__Stereotype_qualifierAssignment_1)?
	{ after(grammarAccess.getFeatureQualifierAccess().getStereotype_qualifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureQualifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureQualifierAccess().getFeature_keyAssignment_2()); }
	(rule__FeatureQualifier__Feature_keyAssignment_2)*
	{ after(grammarAccess.getFeatureQualifierAccess().getFeature_keyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplicity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__0__Impl
	rule__Multiplicity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getMultiplicityAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__1__Impl
	rule__Multiplicity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getMultiplicity_rangeAssignment_1()); }
	(rule__Multiplicity__Multiplicity_rangeAssignment_1)
	{ after(grammarAccess.getMultiplicityAccess().getMultiplicity_rangeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplicity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getMultiplicityAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OppositeProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OppositeProperty__Group__0__Impl
	rule__OppositeProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOppositePropertyAccess().getOppositePropertyAction_0()); }
	()
	{ after(grammarAccess.getOppositePropertyAccess().getOppositePropertyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OppositeProperty__Group__1__Impl
	rule__OppositeProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOppositePropertyAccess().getOppositesKeyword_1()); }
	'opposites'
	{ after(grammarAccess.getOppositePropertyAccess().getOppositesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OppositeProperty__Group__2__Impl
	rule__OppositeProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOppositePropertyAccess().getTildeKeyword_2()); }
	('~')?
	{ after(grammarAccess.getOppositePropertyAccess().getTildeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OppositeProperty__Group__3__Impl
	rule__OppositeProperty__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOppositePropertyAccess().getNameAssignment_3()); }
	(rule__OppositeProperty__NameAssignment_3)
	{ after(grammarAccess.getOppositePropertyAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OppositeProperty__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOppositePropertyAccess().getMultiplicityAssignment_4()); }
	(rule__OppositeProperty__MultiplicityAssignment_4)?
	{ after(grammarAccess.getOppositePropertyAccess().getMultiplicityAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeQualifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group__0__Impl
	rule__StereotypeQualifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getStereotypeQualifierAction_0()); }
	()
	{ after(grammarAccess.getStereotypeQualifierAccess().getStereotypeQualifierAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group__1__Impl
	rule__StereotypeQualifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getLessThanSignLessThanSignKeyword_1()); }
	'<<'
	{ after(grammarAccess.getStereotypeQualifierAccess().getLessThanSignLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group__2__Impl
	rule__StereotypeQualifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getIdentifierAssignment_2()); }
	(rule__StereotypeQualifier__IdentifierAssignment_2)
	{ after(grammarAccess.getStereotypeQualifierAccess().getIdentifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group__3__Impl
	rule__StereotypeQualifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getGroup_3()); }
	(rule__StereotypeQualifier__Group_3__0)*
	{ after(grammarAccess.getStereotypeQualifierAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
	'>>'
	{ after(grammarAccess.getStereotypeQualifierAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeQualifier__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group_3__0__Impl
	rule__StereotypeQualifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getStereotypeQualifierAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StereotypeQualifier__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStereotypeQualifierAccess().getIdentifierAssignment_3_1()); }
	(rule__StereotypeQualifier__IdentifierAssignment_3_1)
	{ after(grammarAccess.getStereotypeQualifierAccess().getIdentifierAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitRefGO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRefGO__Group__0__Impl
	rule__UnitRefGO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefGOAccess().getUnitRefGOAction_0()); }
	()
	{ after(grammarAccess.getUnitRefGOAccess().getUnitRefGOAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRefGO__Group__1__Impl
	rule__UnitRefGO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefGOAccess().getIdentifierAssignment_1()); }
	(rule__UnitRefGO__IdentifierAssignment_1)
	{ after(grammarAccess.getUnitRefGOAccess().getIdentifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRefGO__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefGOAccess().getGroup_2()); }
	(rule__UnitRefGO__Group_2__0)*
	{ after(grammarAccess.getUnitRefGOAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitRefGO__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRefGO__Group_2__0__Impl
	rule__UnitRefGO__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefGOAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getUnitRefGOAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitRefGO__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitRefGOAccess().getIdentifierAssignment_2_1()); }
	(rule__UnitRefGO__IdentifierAssignment_2_1)
	{ after(grammarAccess.getUnitRefGOAccess().getIdentifierAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelGO__ModuleimportAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelGOAccess().getModuleimportModuleImportParserRuleCall_1_0()); }
		ruleModuleImport
		{ after(grammarAccess.getTopLevelGOAccess().getModuleimportModuleImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelGO__Unit_elementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelGOAccess().getUnit_elementModuleParserRuleCall_2_0()); }
		ruleModule
		{ after(grammarAccess.getTopLevelGOAccess().getUnit_elementModuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__UnitAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleImportAccess().getUnitUnitRefGOParserRuleCall_0_1_0()); }
		ruleUnitRefGO
		{ after(grammarAccess.getModuleImportAccess().getUnitUnitRefGOParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__IdentifierAssignment_0_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleImportAccess().getIdentifierIDTerminalRuleCall_0_3_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleImportAccess().getIdentifierIDTerminalRuleCall_0_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__IdentifierAssignment_0_3_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleImportAccess().getIdentifierIDTerminalRuleCall_0_3_0_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleImportAccess().getIdentifierIDTerminalRuleCall_0_3_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleImport__UnitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleImportAccess().getUnitUnitRefGOParserRuleCall_1_1_0()); }
		ruleUnitRefGO
		{ after(grammarAccess.getModuleImportAccess().getUnitUnitRefGOParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Entry_headerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryOperationAccess().getEntry_headerEntryHeaderParserRuleCall_0_0()); }
		ruleEntryHeader
		{ after(grammarAccess.getEntryOperationAccess().getEntry_headerEntryHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryOperation__Expression_blockAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryOperationAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getEntryOperationAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionGO__DummyContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionGOAccess().getDummyContentEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getExpressionGOAccess().getDummyContentEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Compliance_kindAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeAccess().getCompliance_kindSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getModelTypeAccess().getCompliance_kindSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Packageref_listAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeAccess().getPackageref_listPackageRefGOParserRuleCall_4_0()); }
		rulePackageRefGO
		{ after(grammarAccess.getModelTypeAccess().getPackageref_listPackageRefGOParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Packageref_listAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeAccess().getPackageref_listPackageRefGOParserRuleCall_5_1_0()); }
		rulePackageRefGO
		{ after(grammarAccess.getModelTypeAccess().getPackageref_listPackageRefGOParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelType__Modeltype_whereAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelTypeAccess().getModeltype_whereExpressionBlockParserRuleCall_6_1_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getModelTypeAccess().getModeltype_whereExpressionBlockParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Constructor_headerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getConstructor_headerConstructorHeaderParserRuleCall_0_0()); }
		ruleConstructorHeader
		{ after(grammarAccess.getConstructorAccess().getConstructor_headerConstructorHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Expression_blockAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getConstructorAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__Property_keyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextualPropertyAccess().getProperty_keyPropertyKeyEnumRuleCall_1_0()); }
		rulePropertyKey
		{ after(grammarAccess.getContextualPropertyAccess().getProperty_keyPropertyKeyEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextualProperty__DeclaratorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextualPropertyAccess().getDeclaratorDeclaratorParserRuleCall_2_0()); }
		ruleDeclarator
		{ after(grammarAccess.getContextualPropertyAccess().getDeclaratorDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Helper_headerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getHelper_headerHelperHeaderParserRuleCall_0_0()); }
		ruleHelperHeader
		{ after(grammarAccess.getHelperAccess().getHelper_headerHelperHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__ExpressionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getExpressionExpressionGOParserRuleCall_1_1_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getHelperAccess().getExpressionExpressionGOParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helper__Expression_blockAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperAccess().getExpression_blockExpressionBlockParserRuleCall_1_2_0_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getHelperAccess().getExpression_blockExpressionBlockParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Library_hAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getLibrary_hLibraryHeaderParserRuleCall_0_0()); }
		ruleLibraryHeader
		{ after(grammarAccess.getLibraryAccess().getLibrary_hLibraryHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Library__Module_elementAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryAccess().getModule_elementImperativeOperationParserRuleCall_1_1_1_0()); }
		ruleImperativeOperation
		{ after(grammarAccess.getLibraryAccess().getModule_elementImperativeOperationParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Mapping_full_headerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingOperationAccess().getMapping_full_headerMappingFullHeaderParserRuleCall_0_0()); }
		ruleMappingFullHeader
		{ after(grammarAccess.getMappingOperationAccess().getMapping_full_headerMappingFullHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingOperation__Mapping_bodyAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingOperationAccess().getMapping_bodyMappingBodyParserRuleCall_1_1_1_0()); }
		ruleMappingBody
		{ after(grammarAccess.getMappingOperationAccess().getMapping_bodyMappingBodyParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Transformation_hAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationalTransformationAccess().getTransformation_hTransformationHeaderParserRuleCall_0_0()); }
		ruleTransformationHeader
		{ after(grammarAccess.getOperationalTransformationAccess().getTransformation_hTransformationHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationalTransformation__Module_elementAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationalTransformationAccess().getModule_elementImperativeOperationParserRuleCall_1_1_1_0()); }
		ruleImperativeOperation
		{ after(grammarAccess.getOperationalTransformationAccess().getModule_elementImperativeOperationParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__TagidAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagGOAccess().getTagidSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTagGOAccess().getTagidSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__Scoped_identifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_2_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getTagGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TagGO__TagvalueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagGOAccess().getTagvalueExpressionGOParserRuleCall_3_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getTagGOAccess().getTagvalueExpressionGOParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Metamodel_hAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelGOAccess().getMetamodel_hMetaModelHeaderParserRuleCall_0_0()); }
		ruleMetaModelHeader
		{ after(grammarAccess.getMetaModelGOAccess().getMetamodel_hMetaModelHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelGO__Metamodel_elementAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelGOAccess().getMetamodel_elementMetaModelElementParserRuleCall_1_1_1_0()); }
		ruleMetaModelElement
		{ after(grammarAccess.getMetaModelGOAccess().getMetamodel_elementMetaModelElementParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessDecl__Access_usageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessDeclAccess().getAccess_usageAccessUsageParserRuleCall_0_0()); }
		ruleAccessUsage
		{ after(grammarAccess.getAccessDeclAccess().getAccess_usageAccessUsageParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__TypespecAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getTypespecTypeSpecParserRuleCall_3_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getTypeDefAccess().getTypespecTypeSpecParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Typedef_conditionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getTypedef_conditionExpressionGOParserRuleCall_4_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getTypeDefAccess().getTypedef_conditionExpressionGOParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Classifier_hAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierGOAccess().getClassifier_hClassifierHeaderParserRuleCall_0_0()); }
		ruleClassifierHeader
		{ after(grammarAccess.getClassifierGOAccess().getClassifier_hClassifierHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierGO__Classifier_feature_listAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierGOAccess().getClassifier_feature_listClassifierFeatureListParserRuleCall_1_1_1_0()); }
		ruleClassifierFeatureList
		{ after(grammarAccess.getClassifierGOAccess().getClassifier_feature_listClassifierFeatureListParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarParameter__KindAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarParameterAccess().getKindDirectionKindEnumRuleCall_0_0()); }
		ruleDirectionKind
		{ after(grammarAccess.getVarParameterAccess().getKindDirectionKindEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarParameter__DeclaratorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarParameterAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getVarParameterAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryHeader__Simple_signatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryHeaderAccess().getSimple_signatureSimpleSignatureParserRuleCall_1_0()); }
		ruleSimpleSignature
		{ after(grammarAccess.getEntryHeaderAccess().getSimple_signatureSimpleSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBlock__Expression_listAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBlockAccess().getExpression_listExpressionListParserRuleCall_2_0()); }
		ruleExpressionList
		{ after(grammarAccess.getExpressionBlockAccess().getExpression_listExpressionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__InitSectionAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingBodyAccess().getInitSectionExpressionGOParserRuleCall_1_2_0_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getMappingBodyAccess().getInitSectionExpressionGOParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__InitSectionAssignment_1_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingBodyAccess().getInitSectionExpressionGOParserRuleCall_1_2_1_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getMappingBodyAccess().getInitSectionExpressionGOParserRuleCall_1_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__Population_sectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingBodyAccess().getPopulation_sectionPopulationSectionParserRuleCall_2_0()); }
		rulePopulationSection
		{ after(grammarAccess.getMappingBodyAccess().getPopulation_sectionPopulationSectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__EndSectionAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingBodyAccess().getEndSectionExpressionGOParserRuleCall_3_2_0_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getMappingBodyAccess().getEndSectionExpressionGOParserRuleCall_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingBody__EndSectionAssignment_3_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingBodyAccess().getEndSectionExpressionGOParserRuleCall_3_2_1_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getMappingBodyAccess().getEndSectionExpressionGOParserRuleCall_3_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Expression_listAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPopulationSectionAccess().getExpression_listExpressionListParserRuleCall_0_1_0()); }
		ruleExpressionList
		{ after(grammarAccess.getPopulationSectionAccess().getExpression_listExpressionListParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PopulationSection__Expression_blockAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPopulationSectionAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getPopulationSectionAccess().getExpression_blockExpressionBlockParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Expression_semi_listAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionListAccess().getExpression_semi_listExpressionSemiListParserRuleCall_0_0()); }
		ruleExpressionSemiList
		{ after(grammarAccess.getExpressionListAccess().getExpression_semi_listExpressionSemiListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionSemiListAccess().getExpressionExpressionGOParserRuleCall_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getExpressionSemiListAccess().getExpressionExpressionGOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSemiList__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionSemiListAccess().getExpressionExpressionGOParserRuleCall_2_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getExpressionSemiListAccess().getExpressionExpressionGOParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__TypespecAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getTypespecTypeSpecParserRuleCall_0_0_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getDeclaratorAccess().getTypespecTypeSpecParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Init_partAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getInit_partInitPartParserRuleCall_0_1_0()); }
		ruleInitPart
		{ after(grammarAccess.getDeclaratorAccess().getInit_partInitPartParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Scoped_identifierAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getDeclaratorAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__TypespecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getTypespecTypeSpecParserRuleCall_1_2_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getDeclaratorAccess().getTypespecTypeSpecParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declarator__Init_partAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorAccess().getInit_partInitPartParserRuleCall_1_3_0()); }
		ruleInitPart
		{ after(grammarAccess.getDeclaratorAccess().getInit_partInitPartParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Type_referenceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getType_referenceTypeReferenceParserRuleCall_0_0()); }
		ruleTypeReference
		{ after(grammarAccess.getTypeSpecAccess().getType_referenceTypeReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSpec__Extent_locationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSpecAccess().getExtent_locationIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeSpecAccess().getExtent_locationIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPart__Init_opAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitPartAccess().getInit_opAlternatives_0_0()); }
		(rule__InitPart__Init_opAlternatives_0_0)
		{ after(grammarAccess.getInitPartAccess().getInit_opAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitPart__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitPartAccess().getExpressionExpressionGOParserRuleCall_1_0()); }
		ruleExpressionGO
		{ after(grammarAccess.getInitPartAccess().getExpressionExpressionGOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__IdentifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedIdentifierAccess().getIdentifierIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScopedIdentifierAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifier__IdentifierAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedIdentifierAccess().getIdentifierIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScopedIdentifierAccess().getIdentifierIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Scoped_identifierAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getScoped_identifierScopedIdentifierParserRuleCall_0_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getTypeReferenceAccess().getScoped_identifierScopedIdentifierParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Complex_typeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeReferenceAccess().getComplex_typeComplexTypeParserRuleCall_1_0()); }
		ruleComplexType
		{ after(grammarAccess.getTypeReferenceAccess().getComplex_typeComplexTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Complex_type_keyAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getComplex_type_keyComplexTypeKeyEnumRuleCall_0_1_0()); }
		ruleComplexTypeKey
		{ after(grammarAccess.getComplexTypeAccess().getComplex_type_keyComplexTypeKeyEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Collection_keyAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getCollection_keyCollectionKeyEnumRuleCall_1_0_0()); }
		ruleCollectionKey
		{ after(grammarAccess.getComplexTypeAccess().getCollection_keyCollectionKeyEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__TypespecAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_1_2_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__TypespecAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_2_2_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__TypespecAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_2_4_0()); }
		ruleTypeSpec
		{ after(grammarAccess.getComplexTypeAccess().getTypespecTypeSpecParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Declarator_listAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTypeAccess().getDeclarator_listDeclaratorListParserRuleCall_3_2_0()); }
		ruleDeclaratorList
		{ after(grammarAccess.getComplexTypeAccess().getDeclarator_listDeclaratorListParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__DeclaratorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorListAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getDeclaratorListAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaratorList__DeclaratorAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclaratorListAccess().getDeclaratorDeclaratorParserRuleCall_2_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getDeclaratorListAccess().getDeclaratorDeclaratorParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSignature__Param_listAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSignatureAccess().getParam_listParamListParserRuleCall_2_0()); }
		ruleParamList
		{ after(grammarAccess.getSimpleSignatureAccess().getParam_listParamListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__ParamAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getParamVarParameterParserRuleCall_1_0()); }
		ruleVarParameter
		{ after(grammarAccess.getParamListAccess().getParamVarParameterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamList__ParamAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamListAccess().getParamVarParameterParserRuleCall_2_1_0()); }
		ruleVarParameter
		{ after(grammarAccess.getParamListAccess().getParamVarParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__Scoped_identifierAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageRefGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0_0_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getPackageRefGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__UriAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageRefGOAccess().getUriSTRINGTerminalRuleCall_1_0_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPackageRefGOAccess().getUriSTRINGTerminalRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageRefGO__UriAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageRefGOAccess().getUriSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPackageRefGOAccess().getUriSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__QualifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0()); }
		ruleGeneralQualifier
		{ after(grammarAccess.getConstructorHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Scoped_identifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_2_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getConstructorHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorHeader__Simple_signatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorHeaderAccess().getSimple_signatureSimpleSignatureParserRuleCall_3_0()); }
		ruleSimpleSignature
		{ after(grammarAccess.getConstructorHeaderAccess().getSimple_signatureSimpleSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Helper_infoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperHeaderAccess().getHelper_infoHelperInfoParserRuleCall_0_0()); }
		ruleHelperInfo
		{ after(grammarAccess.getHelperHeaderAccess().getHelper_infoHelperInfoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Scope_identifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperHeaderAccess().getScope_identifierScopedIdentifierParserRuleCall_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getHelperHeaderAccess().getScope_identifierScopedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperHeader__Complete_signatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperHeaderAccess().getComplete_signatureCompleteSignatureParserRuleCall_2_0()); }
		ruleCompleteSignature
		{ after(grammarAccess.getHelperHeaderAccess().getComplete_signatureCompleteSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__QualifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperInfoAccess().getQualifierGeneralQualifierEnumRuleCall_1_0()); }
		ruleGeneralQualifier
		{ after(grammarAccess.getHelperInfoAccess().getQualifierGeneralQualifierEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HelperInfo__Helper_kindAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelperInfoAccess().getHelper_kindHelperKindEnumRuleCall_2_0()); }
		ruleHelperKind
		{ after(grammarAccess.getHelperInfoAccess().getHelper_kindHelperKindEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Simple_signatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompleteSignatureAccess().getSimple_signatureSimpleSignatureParserRuleCall_0_0()); }
		ruleSimpleSignature
		{ after(grammarAccess.getCompleteSignatureAccess().getSimple_signatureSimpleSignatureParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompleteSignature__Param_listAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompleteSignatureAccess().getParam_listParamListParserRuleCall_1_1_0()); }
		ruleParamList
		{ after(grammarAccess.getCompleteSignatureAccess().getParam_listParamListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryHeaderAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getLibraryHeaderAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Library_signatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryHeaderAccess().getLibrary_signatureSimpleSignatureParserRuleCall_3_0()); }
		ruleSimpleSignature
		{ after(grammarAccess.getLibraryHeaderAccess().getLibrary_signatureSimpleSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LibraryHeader__Module_usageAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLibraryHeaderAccess().getModule_usageModuleUsageGOParserRuleCall_4_0()); }
		ruleModuleUsageGO
		{ after(grammarAccess.getLibraryHeaderAccess().getModule_usageModuleUsageGOParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleUsageGO__Access_usageAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleUsageGOAccess().getAccess_usageAccessUsageParserRuleCall_0_1_0()); }
		ruleAccessUsage
		{ after(grammarAccess.getModuleUsageGOAccess().getAccess_usageAccessUsageParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleUsageGO__Extends_usageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleUsageGOAccess().getExtends_usageExtendsUsageParserRuleCall_1_0()); }
		ruleExtendsUsage
		{ after(grammarAccess.getModuleUsageGOAccess().getExtends_usageExtendsUsageParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Module_kindAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessUsageAccess().getModule_kindModuleKindEnumRuleCall_2_0()); }
		ruleModuleKind
		{ after(grammarAccess.getAccessUsageAccess().getModule_kindModuleKindEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Moduleref_listAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessUsageAccess().getModuleref_listModuleRefGOParserRuleCall_3_0()); }
		ruleModuleRefGO
		{ after(grammarAccess.getAccessUsageAccess().getModuleref_listModuleRefGOParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessUsage__Moduleref_listAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessUsageAccess().getModuleref_listModuleRefGOParserRuleCall_4_1_0()); }
		ruleModuleRefGO
		{ after(grammarAccess.getAccessUsageAccess().getModuleref_listModuleRefGOParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Module_kindAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsUsageAccess().getModule_kindModuleKindEnumRuleCall_2_0()); }
		ruleModuleKind
		{ after(grammarAccess.getExtendsUsageAccess().getModule_kindModuleKindEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Moduleref_listAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsUsageAccess().getModuleref_listModuleRefGOParserRuleCall_3_0()); }
		ruleModuleRefGO
		{ after(grammarAccess.getExtendsUsageAccess().getModuleref_listModuleRefGOParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsUsage__Moduleref_listAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsUsageAccess().getModuleref_listModuleRefGOParserRuleCall_4_1_0()); }
		ruleModuleRefGO
		{ after(grammarAccess.getExtendsUsageAccess().getModuleref_listModuleRefGOParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRefGO__Scoped_identifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleRefGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_0_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getModuleRefGOAccess().getScoped_identifierScopedIdentifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRefGO__Simple_signatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleRefGOAccess().getSimple_signatureSimpleSignatureParserRuleCall_1_0()); }
		ruleSimpleSignature
		{ after(grammarAccess.getModuleRefGOAccess().getSimple_signatureSimpleSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__Mapping_headerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFullHeaderAccess().getMapping_headerMappingHeaderParserRuleCall_0_0()); }
		ruleMappingHeader
		{ after(grammarAccess.getMappingFullHeaderAccess().getMapping_headerMappingHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__WhenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFullHeaderAccess().getWhenExpressionBlockParserRuleCall_1_1_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getMappingFullHeaderAccess().getWhenExpressionBlockParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingFullHeader__WhereAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFullHeaderAccess().getWhereExpressionBlockParserRuleCall_2_1_0()); }
		ruleExpressionBlock
		{ after(grammarAccess.getMappingFullHeaderAccess().getWhereExpressionBlockParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__QualifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0()); }
		ruleGeneralQualifier
		{ after(grammarAccess.getMappingHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Param_directionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingHeaderAccess().getParam_directionDirectionKindEnumRuleCall_2_0()); }
		ruleDirectionKind
		{ after(grammarAccess.getMappingHeaderAccess().getParam_directionDirectionKindEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Scoped_identifierAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_3_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getMappingHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Complete_signatureAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingHeaderAccess().getComplete_signatureCompleteSignatureParserRuleCall_4_0()); }
		ruleCompleteSignature
		{ after(grammarAccess.getMappingHeaderAccess().getComplete_signatureCompleteSignatureParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingHeader__Mapping_extraAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingHeaderAccess().getMapping_extraMappingExtraParserRuleCall_5_0()); }
		ruleMappingExtra
		{ after(grammarAccess.getMappingHeaderAccess().getMapping_extraMappingExtraParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtra__Mapping_extensionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtraAccess().getMapping_extensionMappingExtensionParserRuleCall_0_1_0()); }
		ruleMappingExtension
		{ after(grammarAccess.getMappingExtraAccess().getMapping_extensionMappingExtensionParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtra__Mapping_refinementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtraAccess().getMapping_refinementMappingRefinementParserRuleCall_1_0()); }
		ruleMappingRefinement
		{ after(grammarAccess.getMappingExtraAccess().getMapping_refinementMappingRefinementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtension__Mapping_extension_keyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtensionAccess().getMapping_extension_keyMappingExtensionKeyEnumRuleCall_0_0()); }
		ruleMappingExtensionKey
		{ after(grammarAccess.getMappingExtensionAccess().getMapping_extension_keyMappingExtensionKeyEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingExtension__Scoped_identifier_listAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingExtensionAccess().getScoped_identifier_listScopedIdentifierListParserRuleCall_1_0()); }
		ruleScopedIdentifierList
		{ after(grammarAccess.getMappingExtensionAccess().getScoped_identifier_listScopedIdentifierListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingRefinement__Scoped_identifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingRefinementAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getMappingRefinementAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Scoped_identifier_listAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listScopedIdentifierParserRuleCall_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listScopedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopedIdentifierList__Scoped_identifier_listAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listScopedIdentifierParserRuleCall_2_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getScopedIdentifierListAccess().getScoped_identifier_listScopedIdentifierParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__QualifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0()); }
		ruleGeneralQualifier
		{ after(grammarAccess.getTransformationHeaderAccess().getQualifierGeneralQualifierEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationHeaderAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTransformationHeaderAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Transformation_signatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationHeaderAccess().getTransformation_signatureSimpleSignatureParserRuleCall_3_0()); }
		ruleSimpleSignature
		{ after(grammarAccess.getTransformationHeaderAccess().getTransformation_signatureSimpleSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationHeader__Transformation_usage_refineAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationHeaderAccess().getTransformation_usage_refineTransformationUsageRefineParserRuleCall_4_0()); }
		ruleTransformationUsageRefine
		{ after(grammarAccess.getTransformationHeaderAccess().getTransformation_usage_refineTransformationUsageRefineParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Module_usageAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationUsageRefineAccess().getModule_usageModuleUsageGOParserRuleCall_0_1_0()); }
		ruleModuleUsageGO
		{ after(grammarAccess.getTransformationUsageRefineAccess().getModule_usageModuleUsageGOParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationUsageRefine__Transformation_refineAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationUsageRefineAccess().getTransformation_refineModuleRefGOParserRuleCall_1_1_0()); }
		ruleModuleRefGO
		{ after(grammarAccess.getTransformationUsageRefineAccess().getTransformation_refineModuleRefGOParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelHeader__Scoped_identifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getMetaModelHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__ClassifierAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelElementAccess().getClassifierClassifierGOParserRuleCall_0_1_0()); }
		ruleClassifierGO
		{ after(grammarAccess.getMetaModelElementAccess().getClassifierClassifierGOParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__EnumerationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelElementAccess().getEnumerationEnumerationGOParserRuleCall_1_0()); }
		ruleEnumerationGO
		{ after(grammarAccess.getMetaModelElementAccess().getEnumerationEnumerationGOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModelElement__TagAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaModelElementAccess().getTagTagGOParserRuleCall_2_0()); }
		ruleTagGO
		{ after(grammarAccess.getMetaModelElementAccess().getTagTagGOParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__Enumeration_hAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationGOAccess().getEnumeration_hEnumerationHeaderParserRuleCall_1_0()); }
		ruleEnumerationHeader
		{ after(grammarAccess.getEnumerationGOAccess().getEnumeration_hEnumerationHeaderParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__IdentifierAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationGOAccess().getIdentifierEStringParserRuleCall_2_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getEnumerationGOAccess().getIdentifierEStringParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationGO__IdentifierAssignment_2_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationGOAccess().getIdentifierEStringParserRuleCall_2_1_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getEnumerationGOAccess().getIdentifierEStringParserRuleCall_2_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationHeader__IdentifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationHeaderAccess().getIdentifierIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationHeaderAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Classifier_infoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierHeaderAccess().getClassifier_infoClassifierInfoParserRuleCall_0_0()); }
		ruleClassifierInfo
		{ after(grammarAccess.getClassifierHeaderAccess().getClassifier_infoClassifierInfoParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Scoped_identifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0()); }
		ruleScopedIdentifier
		{ after(grammarAccess.getClassifierHeaderAccess().getScoped_identifierScopedIdentifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierHeader__Classifier_extensionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierHeaderAccess().getClassifier_extensionClassifierExtensionParserRuleCall_2_0()); }
		ruleClassifierExtension
		{ after(grammarAccess.getClassifierHeaderAccess().getClassifier_extensionClassifierExtensionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Classifier_featureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureClassifierFeatureParserRuleCall_1_0()); }
		ruleClassifierFeature
		{ after(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureClassifierFeatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeatureList__Classifier_featureAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureClassifierFeatureParserRuleCall_2_1_0()); }
		ruleClassifierFeature
		{ after(grammarAccess.getClassifierFeatureListAccess().getClassifier_featureClassifierFeatureParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierInfo__QualifierAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierInfoAccess().getQualifierGeneralQualifierEnumRuleCall_3_1_0()); }
		ruleGeneralQualifier
		{ after(grammarAccess.getClassifierInfoAccess().getQualifierGeneralQualifierEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierExtension__Scoped_identifier_listAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierExtensionAccess().getScoped_identifier_listScopedIdentifierListParserRuleCall_1_0()); }
		ruleScopedIdentifierList
		{ after(grammarAccess.getClassifierExtensionAccess().getScoped_identifier_listScopedIdentifierListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Feature_qualifierAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getFeature_qualifierFeatureQualifierParserRuleCall_0_0_0()); }
		ruleFeatureQualifier
		{ after(grammarAccess.getClassifierFeatureAccess().getFeature_qualifierFeatureQualifierParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__DeclaratorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0()); }
		ruleDeclarator
		{ after(grammarAccess.getClassifierFeatureAccess().getDeclaratorDeclaratorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__MultiplicityAssignment_0_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getMultiplicityMultiplicityParserRuleCall_0_2_0_0_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getClassifierFeatureAccess().getMultiplicityMultiplicityParserRuleCall_0_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Opposite_propertyAssignment_0_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getOpposite_propertyOppositePropertyParserRuleCall_0_2_0_1_0()); }
		ruleOppositeProperty
		{ after(grammarAccess.getClassifierFeatureAccess().getOpposite_propertyOppositePropertyParserRuleCall_0_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__Complete_signatureAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getComplete_signatureCompleteSignatureParserRuleCall_0_2_1_0()); }
		ruleCompleteSignature
		{ after(grammarAccess.getClassifierFeatureAccess().getComplete_signatureCompleteSignatureParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierFeature__TagAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierFeatureAccess().getTagTagGOParserRuleCall_1_0()); }
		ruleTagGO
		{ after(grammarAccess.getClassifierFeatureAccess().getTagTagGOParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Stereotype_qualifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureQualifierAccess().getStereotype_qualifierStereotypeQualifierParserRuleCall_1_0()); }
		ruleStereotypeQualifier
		{ after(grammarAccess.getFeatureQualifierAccess().getStereotype_qualifierStereotypeQualifierParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureQualifier__Feature_keyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureQualifierAccess().getFeature_keyFeatureKeyEnumRuleCall_2_0()); }
		ruleFeatureKey
		{ after(grammarAccess.getFeatureQualifierAccess().getFeature_keyFeatureKeyEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplicity__Multiplicity_rangeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicityAccess().getMultiplicity_rangeMULTIPLICITYRANGETerminalRuleCall_1_0()); }
		RULE_MULTIPLICITYRANGE
		{ after(grammarAccess.getMultiplicityAccess().getMultiplicity_rangeMULTIPLICITYRANGETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOppositePropertyAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getOppositePropertyAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OppositeProperty__MultiplicityAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOppositePropertyAccess().getMultiplicityMultiplicityParserRuleCall_4_0()); }
		ruleMultiplicity
		{ after(grammarAccess.getOppositePropertyAccess().getMultiplicityMultiplicityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__IdentifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStereotypeQualifierAccess().getIdentifierIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStereotypeQualifierAccess().getIdentifierIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeQualifier__IdentifierAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStereotypeQualifierAccess().getIdentifierIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStereotypeQualifierAccess().getIdentifierIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__IdentifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitRefGOAccess().getIdentifierIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitRefGOAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitRefGO__IdentifierAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitRefGOAccess().getIdentifierIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitRefGOAccess().getIdentifierIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_MULTIPLICITYRANGE : (RULE_INT|'*'|RULE_INT '...' RULE_INT|RULE_INT '...' '*');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
