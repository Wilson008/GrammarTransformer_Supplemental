/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydot.formatting2

import com.google.inject.Inject
import dot.DotAst
import dot.DotGraph
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydot.services.MyDotGrammarAccess

class MyDotFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDotGrammarAccess

	def dispatch void format(DotAst dotAst, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (dotGraph : dotAst.graphs) {
			dotGraph.format
		}
	}

	def dispatch void format(DotGraph dotGraph, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (stmt : dotGraph.stmts) {
			stmt.format
		}
	}
	
	// TODO: implement for EdgeStmtNode, EdgeStmtSubgraph, NodeStmt, AttrStmt, Subgraph, NodeId, AttrList, EdgeRhsNode, EdgeRhsSubgraph
}
