/*
 * generated by Xtext 2.25.0
 */
package org.prettyprinter.sml.formatting2

import com.google.inject.Inject
import org.eclipse.emf.ecore.EPackage
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.prettyprinter.sml.services.SMLGrammarAccess
import org.scenariotools.sml.Specification

class SMLFormatter extends AbstractFormatter2 {
	
	@Inject extension SMLGrammarAccess

	def dispatch void format(Specification specification, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (_import : specification.imports) {
			_import.format
		}
		for (collaboration : specification.containedCollaborations) {
			collaboration.format
		}
		for (eventParameterRanges : specification.eventParameterRanges) {
			eventParameterRanges.format
		}
		specification.channelOptions.format
	}

	def dispatch void format(EPackage ePackage, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (eAnnotation : ePackage.EAnnotations) {
			eAnnotation.format
		}
		for (eClassifier : ePackage.EClassifiers) {
			eClassifier.format
		}
		for (_ePackage : ePackage.ESubpackages) {
			_ePackage.format
		}
	}
	
	// TODO: implement for EClass, Collaboration, EventParameterRanges, ChannelOptions, EAnnotation, ETypeParameter, EDataType, EEnum, EGenericType, EEnumLiteral, EOperation, EParameter, EAttribute, EReference, Scenario, RoleBindingConstraint, Interaction, FeatureAccessBindingExpression, ObjectQueryBindingExpression, ValueParameterExpression, VariableBindingParameterExpression, FeatureAccess, CollectionAccess, SubFeatureAccess, VariableDeclaration, TypedVariableDeclaration, UnaryOperationExpression, BinaryOperationExpression, VariableAssignment, ClockDeclaration, ClockAssignment, ObjectQueryValue, ConstraintBlock, ExpressionRegion, ModalMessage, Alternative, Loop, Parallel, WaitCondition, InterruptCondition, ViolationCondition, Condition, VariableFragment, TimedViolationCondition, TimedInterruptCondition, TimedWaitCondition, ParameterBinding, Case, ConditionExpression, Message, RangesForParameter
}
